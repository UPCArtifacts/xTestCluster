import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager30.getEventsStates();
        double[] doubleArray35 = new double[] { 1L };
        boolean boolean36 = combinedEventsManager30.reset((double) (byte) 0, doubleArray35);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray35);
        org.apache.commons.math.ode.events.EventHandler eventHandler38 = null;
        combinedEventsManager0.addEventHandler(eventHandler38, (double) (byte) 100, (double) 10L, (-1));
        org.apache.commons.math.ode.events.EventHandler eventHandler43 = null;
        combinedEventsManager0.addEventHandler(eventHandler43, (double) (-1), (double) (short) 1, (int) '#');
        boolean boolean48 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        boolean boolean52 = combinedEventsManager50.stop();
        combinedEventsManager50.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager50.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.events.EventHandler eventHandler56 = null;
        combinedEventsManager50.addEventHandler(eventHandler56, (double) '#', 0.0d, 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection61 = combinedEventsManager50.getEventsStates();
        boolean boolean62 = combinedEventsManager50.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection66 = combinedEventsManager64.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = combinedEventsManager64.evaluateStep(stepInterpolator67);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection72 = combinedEventsManager70.getEventsStates();
        double[] doubleArray75 = new double[] { 1L };
        boolean boolean76 = combinedEventsManager70.reset((double) (byte) 0, doubleArray75);
        combinedEventsManager64.stepAccepted(0.0d, doubleArray75);
        boolean boolean78 = combinedEventsManager50.reset((double) 100, doubleArray75);
        boolean boolean79 = combinedEventsManager0.reset((double) (-1), doubleArray75);
        java.lang.Class<?> wildcardClass80 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(eventStateCollection61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(eventStateCollection66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(eventStateCollection72);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager15.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager15.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager20.getEventsStates();
        double[] doubleArray25 = new double[] { 1L };
        boolean boolean26 = combinedEventsManager20.reset((double) (byte) 0, doubleArray25);
        combinedEventsManager15.stepAccepted((double) (byte) 1, doubleArray25);
        combinedEventsManager0.stepAccepted((double) (byte) 100, doubleArray25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler42 = null;
        combinedEventsManager30.addEventHandler(eventHandler42, (double) '#', (double) 100L, 10);
        boolean boolean47 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager30.getEventsStates();
        double[] doubleArray51 = new double[] { '4' };
        boolean boolean52 = combinedEventsManager30.reset((double) (byte) 0, doubleArray51);
        boolean boolean53 = combinedEventsManager0.reset((double) (byte) 100, doubleArray51);
        org.apache.commons.math.ode.events.EventHandler eventHandler54 = null;
        combinedEventsManager0.addEventHandler(eventHandler54, (double) 0L, (double) ' ', (int) (short) 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass60 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        double[] doubleArray18 = null;
        boolean boolean19 = combinedEventsManager0.reset((double) 10, doubleArray18);
        boolean boolean20 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        double double25 = combinedEventsManager22.getEventTime();
        double double26 = combinedEventsManager22.getEventTime();
        boolean boolean27 = combinedEventsManager22.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = combinedEventsManager22.evaluateStep(stepInterpolator28);
        boolean boolean30 = combinedEventsManager22.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = combinedEventsManager32.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        double double39 = combinedEventsManager37.getEventTime();
        double double40 = combinedEventsManager37.getEventTime();
        double double41 = combinedEventsManager37.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager43 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean44 = combinedEventsManager43.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = combinedEventsManager43.evaluateStep(stepInterpolator45);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection47 = combinedEventsManager43.getEventsHandlers();
        double[] doubleArray54 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean55 = combinedEventsManager43.reset(0.0d, doubleArray54);
        combinedEventsManager37.stepAccepted((double) (short) 10, doubleArray54);
        combinedEventsManager32.stepAccepted(10.0d, doubleArray54);
        boolean boolean58 = combinedEventsManager32.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection59 = combinedEventsManager32.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        double double63 = combinedEventsManager61.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager61.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection69 = combinedEventsManager66.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager71 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean72 = combinedEventsManager71.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection73 = combinedEventsManager71.getEventsStates();
        double[] doubleArray76 = new double[] { 1L };
        boolean boolean77 = combinedEventsManager71.reset((double) (byte) 0, doubleArray76);
        combinedEventsManager66.stepAccepted((double) (byte) 1, doubleArray76);
        combinedEventsManager61.stepAccepted(1.0d, doubleArray76);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator80 = null;
        boolean boolean81 = combinedEventsManager61.evaluateStep(stepInterpolator80);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager83 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean84 = combinedEventsManager83.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection85 = combinedEventsManager83.getEventsStates();
        double[] doubleArray88 = new double[] { 1L };
        boolean boolean89 = combinedEventsManager83.reset((double) (byte) 0, doubleArray88);
        boolean boolean90 = combinedEventsManager61.reset((double) (byte) 100, doubleArray88);
        boolean boolean91 = combinedEventsManager32.reset(0.0d, doubleArray88);
        boolean boolean92 = combinedEventsManager22.reset((double) '4', doubleArray88);
        boolean boolean93 = combinedEventsManager0.reset((double) (byte) 1, doubleArray88);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(eventStateCollection69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventStateCollection73);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(eventStateCollection85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        double double4 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager6.getEventsStates();
        double[] doubleArray11 = new double[] { 1L };
        boolean boolean12 = combinedEventsManager6.reset((double) (byte) 0, doubleArray11);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray11);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass17 = eventStateCollection16.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        boolean boolean19 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager21.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager21.getEventsStates();
        boolean boolean25 = combinedEventsManager21.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        double double29 = combinedEventsManager27.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager27.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection34 = combinedEventsManager32.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager32.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection39 = combinedEventsManager37.getEventsStates();
        double[] doubleArray42 = new double[] { 1L };
        boolean boolean43 = combinedEventsManager37.reset((double) (byte) 0, doubleArray42);
        combinedEventsManager32.stepAccepted((double) (byte) 1, doubleArray42);
        combinedEventsManager27.stepAccepted(1.0d, doubleArray42);
        combinedEventsManager21.stepAccepted((double) 10.0f, doubleArray42);
        combinedEventsManager0.stepAccepted((double) (short) 1, doubleArray42);
        java.lang.Class<?> wildcardClass48 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventStateCollection34);
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventStateCollection39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        boolean boolean7 = combinedEventsManager0.stop();
        double[] doubleArray9 = null;
        boolean boolean10 = combinedEventsManager0.reset((double) (short) 10, doubleArray9);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        double double13 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager0.getEventsHandlers();
        double double15 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        double double13 = combinedEventsManager11.getEventTime();
        double double14 = combinedEventsManager11.getEventTime();
        boolean boolean15 = combinedEventsManager11.stop();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean20 = combinedEventsManager11.reset(1.0d, doubleArray19);
        boolean boolean21 = combinedEventsManager5.reset((double) (short) 1, doubleArray19);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray19);
        boolean boolean23 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        double double28 = combinedEventsManager26.getEventTime();
        double double29 = combinedEventsManager26.getEventTime();
        double double30 = combinedEventsManager26.getEventTime();
        boolean boolean31 = combinedEventsManager26.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager26.getEventsHandlers();
        boolean boolean33 = combinedEventsManager26.isEmpty();
        double double34 = combinedEventsManager26.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler35 = null;
        combinedEventsManager26.addEventHandler(eventHandler35, (double) (byte) 0, (double) 0, (int) (byte) 1);
        combinedEventsManager26.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager26.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager43 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean44 = combinedEventsManager43.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager43.getEventsStates();
        combinedEventsManager43.clearEventsHandlers();
        combinedEventsManager43.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager49 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean50 = combinedEventsManager49.stop();
        boolean boolean51 = combinedEventsManager49.isEmpty();
        double double52 = combinedEventsManager49.getEventTime();
        combinedEventsManager49.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        double double57 = combinedEventsManager55.getEventTime();
        double double58 = combinedEventsManager55.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager55.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        double double63 = combinedEventsManager61.getEventTime();
        double double64 = combinedEventsManager61.getEventTime();
        boolean boolean65 = combinedEventsManager61.stop();
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean70 = combinedEventsManager61.reset(1.0d, doubleArray69);
        boolean boolean71 = combinedEventsManager55.reset((double) (short) 1, doubleArray69);
        boolean boolean72 = combinedEventsManager49.reset((double) 10L, doubleArray69);
        boolean boolean73 = combinedEventsManager43.reset(0.0d, doubleArray69);
        boolean boolean74 = combinedEventsManager26.reset((double) 10.0f, doubleArray69);
        combinedEventsManager0.stepAccepted((double) (byte) 0, doubleArray69);
        boolean boolean76 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventStateCollection45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler10 = null;
        combinedEventsManager0.addEventHandler(eventHandler10, 0.0d, (double) '#', (-1));
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.lang.Class<?> wildcardClass7 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) (short) -1, (double) 0, 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        double double11 = combinedEventsManager7.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray24 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean25 = combinedEventsManager13.reset(0.0d, doubleArray24);
        combinedEventsManager7.stepAccepted((double) (short) 10, doubleArray24);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray24);
        double double28 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        boolean boolean19 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager14.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager14.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager19.getEventsStates();
        double[] doubleArray26 = new double[] { (-1.0f) };
        boolean boolean27 = combinedEventsManager19.reset((double) (short) 100, doubleArray26);
        combinedEventsManager14.stepAccepted((double) 10, doubleArray26);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray26);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager0.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager0.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        double double38 = combinedEventsManager36.getEventTime();
        double double39 = combinedEventsManager36.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager36.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        double double44 = combinedEventsManager42.getEventTime();
        double double45 = combinedEventsManager42.getEventTime();
        boolean boolean46 = combinedEventsManager42.stop();
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean51 = combinedEventsManager42.reset(1.0d, doubleArray50);
        boolean boolean52 = combinedEventsManager36.reset((double) (short) 1, doubleArray50);
        boolean boolean53 = combinedEventsManager0.reset((double) 100L, doubleArray50);
        double double54 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = combinedEventsManager0.evaluateStep(stepInterpolator55);
        boolean boolean57 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler59 = null;
        combinedEventsManager0.addEventHandler(eventHandler59, 0.0d, (double) (-1L), (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(eventStateCollection58);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        boolean boolean7 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean11 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean8 = combinedEventsManager0.stop();
        boolean boolean9 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = null;
        boolean boolean8 = combinedEventsManager0.reset((double) 1.0f, doubleArray7);
        boolean boolean9 = combinedEventsManager0.isEmpty();
        double[] doubleArray11 = null;
        boolean boolean12 = combinedEventsManager0.reset((double) (byte) 10, doubleArray11);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        double double23 = combinedEventsManager19.getEventTime();
        boolean boolean24 = combinedEventsManager19.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection25 = combinedEventsManager19.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager19.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager19.getEventsStates();
        boolean boolean28 = combinedEventsManager19.stop();
        boolean boolean29 = combinedEventsManager19.isEmpty();
        boolean boolean30 = combinedEventsManager19.isEmpty();
        double double31 = combinedEventsManager19.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager33.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager33.getEventsHandlers();
        double[] doubleArray43 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean44 = combinedEventsManager33.reset((double) (byte) 1, doubleArray43);
        org.apache.commons.math.ode.events.EventHandler eventHandler45 = null;
        combinedEventsManager33.addEventHandler(eventHandler45, (double) '#', (double) 100L, 10);
        boolean boolean50 = combinedEventsManager33.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager52.evaluateStep(stepInterpolator54);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection56 = combinedEventsManager52.getEventsHandlers();
        double[] doubleArray63 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean64 = combinedEventsManager52.reset(0.0d, doubleArray63);
        boolean boolean65 = combinedEventsManager33.reset((double) 10, doubleArray63);
        org.apache.commons.math.ode.events.EventHandler eventHandler66 = null;
        combinedEventsManager33.addEventHandler(eventHandler66, 10.0d, (double) (short) -1, (int) (byte) 1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager72 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean73 = combinedEventsManager72.stop();
        double double74 = combinedEventsManager72.getEventTime();
        double double75 = combinedEventsManager72.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection76 = combinedEventsManager72.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator77 = null;
        boolean boolean78 = combinedEventsManager72.evaluateStep(stepInterpolator77);
        boolean boolean79 = combinedEventsManager72.stop();
        combinedEventsManager72.clearEventsHandlers();
        combinedEventsManager72.clearEventsHandlers();
        double double82 = combinedEventsManager72.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection83 = combinedEventsManager72.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager85 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean86 = combinedEventsManager85.stop();
        double double87 = combinedEventsManager85.getEventTime();
        double double88 = combinedEventsManager85.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection89 = combinedEventsManager85.getEventsStates();
        double[] doubleArray92 = new double[] { (-1.0f) };
        boolean boolean93 = combinedEventsManager85.reset((double) (short) 100, doubleArray92);
        boolean boolean94 = combinedEventsManager72.reset((double) 0L, doubleArray92);
        boolean boolean95 = combinedEventsManager33.reset((double) 100, doubleArray92);
        combinedEventsManager19.stepAccepted((double) (byte) 10, doubleArray92);
        combinedEventsManager0.stepAccepted((double) 10, doubleArray92);
        java.lang.Class<?> wildcardClass98 = doubleArray92.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection25);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection56);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(eventHandlerCollection76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(eventHandlerCollection83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertNotNull(eventStateCollection89);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (double) (short) 100, (double) 1, (int) (byte) 1);
        org.apache.commons.math.ode.events.EventHandler eventHandler10 = null;
        combinedEventsManager0.addEventHandler(eventHandler10, (double) '#', (double) 10, (int) (byte) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager16.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager16.getEventsStates();
        combinedEventsManager16.clearEventsHandlers();
        double double21 = combinedEventsManager16.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        double double25 = combinedEventsManager23.getEventTime();
        double double26 = combinedEventsManager23.getEventTime();
        double double27 = combinedEventsManager23.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        double double31 = combinedEventsManager29.getEventTime();
        double double32 = combinedEventsManager29.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager29.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        double double37 = combinedEventsManager35.getEventTime();
        double double38 = combinedEventsManager35.getEventTime();
        boolean boolean39 = combinedEventsManager35.stop();
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean44 = combinedEventsManager35.reset(1.0d, doubleArray43);
        boolean boolean45 = combinedEventsManager29.reset((double) (short) 1, doubleArray43);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager47 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean48 = combinedEventsManager47.stop();
        double double49 = combinedEventsManager47.getEventTime();
        double double50 = combinedEventsManager47.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection51 = combinedEventsManager47.getEventsStates();
        double[] doubleArray54 = new double[] { (-1.0f) };
        boolean boolean55 = combinedEventsManager47.reset((double) (short) 100, doubleArray54);
        combinedEventsManager29.stepAccepted((double) 0.0f, doubleArray54);
        combinedEventsManager23.stepAccepted((double) 1L, doubleArray54);
        combinedEventsManager16.stepAccepted((double) (byte) 10, doubleArray54);
        boolean boolean59 = combinedEventsManager16.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager61.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection64 = combinedEventsManager61.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection65 = combinedEventsManager61.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler66 = null;
        combinedEventsManager61.addEventHandler(eventHandler66, (double) (short) 1, 10.0d, (int) (short) 10);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection71 = combinedEventsManager61.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager73 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean74 = combinedEventsManager73.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection75 = combinedEventsManager73.getEventsStates();
        combinedEventsManager73.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection77 = combinedEventsManager73.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager79 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean80 = combinedEventsManager79.stop();
        boolean boolean81 = combinedEventsManager79.stop();
        combinedEventsManager79.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection83 = combinedEventsManager79.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection84 = combinedEventsManager79.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager86 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean87 = combinedEventsManager86.stop();
        double double88 = combinedEventsManager86.getEventTime();
        double double89 = combinedEventsManager86.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection90 = combinedEventsManager86.getEventsStates();
        double[] doubleArray93 = new double[] { (-1.0f) };
        boolean boolean94 = combinedEventsManager86.reset((double) (short) 100, doubleArray93);
        boolean boolean95 = combinedEventsManager79.reset((double) 0, doubleArray93);
        combinedEventsManager73.stepAccepted((-1.0d), doubleArray93);
        boolean boolean97 = combinedEventsManager61.reset((double) 0L, doubleArray93);
        boolean boolean98 = combinedEventsManager16.reset((double) 1L, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted(Double.NaN, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(eventStateCollection51);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventStateCollection63);
        org.junit.Assert.assertNotNull(eventHandlerCollection64);
        org.junit.Assert.assertNotNull(eventHandlerCollection65);
        org.junit.Assert.assertNotNull(eventStateCollection71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(eventStateCollection75);
        org.junit.Assert.assertNotNull(eventStateCollection77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection83);
        org.junit.Assert.assertNotNull(eventStateCollection84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(eventStateCollection90);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        double[] doubleArray5 = new double[] { 1L };
        boolean boolean6 = combinedEventsManager0.reset((double) (byte) 0, doubleArray5);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection8 = combinedEventsManager0.getEventsHandlers();
        double double9 = combinedEventsManager0.getEventTime();
        double double10 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        org.apache.commons.math.ode.events.EventHandler eventHandler20 = null;
        combinedEventsManager0.addEventHandler(eventHandler20, (double) 1, (double) 'a', (int) '#');
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = combinedEventsManager0.evaluateStep(stepInterpolator28);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection30 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection30);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        boolean boolean3 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler4 = null;
        combinedEventsManager0.addEventHandler(eventHandler4, (double) 1.0f, (double) (short) 1, (int) (byte) 1);
        boolean boolean9 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        double double33 = combinedEventsManager30.getEventTime();
        double double34 = combinedEventsManager30.getEventTime();
        boolean boolean35 = combinedEventsManager30.stop();
        boolean boolean36 = combinedEventsManager30.stop();
        combinedEventsManager30.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager39.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection42 = combinedEventsManager39.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager44 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean45 = combinedEventsManager44.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection46 = combinedEventsManager44.getEventsStates();
        double[] doubleArray49 = new double[] { 1L };
        boolean boolean50 = combinedEventsManager44.reset((double) (byte) 0, doubleArray49);
        combinedEventsManager39.stepAccepted((double) (byte) 1, doubleArray49);
        combinedEventsManager30.stepAccepted((double) (short) 100, doubleArray49);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager54 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean55 = combinedEventsManager54.stop();
        double double56 = combinedEventsManager54.getEventTime();
        double double57 = combinedEventsManager54.getEventTime();
        double double58 = combinedEventsManager54.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager60 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean61 = combinedEventsManager60.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = combinedEventsManager60.evaluateStep(stepInterpolator62);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection64 = combinedEventsManager60.getEventsHandlers();
        double[] doubleArray71 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean72 = combinedEventsManager60.reset(0.0d, doubleArray71);
        combinedEventsManager54.stepAccepted((double) (short) 10, doubleArray71);
        combinedEventsManager30.stepAccepted((double) (-1L), doubleArray71);
        boolean boolean75 = combinedEventsManager0.reset(1.0d, doubleArray71);
        boolean boolean76 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertNotNull(eventStateCollection42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(eventStateCollection46);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection64);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        double double10 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray13 = null;
        combinedEventsManager0.stepAccepted((double) 0, doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        double double14 = combinedEventsManager0.getEventTime();
        double double15 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager0.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection19 = combinedEventsManager0.getEventsHandlers();
        boolean boolean20 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager0.evaluateStep(stepInterpolator21);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(eventHandlerCollection19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager0.getEventsStates();
        boolean boolean13 = combinedEventsManager0.isEmpty();
        boolean boolean14 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler15 = null;
        combinedEventsManager0.addEventHandler(eventHandler15, 0.0d, (double) (-1), 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        boolean boolean15 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = combinedEventsManager17.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager17.stepAccepted(0.0d, doubleArray28);
        boolean boolean31 = combinedEventsManager17.stop();
        combinedEventsManager17.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        double double36 = combinedEventsManager34.getEventTime();
        double double37 = combinedEventsManager34.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager34.getEventsStates();
        double[] doubleArray41 = new double[] { (-1.0f) };
        boolean boolean42 = combinedEventsManager34.reset((double) (short) 100, doubleArray41);
        boolean boolean43 = combinedEventsManager17.reset((double) (short) 0, doubleArray41);
        boolean boolean44 = combinedEventsManager17.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        double double50 = combinedEventsManager46.getEventTime();
        boolean boolean51 = combinedEventsManager46.stop();
        boolean boolean52 = combinedEventsManager46.stop();
        combinedEventsManager46.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager55.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager55.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager60 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean61 = combinedEventsManager60.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager60.getEventsStates();
        double[] doubleArray65 = new double[] { 1L };
        boolean boolean66 = combinedEventsManager60.reset((double) (byte) 0, doubleArray65);
        combinedEventsManager55.stepAccepted((double) (byte) 1, doubleArray65);
        combinedEventsManager46.stepAccepted((double) (short) 100, doubleArray65);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        double double72 = combinedEventsManager70.getEventTime();
        double double73 = combinedEventsManager70.getEventTime();
        double double74 = combinedEventsManager70.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager76 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean77 = combinedEventsManager76.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator78 = null;
        boolean boolean79 = combinedEventsManager76.evaluateStep(stepInterpolator78);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection80 = combinedEventsManager76.getEventsHandlers();
        double[] doubleArray87 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean88 = combinedEventsManager76.reset(0.0d, doubleArray87);
        combinedEventsManager70.stepAccepted((double) (short) 10, doubleArray87);
        combinedEventsManager46.stepAccepted((double) (-1L), doubleArray87);
        boolean boolean91 = combinedEventsManager17.reset(1.0d, doubleArray87);
        boolean boolean92 = combinedEventsManager0.reset((double) (byte) 0, doubleArray87);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection80);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        double double16 = combinedEventsManager13.getEventTime();
        double double17 = combinedEventsManager13.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        combinedEventsManager13.stepAccepted((double) (short) 10, doubleArray30);
        combinedEventsManager8.stepAccepted(10.0d, doubleArray30);
        boolean boolean34 = combinedEventsManager8.stop();
        boolean boolean35 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager37.evaluateStep(stepInterpolator39);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection41 = combinedEventsManager37.getEventsHandlers();
        double[] doubleArray47 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean48 = combinedEventsManager37.reset((double) (byte) 1, doubleArray47);
        org.apache.commons.math.ode.events.EventHandler eventHandler49 = null;
        combinedEventsManager37.addEventHandler(eventHandler49, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager55.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager55.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager60 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean61 = combinedEventsManager60.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager60.getEventsStates();
        double[] doubleArray65 = new double[] { 1L };
        boolean boolean66 = combinedEventsManager60.reset((double) (byte) 0, doubleArray65);
        combinedEventsManager55.stepAccepted((double) (byte) 1, doubleArray65);
        boolean boolean68 = combinedEventsManager37.reset((double) '4', doubleArray65);
        combinedEventsManager8.stepAccepted((double) 1, doubleArray65);
        boolean boolean70 = combinedEventsManager0.reset((double) 100.0f, doubleArray65);
        double double71 = combinedEventsManager0.getEventTime();
        boolean boolean72 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection73 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        double double76 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection73);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) 1L, (double) (byte) 10, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler27 = null;
        combinedEventsManager0.addEventHandler(eventHandler27, (double) (short) 10, (double) 1, 0);
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        org.apache.commons.math.ode.events.EventHandler eventHandler20 = null;
        combinedEventsManager0.addEventHandler(eventHandler20, (double) 1, (double) 'a', (int) '#');
        boolean boolean25 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager6.addEventHandler(eventHandler8, 0.0d, (double) 100.0f, (int) (short) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        double double16 = combinedEventsManager14.getEventTime();
        double double17 = combinedEventsManager14.getEventTime();
        double double18 = combinedEventsManager14.getEventTime();
        boolean boolean19 = combinedEventsManager14.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager14.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager14.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager14.getEventsStates();
        boolean boolean23 = combinedEventsManager14.stop();
        boolean boolean24 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager14.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager28.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        double double36 = combinedEventsManager34.getEventTime();
        double double37 = combinedEventsManager34.getEventTime();
        boolean boolean38 = combinedEventsManager34.stop();
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean43 = combinedEventsManager34.reset(1.0d, doubleArray42);
        boolean boolean44 = combinedEventsManager28.reset((double) (short) 1, doubleArray42);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager46.getEventsStates();
        double[] doubleArray53 = new double[] { (-1.0f) };
        boolean boolean54 = combinedEventsManager46.reset((double) (short) 100, doubleArray53);
        combinedEventsManager28.stepAccepted((double) 0.0f, doubleArray53);
        boolean boolean56 = combinedEventsManager14.reset((double) 0, doubleArray53);
        boolean boolean57 = combinedEventsManager6.reset((double) 'a', doubleArray53);
        boolean boolean58 = combinedEventsManager0.reset((double) 100, doubleArray53);
        boolean boolean59 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection60 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = combinedEventsManager0.evaluateStep(stepInterpolator61);
        double double63 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        boolean boolean28 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager13.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        double[] doubleArray23 = new double[] { 1L };
        boolean boolean24 = combinedEventsManager18.reset((double) (byte) 0, doubleArray23);
        boolean boolean25 = combinedEventsManager13.reset((double) (short) -1, doubleArray23);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = combinedEventsManager27.evaluateStep(stepInterpolator29);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection31 = combinedEventsManager27.getEventsHandlers();
        double[] doubleArray37 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean38 = combinedEventsManager27.reset((double) (byte) 1, doubleArray37);
        boolean boolean39 = combinedEventsManager27.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager41 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean42 = combinedEventsManager41.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = combinedEventsManager41.evaluateStep(stepInterpolator43);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager41.getEventsHandlers();
        double[] doubleArray52 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean53 = combinedEventsManager41.reset(0.0d, doubleArray52);
        combinedEventsManager27.stepAccepted(0.0d, doubleArray52);
        boolean boolean55 = combinedEventsManager13.reset((double) (short) 1, doubleArray52);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray52);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = combinedEventsManager58.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = combinedEventsManager58.evaluateStep(stepInterpolator62);
        combinedEventsManager58.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        double double68 = combinedEventsManager66.getEventTime();
        double double69 = combinedEventsManager66.getEventTime();
        boolean boolean70 = combinedEventsManager66.stop();
        double[] doubleArray74 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean75 = combinedEventsManager66.reset(1.0d, doubleArray74);
        boolean boolean76 = combinedEventsManager58.reset((double) (short) 0, doubleArray74);
        boolean boolean77 = combinedEventsManager0.reset((double) (byte) 10, doubleArray74);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection78 = combinedEventsManager0.getEventsStates();
        boolean boolean79 = combinedEventsManager0.isEmpty();
        boolean boolean80 = combinedEventsManager0.isEmpty();
        boolean boolean81 = combinedEventsManager0.stop();
        double double82 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler83 = null;
        combinedEventsManager0.addEventHandler(eventHandler83, (double) 100.0f, (double) (-1L), (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(eventStateCollection78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray16 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean17 = combinedEventsManager6.reset((double) (byte) 1, doubleArray16);
        org.apache.commons.math.ode.events.EventHandler eventHandler18 = null;
        combinedEventsManager6.addEventHandler(eventHandler18, (double) '#', (double) 100L, 10);
        boolean boolean23 = combinedEventsManager6.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager6.getEventsStates();
        double[] doubleArray27 = new double[] { '4' };
        boolean boolean28 = combinedEventsManager6.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) ' ', doubleArray27);
        boolean boolean30 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager32.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager37.evaluateStep(stepInterpolator39);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection41 = combinedEventsManager37.getEventsHandlers();
        double[] doubleArray48 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean49 = combinedEventsManager37.reset(0.0d, doubleArray48);
        combinedEventsManager32.stepAccepted((double) 0, doubleArray48);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        double double55 = combinedEventsManager52.getEventTime();
        double double56 = combinedEventsManager52.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        double double60 = combinedEventsManager58.getEventTime();
        double double61 = combinedEventsManager58.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager58.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        double double66 = combinedEventsManager64.getEventTime();
        double double67 = combinedEventsManager64.getEventTime();
        boolean boolean68 = combinedEventsManager64.stop();
        double[] doubleArray72 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean73 = combinedEventsManager64.reset(1.0d, doubleArray72);
        boolean boolean74 = combinedEventsManager58.reset((double) (short) 1, doubleArray72);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager76 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean77 = combinedEventsManager76.stop();
        double double78 = combinedEventsManager76.getEventTime();
        double double79 = combinedEventsManager76.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection80 = combinedEventsManager76.getEventsStates();
        double[] doubleArray83 = new double[] { (-1.0f) };
        boolean boolean84 = combinedEventsManager76.reset((double) (short) 100, doubleArray83);
        combinedEventsManager58.stepAccepted((double) 0.0f, doubleArray83);
        combinedEventsManager52.stepAccepted((double) 1L, doubleArray83);
        combinedEventsManager32.stepAccepted((double) ' ', doubleArray83);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray83);
        double[] doubleArray90 = null;
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray90);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection92 = combinedEventsManager0.getEventsHandlers();
        java.lang.Class<?> wildcardClass93 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection41);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(eventStateCollection80);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        org.apache.commons.math.ode.events.EventHandler eventHandler20 = null;
        combinedEventsManager0.addEventHandler(eventHandler20, (double) 1, (double) 'a', (int) '#');
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler29 = null;
        combinedEventsManager0.addEventHandler(eventHandler29, (double) 10L, (double) 1, 10);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eventStateCollection28);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (double) 0L, (double) 10.0f, (int) '#');
        boolean boolean10 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) (short) 10, (double) 100.0f, 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        double double22 = combinedEventsManager20.getEventTime();
        double double23 = combinedEventsManager20.getEventTime();
        double double24 = combinedEventsManager20.getEventTime();
        boolean boolean25 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager20.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager28.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager28.getEventsHandlers();
        double[] doubleArray38 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean39 = combinedEventsManager28.reset((double) (byte) 1, doubleArray38);
        boolean boolean40 = combinedEventsManager28.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection41 = combinedEventsManager28.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager43 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean44 = combinedEventsManager43.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager43.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection46 = combinedEventsManager43.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean49 = combinedEventsManager48.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager48.getEventsStates();
        double[] doubleArray53 = new double[] { 1L };
        boolean boolean54 = combinedEventsManager48.reset((double) (byte) 0, doubleArray53);
        combinedEventsManager43.stepAccepted((double) (byte) 1, doubleArray53);
        combinedEventsManager28.stepAccepted((double) (byte) 100, doubleArray53);
        combinedEventsManager20.stepAccepted((double) 1, doubleArray53);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = combinedEventsManager20.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = combinedEventsManager61.evaluateStep(stepInterpolator62);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection64 = combinedEventsManager61.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        double double68 = combinedEventsManager66.getEventTime();
        double double69 = combinedEventsManager66.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager66.getEventsStates();
        double[] doubleArray73 = new double[] { (-1.0f) };
        boolean boolean74 = combinedEventsManager66.reset((double) (short) 100, doubleArray73);
        combinedEventsManager61.stepAccepted((double) 10, doubleArray73);
        combinedEventsManager20.stepAccepted(100.0d, doubleArray73);
        boolean boolean77 = combinedEventsManager0.reset((double) 10L, doubleArray73);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventStateCollection45);
        org.junit.Assert.assertNotNull(eventStateCollection46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(eventStateCollection70);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray16 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean17 = combinedEventsManager6.reset((double) (byte) 1, doubleArray16);
        org.apache.commons.math.ode.events.EventHandler eventHandler18 = null;
        combinedEventsManager6.addEventHandler(eventHandler18, (double) '#', (double) 100L, 10);
        boolean boolean23 = combinedEventsManager6.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager6.getEventsStates();
        double[] doubleArray27 = new double[] { '4' };
        boolean boolean28 = combinedEventsManager6.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) ' ', doubleArray27);
        boolean boolean30 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection31 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean33 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager6.stepAccepted((double) 0, doubleArray22);
        boolean boolean25 = combinedEventsManager0.reset((double) '#', doubleArray22);
        boolean boolean26 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = combinedEventsManager0.evaluateStep(stepInterpolator27);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        double double11 = combinedEventsManager7.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray24 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean25 = combinedEventsManager13.reset(0.0d, doubleArray24);
        combinedEventsManager7.stepAccepted((double) (short) 10, doubleArray24);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray24);
        org.apache.commons.math.ode.events.EventHandler eventHandler28 = null;
        combinedEventsManager0.addEventHandler(eventHandler28, (double) 1L, (double) 0, (int) ' ');
        boolean boolean33 = combinedEventsManager0.stop();
        double double34 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager5.evaluateStep(stepInterpolator7);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager5.getEventsHandlers();
        double[] doubleArray16 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean17 = combinedEventsManager5.reset(0.0d, doubleArray16);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray16);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        double double22 = combinedEventsManager20.getEventTime();
        double double23 = combinedEventsManager20.getEventTime();
        double double24 = combinedEventsManager20.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        double double28 = combinedEventsManager26.getEventTime();
        double double29 = combinedEventsManager26.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager26.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        boolean boolean36 = combinedEventsManager32.stop();
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean41 = combinedEventsManager32.reset(1.0d, doubleArray40);
        boolean boolean42 = combinedEventsManager26.reset((double) (short) 1, doubleArray40);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager44 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean45 = combinedEventsManager44.stop();
        double double46 = combinedEventsManager44.getEventTime();
        double double47 = combinedEventsManager44.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager44.getEventsStates();
        double[] doubleArray51 = new double[] { (-1.0f) };
        boolean boolean52 = combinedEventsManager44.reset((double) (short) 100, doubleArray51);
        combinedEventsManager26.stepAccepted((double) 0.0f, doubleArray51);
        combinedEventsManager20.stepAccepted((double) 1L, doubleArray51);
        combinedEventsManager0.stepAccepted((double) ' ', doubleArray51);
        double double56 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler57 = null;
        combinedEventsManager0.addEventHandler(eventHandler57, (double) (short) 0, (double) 100.0f, 0);
        boolean boolean62 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        combinedEventsManager0.clearEventsHandlers();
        double double18 = combinedEventsManager0.getEventTime();
        double double19 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler20 = null;
        combinedEventsManager0.addEventHandler(eventHandler20, (double) 1L, 1.0d, (int) (byte) 10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = combinedEventsManager0.evaluateStep(stepInterpolator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = combinedEventsManager0.evaluateStep(stepInterpolator1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        double[] doubleArray12 = new double[] { (-1.0f) };
        boolean boolean13 = combinedEventsManager5.reset((double) (short) 100, doubleArray12);
        combinedEventsManager0.stepAccepted((double) 10, doubleArray12);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager17.getEventsStates();
        combinedEventsManager17.clearEventsHandlers();
        combinedEventsManager17.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager24.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager24.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler42 = null;
        combinedEventsManager30.addEventHandler(eventHandler42, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean49 = combinedEventsManager48.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager48.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection51 = combinedEventsManager48.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager53.getEventsStates();
        double[] doubleArray58 = new double[] { 1L };
        boolean boolean59 = combinedEventsManager53.reset((double) (byte) 0, doubleArray58);
        combinedEventsManager48.stepAccepted((double) (byte) 1, doubleArray58);
        boolean boolean61 = combinedEventsManager30.reset((double) '4', doubleArray58);
        boolean boolean62 = combinedEventsManager24.reset((double) (-1), doubleArray58);
        boolean boolean63 = combinedEventsManager17.reset((double) (byte) -1, doubleArray58);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager65 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean66 = combinedEventsManager65.stop();
        double double67 = combinedEventsManager65.getEventTime();
        double double68 = combinedEventsManager65.getEventTime();
        double double69 = combinedEventsManager65.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager71 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean72 = combinedEventsManager71.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator73 = null;
        boolean boolean74 = combinedEventsManager71.evaluateStep(stepInterpolator73);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection75 = combinedEventsManager71.getEventsHandlers();
        double[] doubleArray82 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean83 = combinedEventsManager71.reset(0.0d, doubleArray82);
        combinedEventsManager65.stepAccepted((double) (short) 10, doubleArray82);
        combinedEventsManager17.stepAccepted(0.0d, doubleArray82);
        combinedEventsManager0.stepAccepted((double) '#', doubleArray82);
        double double87 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(eventStateCollection51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection75);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray10);
        boolean boolean13 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        boolean boolean17 = combinedEventsManager0.stop();
        boolean boolean18 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler11 = null;
        combinedEventsManager0.addEventHandler(eventHandler11, (double) 100.0f, (double) 1L, 10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler17 = null;
        combinedEventsManager0.addEventHandler(eventHandler17, (double) (short) 100, (double) (short) 1, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = new double[] { (-1.0f) };
        boolean boolean8 = combinedEventsManager0.reset((double) (short) 100, doubleArray7);
        boolean boolean9 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = combinedEventsManager0.evaluateStep(stepInterpolator12);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) '4', (double) 10.0f, 10);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = combinedEventsManager0.evaluateStep(stepInterpolator50);
        boolean boolean52 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection53 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection54 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection53);
        org.junit.Assert.assertNotNull(eventStateCollection54);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        double double19 = combinedEventsManager0.getEventTime();
        boolean boolean20 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        boolean boolean26 = combinedEventsManager24.isEmpty();
        boolean boolean27 = combinedEventsManager24.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager29.getEventsStates();
        combinedEventsManager29.clearEventsHandlers();
        boolean boolean33 = combinedEventsManager29.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        combinedEventsManager35.clearEventsHandlers();
        combinedEventsManager35.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager41 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean42 = combinedEventsManager41.stop();
        boolean boolean43 = combinedEventsManager41.isEmpty();
        double double44 = combinedEventsManager41.getEventTime();
        combinedEventsManager41.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager47 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean48 = combinedEventsManager47.stop();
        double double49 = combinedEventsManager47.getEventTime();
        double double50 = combinedEventsManager47.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection51 = combinedEventsManager47.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        double double55 = combinedEventsManager53.getEventTime();
        double double56 = combinedEventsManager53.getEventTime();
        boolean boolean57 = combinedEventsManager53.stop();
        double[] doubleArray61 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean62 = combinedEventsManager53.reset(1.0d, doubleArray61);
        boolean boolean63 = combinedEventsManager47.reset((double) (short) 1, doubleArray61);
        boolean boolean64 = combinedEventsManager41.reset((double) 10L, doubleArray61);
        boolean boolean65 = combinedEventsManager35.reset(0.0d, doubleArray61);
        combinedEventsManager29.stepAccepted(1.0d, doubleArray61);
        combinedEventsManager24.stepAccepted((double) 0, doubleArray61);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) '4', doubleArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(eventStateCollection51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray10);
        boolean boolean13 = combinedEventsManager0.stop();
        double double14 = combinedEventsManager0.getEventTime();
        boolean boolean15 = combinedEventsManager0.isEmpty();
        boolean boolean16 = combinedEventsManager0.stop();
        java.lang.Class<?> wildcardClass17 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager8.getEventsStates();
        combinedEventsManager8.clearEventsHandlers();
        boolean boolean12 = combinedEventsManager8.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager8.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager8.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        double double18 = combinedEventsManager16.getEventTime();
        double double19 = combinedEventsManager16.getEventTime();
        double double20 = combinedEventsManager16.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager16.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection22 = combinedEventsManager16.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = combinedEventsManager24.evaluateStep(stepInterpolator26);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager24.getEventsHandlers();
        double[] doubleArray34 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean35 = combinedEventsManager24.reset((double) (byte) 1, doubleArray34);
        boolean boolean36 = combinedEventsManager24.isEmpty();
        combinedEventsManager24.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager24.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = combinedEventsManager40.evaluateStep(stepInterpolator42);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager40.getEventsHandlers();
        double[] doubleArray50 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean51 = combinedEventsManager40.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = combinedEventsManager40.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager54 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean55 = combinedEventsManager54.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = combinedEventsManager54.evaluateStep(stepInterpolator56);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection58 = combinedEventsManager54.getEventsHandlers();
        double[] doubleArray65 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean66 = combinedEventsManager54.reset(0.0d, doubleArray65);
        combinedEventsManager40.stepAccepted(0.0d, doubleArray65);
        combinedEventsManager24.stepAccepted((double) (short) 1, doubleArray65);
        combinedEventsManager16.stepAccepted((double) 100L, doubleArray65);
        combinedEventsManager8.stepAccepted((double) 1.0f, doubleArray65);
        boolean boolean71 = combinedEventsManager0.reset((double) 0, doubleArray65);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertNotNull(eventHandlerCollection22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection58);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean21 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager0.getEventsStates();
        boolean boolean23 = combinedEventsManager0.stop();
        boolean boolean24 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager0.evaluateStep(stepInterpolator25);
        boolean boolean27 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = combinedEventsManager0.evaluateStep(stepInterpolator6);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        double double11 = combinedEventsManager7.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray24 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean25 = combinedEventsManager13.reset(0.0d, doubleArray24);
        combinedEventsManager7.stepAccepted((double) (short) 10, doubleArray24);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray24);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        boolean boolean42 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection43 = combinedEventsManager30.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager45.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager45.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager50.getEventsStates();
        double[] doubleArray55 = new double[] { 1L };
        boolean boolean56 = combinedEventsManager50.reset((double) (byte) 0, doubleArray55);
        combinedEventsManager45.stepAccepted((double) (byte) 1, doubleArray55);
        combinedEventsManager30.stepAccepted((double) (byte) 100, doubleArray55);
        double double59 = combinedEventsManager30.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager61.getEventsStates();
        double[] doubleArray66 = new double[] { 1L };
        boolean boolean67 = combinedEventsManager61.reset((double) (byte) 0, doubleArray66);
        combinedEventsManager30.stepAccepted((double) (byte) 1, doubleArray66);
        boolean boolean69 = combinedEventsManager0.reset((double) (short) -1, doubleArray66);
        java.lang.Class<?> wildcardClass70 = doubleArray66.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventStateCollection63);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager18.stepAccepted((double) (byte) 1, doubleArray28);
        boolean boolean31 = combinedEventsManager0.reset((double) '4', doubleArray28);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean33 = combinedEventsManager0.isEmpty();
        boolean boolean34 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager0.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        boolean boolean20 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        double double25 = combinedEventsManager23.getEventTime();
        double double26 = combinedEventsManager23.getEventTime();
        double double27 = combinedEventsManager23.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = combinedEventsManager29.evaluateStep(stepInterpolator31);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection33 = combinedEventsManager29.getEventsHandlers();
        double[] doubleArray40 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean41 = combinedEventsManager29.reset(0.0d, doubleArray40);
        combinedEventsManager23.stepAccepted((double) (short) 10, doubleArray40);
        combinedEventsManager23.clearEventsHandlers();
        boolean boolean44 = combinedEventsManager23.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager46.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        double double55 = combinedEventsManager52.getEventTime();
        boolean boolean56 = combinedEventsManager52.stop();
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean61 = combinedEventsManager52.reset(1.0d, doubleArray60);
        boolean boolean62 = combinedEventsManager46.reset((double) (short) 1, doubleArray60);
        boolean boolean63 = combinedEventsManager23.reset((double) ' ', doubleArray60);
        boolean boolean64 = combinedEventsManager0.reset(0.0d, doubleArray60);
        java.lang.Class<?> wildcardClass65 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection33);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        double double6 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        double double10 = combinedEventsManager8.getEventTime();
        double double11 = combinedEventsManager8.getEventTime();
        double double12 = combinedEventsManager8.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        double double16 = combinedEventsManager14.getEventTime();
        double double17 = combinedEventsManager14.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager14.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        double double22 = combinedEventsManager20.getEventTime();
        double double23 = combinedEventsManager20.getEventTime();
        boolean boolean24 = combinedEventsManager20.stop();
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean29 = combinedEventsManager20.reset(1.0d, doubleArray28);
        boolean boolean30 = combinedEventsManager14.reset((double) (short) 1, doubleArray28);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager32.getEventsStates();
        double[] doubleArray39 = new double[] { (-1.0f) };
        boolean boolean40 = combinedEventsManager32.reset((double) (short) 100, doubleArray39);
        combinedEventsManager14.stepAccepted((double) 0.0f, doubleArray39);
        combinedEventsManager8.stepAccepted((double) 1L, doubleArray39);
        combinedEventsManager0.stepAccepted((double) (short) 0, doubleArray39);
        boolean boolean44 = combinedEventsManager0.isEmpty();
        boolean boolean45 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager11.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager11.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager16.getEventsStates();
        double[] doubleArray21 = new double[] { 1L };
        boolean boolean22 = combinedEventsManager16.reset((double) (byte) 0, doubleArray21);
        combinedEventsManager11.stepAccepted((double) (byte) 1, doubleArray21);
        combinedEventsManager6.stepAccepted(1.0d, doubleArray21);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager6.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager28.getEventsStates();
        double[] doubleArray33 = new double[] { 1L };
        boolean boolean34 = combinedEventsManager28.reset((double) (byte) 0, doubleArray33);
        boolean boolean35 = combinedEventsManager6.reset((double) (byte) 100, doubleArray33);
        boolean boolean36 = combinedEventsManager0.reset((double) (byte) 100, doubleArray33);
        boolean boolean37 = combinedEventsManager0.isEmpty();
        double double38 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        double double8 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        double double6 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        double double8 = combinedEventsManager0.getEventTime();
        double double9 = combinedEventsManager0.getEventTime();
        double double10 = combinedEventsManager0.getEventTime();
        double double11 = combinedEventsManager0.getEventTime();
        double double12 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        double double4 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection5 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        double double7 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(eventHandlerCollection5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) '4', (double) 10.0f, 10);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection50 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = combinedEventsManager0.evaluateStep(stepInterpolator51);
        double double53 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager0.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = combinedEventsManager0.evaluateStep(stepInterpolator56);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray16 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean17 = combinedEventsManager6.reset((double) (byte) 1, doubleArray16);
        org.apache.commons.math.ode.events.EventHandler eventHandler18 = null;
        combinedEventsManager6.addEventHandler(eventHandler18, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager24.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager24.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager29.getEventsStates();
        double[] doubleArray34 = new double[] { 1L };
        boolean boolean35 = combinedEventsManager29.reset((double) (byte) 0, doubleArray34);
        combinedEventsManager24.stepAccepted((double) (byte) 1, doubleArray34);
        boolean boolean37 = combinedEventsManager6.reset((double) '4', doubleArray34);
        boolean boolean38 = combinedEventsManager0.reset((double) (-1), doubleArray34);
        org.apache.commons.math.ode.events.EventHandler eventHandler39 = null;
        combinedEventsManager0.addEventHandler(eventHandler39, (double) (byte) 100, (double) (-1), (int) (short) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler3 = null;
        combinedEventsManager0.addEventHandler(eventHandler3, (double) (short) 100, (double) 10.0f, (int) (byte) 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection8 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        double double10 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager0.getEventsStates();
        boolean boolean12 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection8);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) 100, 0.0d, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray10);
        boolean boolean13 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        boolean boolean17 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = combinedEventsManager0.evaluateStep(stepInterpolator18);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        double double15 = combinedEventsManager12.getEventTime();
        boolean boolean16 = combinedEventsManager12.stop();
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean21 = combinedEventsManager12.reset(1.0d, doubleArray20);
        boolean boolean22 = combinedEventsManager6.reset((double) (short) 1, doubleArray20);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        double double27 = combinedEventsManager24.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager24.getEventsStates();
        double[] doubleArray31 = new double[] { (-1.0f) };
        boolean boolean32 = combinedEventsManager24.reset((double) (short) 100, doubleArray31);
        combinedEventsManager6.stepAccepted((double) 0.0f, doubleArray31);
        combinedEventsManager0.stepAccepted((double) 1L, doubleArray31);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray46 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean47 = combinedEventsManager36.reset((double) (byte) 1, doubleArray46);
        org.apache.commons.math.ode.events.EventHandler eventHandler48 = null;
        combinedEventsManager36.addEventHandler(eventHandler48, (double) '#', (double) 100L, 10);
        double[] doubleArray54 = null;
        boolean boolean55 = combinedEventsManager36.reset((double) 10, doubleArray54);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        boolean boolean59 = combinedEventsManager57.stop();
        combinedEventsManager57.clearEventsHandlers();
        boolean boolean61 = combinedEventsManager57.isEmpty();
        boolean boolean62 = combinedEventsManager57.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        double double66 = combinedEventsManager64.getEventTime();
        double double67 = combinedEventsManager64.getEventTime();
        double double68 = combinedEventsManager64.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = combinedEventsManager70.evaluateStep(stepInterpolator72);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection74 = combinedEventsManager70.getEventsHandlers();
        double[] doubleArray81 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean82 = combinedEventsManager70.reset(0.0d, doubleArray81);
        combinedEventsManager64.stepAccepted((double) (short) 10, doubleArray81);
        combinedEventsManager57.stepAccepted((double) 10.0f, doubleArray81);
        boolean boolean85 = combinedEventsManager36.reset((double) (byte) 1, doubleArray81);
        combinedEventsManager0.stepAccepted((double) ' ', doubleArray81);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection87 = combinedEventsManager0.getEventsStates();
        boolean boolean88 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler89 = null;
        combinedEventsManager0.addEventHandler(eventHandler89, (double) ' ', 0.0d, (int) (byte) 100);
        boolean boolean94 = combinedEventsManager0.stop();
        boolean boolean95 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection74);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(eventStateCollection87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        double double14 = combinedEventsManager0.getEventTime();
        double double15 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager0.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection19 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler21 = null;
        combinedEventsManager0.addEventHandler(eventHandler21, (double) (-1.0f), (double) (byte) 10, (int) (short) 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager0.getEventsStates();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(eventHandlerCollection19);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = combinedEventsManager0.evaluateStep(stepInterpolator1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        double[] doubleArray12 = new double[] { (-1.0f) };
        boolean boolean13 = combinedEventsManager5.reset((double) (short) 100, doubleArray12);
        combinedEventsManager0.stepAccepted((double) 10, doubleArray12);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        double double19 = combinedEventsManager17.getEventTime();
        double double20 = combinedEventsManager17.getEventTime();
        double double21 = combinedEventsManager17.getEventTime();
        boolean boolean22 = combinedEventsManager17.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = combinedEventsManager17.evaluateStep(stepInterpolator23);
        boolean boolean25 = combinedEventsManager17.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = combinedEventsManager27.evaluateStep(stepInterpolator29);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        double double36 = combinedEventsManager32.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = combinedEventsManager38.evaluateStep(stepInterpolator40);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection42 = combinedEventsManager38.getEventsHandlers();
        double[] doubleArray49 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean50 = combinedEventsManager38.reset(0.0d, doubleArray49);
        combinedEventsManager32.stepAccepted((double) (short) 10, doubleArray49);
        combinedEventsManager27.stepAccepted(10.0d, doubleArray49);
        boolean boolean53 = combinedEventsManager27.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection54 = combinedEventsManager27.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager56 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean57 = combinedEventsManager56.stop();
        double double58 = combinedEventsManager56.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager56.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager61.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager61.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        double[] doubleArray71 = new double[] { 1L };
        boolean boolean72 = combinedEventsManager66.reset((double) (byte) 0, doubleArray71);
        combinedEventsManager61.stepAccepted((double) (byte) 1, doubleArray71);
        combinedEventsManager56.stepAccepted(1.0d, doubleArray71);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = combinedEventsManager56.evaluateStep(stepInterpolator75);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager78 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean79 = combinedEventsManager78.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection80 = combinedEventsManager78.getEventsStates();
        double[] doubleArray83 = new double[] { 1L };
        boolean boolean84 = combinedEventsManager78.reset((double) (byte) 0, doubleArray83);
        boolean boolean85 = combinedEventsManager56.reset((double) (byte) 100, doubleArray83);
        boolean boolean86 = combinedEventsManager27.reset(0.0d, doubleArray83);
        boolean boolean87 = combinedEventsManager17.reset((double) '4', doubleArray83);
        boolean boolean88 = combinedEventsManager0.reset((double) (-1), doubleArray83);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection89 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler90 = null;
        combinedEventsManager0.addEventHandler(eventHandler90, (double) 1L, (double) 10, (int) '#');
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = combinedEventsManager0.evaluateStep(stepInterpolator95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection42);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventStateCollection63);
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(eventStateCollection80);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(eventStateCollection89);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        boolean boolean10 = combinedEventsManager6.stop();
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean15 = combinedEventsManager6.reset(1.0d, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) (short) 1, doubleArray14);
        org.apache.commons.math.ode.events.EventHandler eventHandler17 = null;
        combinedEventsManager0.addEventHandler(eventHandler17, 100.0d, (double) (byte) 100, (int) 'a');
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection23);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        boolean boolean20 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager0.getEventsHandlers();
        boolean boolean22 = combinedEventsManager0.stop();
        double double23 = combinedEventsManager0.getEventTime();
        boolean boolean24 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = combinedEventsManager12.evaluateStep(stepInterpolator14);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager12.getEventsHandlers();
        double[] doubleArray22 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean23 = combinedEventsManager12.reset((double) (byte) 1, doubleArray22);
        org.apache.commons.math.ode.events.EventHandler eventHandler24 = null;
        combinedEventsManager12.addEventHandler(eventHandler24, (double) '#', (double) 100L, 10);
        boolean boolean29 = combinedEventsManager12.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager12.getEventsStates();
        double[] doubleArray33 = new double[] { '4' };
        boolean boolean34 = combinedEventsManager12.reset((double) (byte) 0, doubleArray33);
        boolean boolean35 = combinedEventsManager6.reset((double) ' ', doubleArray33);
        boolean boolean36 = combinedEventsManager0.reset((double) (byte) 1, doubleArray33);
        org.apache.commons.math.ode.events.EventHandler eventHandler37 = null;
        combinedEventsManager0.addEventHandler(eventHandler37, 0.0d, (double) ' ', (int) 'a');
        org.apache.commons.math.ode.events.EventHandler eventHandler42 = null;
        combinedEventsManager0.addEventHandler(eventHandler42, (double) 0, (double) 0, (int) (short) 100);
        double double47 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager5.evaluateStep(stepInterpolator7);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager5.getEventsHandlers();
        double[] doubleArray16 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean17 = combinedEventsManager5.reset(0.0d, doubleArray16);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray16);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        double double22 = combinedEventsManager20.getEventTime();
        double double23 = combinedEventsManager20.getEventTime();
        double double24 = combinedEventsManager20.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        double double28 = combinedEventsManager26.getEventTime();
        double double29 = combinedEventsManager26.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager26.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        boolean boolean36 = combinedEventsManager32.stop();
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean41 = combinedEventsManager32.reset(1.0d, doubleArray40);
        boolean boolean42 = combinedEventsManager26.reset((double) (short) 1, doubleArray40);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager44 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean45 = combinedEventsManager44.stop();
        double double46 = combinedEventsManager44.getEventTime();
        double double47 = combinedEventsManager44.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager44.getEventsStates();
        double[] doubleArray51 = new double[] { (-1.0f) };
        boolean boolean52 = combinedEventsManager44.reset((double) (short) 100, doubleArray51);
        combinedEventsManager26.stepAccepted((double) 0.0f, doubleArray51);
        combinedEventsManager20.stepAccepted((double) 1L, doubleArray51);
        combinedEventsManager0.stepAccepted((double) ' ', doubleArray51);
        org.apache.commons.math.ode.events.EventHandler eventHandler56 = null;
        combinedEventsManager0.addEventHandler(eventHandler56, 0.0d, (double) ' ', 1);
        boolean boolean61 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager30.getEventsStates();
        double[] doubleArray35 = new double[] { 1L };
        boolean boolean36 = combinedEventsManager30.reset((double) (byte) 0, doubleArray35);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray35);
        org.apache.commons.math.ode.events.EventHandler eventHandler38 = null;
        combinedEventsManager0.addEventHandler(eventHandler38, (double) (byte) 100, (double) 10L, (-1));
        double double43 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) 10, (double) (-1.0f), (int) (short) 0);
        double double49 = combinedEventsManager0.getEventTime();
        boolean boolean50 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection51 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection51);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection13);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        double[] doubleArray18 = null;
        boolean boolean19 = combinedEventsManager0.reset((double) 10, doubleArray18);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        boolean boolean23 = combinedEventsManager21.stop();
        combinedEventsManager21.clearEventsHandlers();
        boolean boolean25 = combinedEventsManager21.isEmpty();
        boolean boolean26 = combinedEventsManager21.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        double double32 = combinedEventsManager28.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = combinedEventsManager34.evaluateStep(stepInterpolator36);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection38 = combinedEventsManager34.getEventsHandlers();
        double[] doubleArray45 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean46 = combinedEventsManager34.reset(0.0d, doubleArray45);
        combinedEventsManager28.stepAccepted((double) (short) 10, doubleArray45);
        combinedEventsManager21.stepAccepted((double) 10.0f, doubleArray45);
        boolean boolean49 = combinedEventsManager0.reset((double) (byte) 1, doubleArray45);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager0.getEventsStates();
        double double51 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection38);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        double double8 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager12.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        double[] doubleArray22 = new double[] { 1L };
        boolean boolean23 = combinedEventsManager17.reset((double) (byte) 0, doubleArray22);
        boolean boolean24 = combinedEventsManager12.reset((double) (short) -1, doubleArray22);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = combinedEventsManager26.evaluateStep(stepInterpolator28);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection30 = combinedEventsManager26.getEventsHandlers();
        double[] doubleArray36 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean37 = combinedEventsManager26.reset((double) (byte) 1, doubleArray36);
        boolean boolean38 = combinedEventsManager26.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = combinedEventsManager40.evaluateStep(stepInterpolator42);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager40.getEventsHandlers();
        double[] doubleArray51 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean52 = combinedEventsManager40.reset(0.0d, doubleArray51);
        combinedEventsManager26.stepAccepted(0.0d, doubleArray51);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection54 = combinedEventsManager26.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager56 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean57 = combinedEventsManager56.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager56.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager56.getEventsStates();
        boolean boolean60 = combinedEventsManager56.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager62 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean63 = combinedEventsManager62.stop();
        double double64 = combinedEventsManager62.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection65 = combinedEventsManager62.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager67 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean68 = combinedEventsManager67.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection69 = combinedEventsManager67.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager67.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager72 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean73 = combinedEventsManager72.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection74 = combinedEventsManager72.getEventsStates();
        double[] doubleArray77 = new double[] { 1L };
        boolean boolean78 = combinedEventsManager72.reset((double) (byte) 0, doubleArray77);
        combinedEventsManager67.stepAccepted((double) (byte) 1, doubleArray77);
        combinedEventsManager62.stepAccepted(1.0d, doubleArray77);
        combinedEventsManager56.stepAccepted((double) 10.0f, doubleArray77);
        boolean boolean82 = combinedEventsManager26.reset((double) 100.0f, doubleArray77);
        combinedEventsManager12.stepAccepted(0.0d, doubleArray77);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray77);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(eventStateCollection65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(eventStateCollection69);
        org.junit.Assert.assertNotNull(eventStateCollection70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(eventStateCollection74);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager0.getEventsHandlers();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) (byte) 0, (double) '#', (int) (byte) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        double double23 = combinedEventsManager19.getEventTime();
        boolean boolean24 = combinedEventsManager19.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection25 = combinedEventsManager19.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = combinedEventsManager27.evaluateStep(stepInterpolator29);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection31 = combinedEventsManager27.getEventsHandlers();
        double[] doubleArray37 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean38 = combinedEventsManager27.reset((double) (byte) 1, doubleArray37);
        boolean boolean39 = combinedEventsManager27.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager27.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager42.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager42.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager47 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean48 = combinedEventsManager47.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection49 = combinedEventsManager47.getEventsStates();
        double[] doubleArray52 = new double[] { 1L };
        boolean boolean53 = combinedEventsManager47.reset((double) (byte) 0, doubleArray52);
        combinedEventsManager42.stepAccepted((double) (byte) 1, doubleArray52);
        combinedEventsManager27.stepAccepted((double) (byte) 100, doubleArray52);
        combinedEventsManager19.stepAccepted((double) 1, doubleArray52);
        boolean boolean57 = combinedEventsManager0.reset(Double.NaN, doubleArray52);
        boolean boolean58 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(eventStateCollection45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(eventStateCollection49);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(eventStateCollection59);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection8 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventHandlerCollection8);
        org.junit.Assert.assertNotNull(eventStateCollection9);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        double double10 = combinedEventsManager8.getEventTime();
        double double11 = combinedEventsManager8.getEventTime();
        boolean boolean12 = combinedEventsManager8.stop();
        double[] doubleArray16 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean17 = combinedEventsManager8.reset(1.0d, doubleArray16);
        boolean boolean18 = combinedEventsManager0.reset((double) (short) 0, doubleArray16);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        boolean boolean23 = combinedEventsManager21.stop();
        combinedEventsManager21.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection25 = combinedEventsManager21.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager21.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager28.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager33.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager33.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager38.getEventsStates();
        double[] doubleArray43 = new double[] { 1L };
        boolean boolean44 = combinedEventsManager38.reset((double) (byte) 0, doubleArray43);
        combinedEventsManager33.stepAccepted((double) (byte) 1, doubleArray43);
        combinedEventsManager28.stepAccepted(1.0d, doubleArray43);
        combinedEventsManager21.stepAccepted(10.0d, doubleArray43);
        combinedEventsManager0.stepAccepted((double) 10, doubleArray43);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        boolean boolean52 = combinedEventsManager50.stop();
        combinedEventsManager50.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager50.evaluateStep(stepInterpolator54);
        double double56 = combinedEventsManager50.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        double double60 = combinedEventsManager58.getEventTime();
        double double61 = combinedEventsManager58.getEventTime();
        double double62 = combinedEventsManager58.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        double double66 = combinedEventsManager64.getEventTime();
        double double67 = combinedEventsManager64.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager64.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        double double72 = combinedEventsManager70.getEventTime();
        double double73 = combinedEventsManager70.getEventTime();
        boolean boolean74 = combinedEventsManager70.stop();
        double[] doubleArray78 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean79 = combinedEventsManager70.reset(1.0d, doubleArray78);
        boolean boolean80 = combinedEventsManager64.reset((double) (short) 1, doubleArray78);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager82 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean83 = combinedEventsManager82.stop();
        double double84 = combinedEventsManager82.getEventTime();
        double double85 = combinedEventsManager82.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection86 = combinedEventsManager82.getEventsStates();
        double[] doubleArray89 = new double[] { (-1.0f) };
        boolean boolean90 = combinedEventsManager82.reset((double) (short) 100, doubleArray89);
        combinedEventsManager64.stepAccepted((double) 0.0f, doubleArray89);
        combinedEventsManager58.stepAccepted((double) 1L, doubleArray89);
        combinedEventsManager50.stepAccepted((double) (short) 0, doubleArray89);
        boolean boolean94 = combinedEventsManager0.reset((double) '#', doubleArray89);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection25);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(eventStateCollection86);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        double[] doubleArray21 = new double[] { '4' };
        boolean boolean22 = combinedEventsManager0.reset((double) (byte) 0, doubleArray21);
        boolean boolean23 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection24 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = combinedEventsManager0.evaluateStep(stepInterpolator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection24);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager6.addEventHandler(eventHandler8, 0.0d, (double) 100.0f, (int) (short) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        double double16 = combinedEventsManager14.getEventTime();
        double double17 = combinedEventsManager14.getEventTime();
        double double18 = combinedEventsManager14.getEventTime();
        boolean boolean19 = combinedEventsManager14.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager14.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager14.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager14.getEventsStates();
        boolean boolean23 = combinedEventsManager14.stop();
        boolean boolean24 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager14.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager28.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        double double36 = combinedEventsManager34.getEventTime();
        double double37 = combinedEventsManager34.getEventTime();
        boolean boolean38 = combinedEventsManager34.stop();
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean43 = combinedEventsManager34.reset(1.0d, doubleArray42);
        boolean boolean44 = combinedEventsManager28.reset((double) (short) 1, doubleArray42);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager46.getEventsStates();
        double[] doubleArray53 = new double[] { (-1.0f) };
        boolean boolean54 = combinedEventsManager46.reset((double) (short) 100, doubleArray53);
        combinedEventsManager28.stepAccepted((double) 0.0f, doubleArray53);
        boolean boolean56 = combinedEventsManager14.reset((double) 0, doubleArray53);
        boolean boolean57 = combinedEventsManager6.reset((double) 'a', doubleArray53);
        boolean boolean58 = combinedEventsManager0.reset((double) 100, doubleArray53);
        double double59 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager61.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager61.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        double[] doubleArray71 = new double[] { 1L };
        boolean boolean72 = combinedEventsManager66.reset((double) (byte) 0, doubleArray71);
        combinedEventsManager61.stepAccepted((double) (byte) 1, doubleArray71);
        combinedEventsManager0.stepAccepted((double) (short) 1, doubleArray71);
        org.apache.commons.math.ode.events.EventHandler eventHandler75 = null;
        combinedEventsManager0.addEventHandler(eventHandler75, 100.0d, 1.0d, (int) (short) 100);
        java.lang.Class<?> wildcardClass80 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventStateCollection63);
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        boolean boolean20 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = combinedEventsManager22.evaluateStep(stepInterpolator24);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager22.getEventsHandlers();
        double[] doubleArray33 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean34 = combinedEventsManager22.reset(0.0d, doubleArray33);
        combinedEventsManager8.stepAccepted(0.0d, doubleArray33);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager8.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager38.getEventsStates();
        double[] doubleArray43 = new double[] { 1L };
        boolean boolean44 = combinedEventsManager38.reset((double) (byte) 0, doubleArray43);
        combinedEventsManager8.stepAccepted((double) 10.0f, doubleArray43);
        combinedEventsManager0.stepAccepted((double) '#', doubleArray43);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        double double25 = combinedEventsManager22.getEventTime();
        double double26 = combinedEventsManager22.getEventTime();
        boolean boolean27 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager22.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        boolean boolean42 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection43 = combinedEventsManager30.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager45.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager45.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager50.getEventsStates();
        double[] doubleArray55 = new double[] { 1L };
        boolean boolean56 = combinedEventsManager50.reset((double) (byte) 0, doubleArray55);
        combinedEventsManager45.stepAccepted((double) (byte) 1, doubleArray55);
        combinedEventsManager30.stepAccepted((double) (byte) 100, doubleArray55);
        combinedEventsManager22.stepAccepted((double) 1, doubleArray55);
        boolean boolean60 = combinedEventsManager0.reset((-1.0d), doubleArray55);
        boolean boolean61 = combinedEventsManager0.isEmpty();
        boolean boolean62 = combinedEventsManager0.stop();
        boolean boolean63 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = combinedEventsManager0.evaluateStep(stepInterpolator64);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        boolean boolean10 = combinedEventsManager6.stop();
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean15 = combinedEventsManager6.reset(1.0d, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) (short) 1, doubleArray14);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        double double20 = combinedEventsManager18.getEventTime();
        double double21 = combinedEventsManager18.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager18.getEventsStates();
        double[] doubleArray25 = new double[] { (-1.0f) };
        boolean boolean26 = combinedEventsManager18.reset((double) (short) 100, doubleArray25);
        combinedEventsManager0.stepAccepted((double) 0.0f, doubleArray25);
        org.apache.commons.math.ode.events.EventHandler eventHandler28 = null;
        combinedEventsManager0.addEventHandler(eventHandler28, 0.0d, (double) '4', (int) (byte) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager34.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager34.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        double double41 = combinedEventsManager39.getEventTime();
        double double42 = combinedEventsManager39.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection43 = combinedEventsManager39.getEventsStates();
        double[] doubleArray46 = new double[] { (-1.0f) };
        boolean boolean47 = combinedEventsManager39.reset((double) (short) 100, doubleArray46);
        combinedEventsManager34.stepAccepted((double) 10, doubleArray46);
        boolean boolean49 = combinedEventsManager0.reset((double) (-1L), doubleArray46);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager0.getEventsStates();
        double double51 = combinedEventsManager0.getEventTime();
        boolean boolean52 = combinedEventsManager0.isEmpty();
        double double53 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(eventStateCollection43);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        double double6 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        double double10 = combinedEventsManager8.getEventTime();
        double double11 = combinedEventsManager8.getEventTime();
        double double12 = combinedEventsManager8.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        double double16 = combinedEventsManager14.getEventTime();
        double double17 = combinedEventsManager14.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager14.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        double double22 = combinedEventsManager20.getEventTime();
        double double23 = combinedEventsManager20.getEventTime();
        boolean boolean24 = combinedEventsManager20.stop();
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean29 = combinedEventsManager20.reset(1.0d, doubleArray28);
        boolean boolean30 = combinedEventsManager14.reset((double) (short) 1, doubleArray28);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager32.getEventsStates();
        double[] doubleArray39 = new double[] { (-1.0f) };
        boolean boolean40 = combinedEventsManager32.reset((double) (short) 100, doubleArray39);
        combinedEventsManager14.stepAccepted((double) 0.0f, doubleArray39);
        combinedEventsManager8.stepAccepted((double) 1L, doubleArray39);
        combinedEventsManager0.stepAccepted((double) (short) 0, doubleArray39);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        double double50 = combinedEventsManager46.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager52.evaluateStep(stepInterpolator54);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection56 = combinedEventsManager52.getEventsHandlers();
        double[] doubleArray63 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean64 = combinedEventsManager52.reset(0.0d, doubleArray63);
        combinedEventsManager46.stepAccepted((double) (short) 10, doubleArray63);
        combinedEventsManager46.clearEventsHandlers();
        boolean boolean67 = combinedEventsManager46.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager69 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean70 = combinedEventsManager69.stop();
        double double71 = combinedEventsManager69.getEventTime();
        double double72 = combinedEventsManager69.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection73 = combinedEventsManager69.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager75 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean76 = combinedEventsManager75.stop();
        double double77 = combinedEventsManager75.getEventTime();
        double double78 = combinedEventsManager75.getEventTime();
        boolean boolean79 = combinedEventsManager75.stop();
        double[] doubleArray83 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean84 = combinedEventsManager75.reset(1.0d, doubleArray83);
        boolean boolean85 = combinedEventsManager69.reset((double) (short) 1, doubleArray83);
        boolean boolean86 = combinedEventsManager46.reset((double) ' ', doubleArray83);
        combinedEventsManager0.stepAccepted((double) '#', doubleArray83);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection56);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(eventStateCollection73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager18.stepAccepted((double) (byte) 1, doubleArray28);
        boolean boolean31 = combinedEventsManager0.reset((double) '4', doubleArray28);
        boolean boolean32 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, (double) (byte) 10, (double) (byte) 100, 1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection38 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler39 = null;
        combinedEventsManager0.addEventHandler(eventHandler39, Double.NaN, (double) 1.0f, (int) (byte) 10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = combinedEventsManager0.evaluateStep(stepInterpolator44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection38);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) (short) 10, (double) (-1.0f), (int) '#');
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        double[] doubleArray5 = new double[] { 1L };
        boolean boolean6 = combinedEventsManager0.reset((double) (byte) 0, doubleArray5);
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) (byte) 10, 1.0d, (int) (byte) 1);
        double double12 = combinedEventsManager0.getEventTime();
        double double13 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) '#', 0.0d, 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager0.getEventsStates();
        boolean boolean12 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler3 = null;
        combinedEventsManager0.addEventHandler(eventHandler3, (double) (short) 100, (double) 10.0f, (int) (byte) 100);
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) 10, (double) (byte) -1, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        double double5 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        double double11 = combinedEventsManager7.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray24 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean25 = combinedEventsManager13.reset(0.0d, doubleArray24);
        combinedEventsManager7.stepAccepted((double) (short) 10, doubleArray24);
        boolean boolean27 = combinedEventsManager7.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        double double31 = combinedEventsManager29.getEventTime();
        double double32 = combinedEventsManager29.getEventTime();
        double double33 = combinedEventsManager29.getEventTime();
        boolean boolean34 = combinedEventsManager29.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection35 = combinedEventsManager29.getEventsHandlers();
        boolean boolean36 = combinedEventsManager29.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = combinedEventsManager29.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection42 = combinedEventsManager40.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection43 = combinedEventsManager40.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager45.getEventsStates();
        double[] doubleArray50 = new double[] { 1L };
        boolean boolean51 = combinedEventsManager45.reset((double) (byte) 0, doubleArray50);
        combinedEventsManager40.stepAccepted((double) (byte) 1, doubleArray50);
        boolean boolean53 = combinedEventsManager40.isEmpty();
        boolean boolean54 = combinedEventsManager40.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = combinedEventsManager40.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        double double60 = combinedEventsManager58.getEventTime();
        double double61 = combinedEventsManager58.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager58.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        double double66 = combinedEventsManager64.getEventTime();
        double double67 = combinedEventsManager64.getEventTime();
        boolean boolean68 = combinedEventsManager64.stop();
        double[] doubleArray72 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean73 = combinedEventsManager64.reset(1.0d, doubleArray72);
        boolean boolean74 = combinedEventsManager58.reset((double) (short) 1, doubleArray72);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager76 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean77 = combinedEventsManager76.stop();
        double double78 = combinedEventsManager76.getEventTime();
        double double79 = combinedEventsManager76.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection80 = combinedEventsManager76.getEventsStates();
        double[] doubleArray83 = new double[] { (-1.0f) };
        boolean boolean84 = combinedEventsManager76.reset((double) (short) 100, doubleArray83);
        combinedEventsManager58.stepAccepted((double) 0.0f, doubleArray83);
        boolean boolean86 = combinedEventsManager40.reset((double) (byte) 0, doubleArray83);
        boolean boolean87 = combinedEventsManager29.reset((double) (-1), doubleArray83);
        combinedEventsManager7.stepAccepted((double) (short) 1, doubleArray83);
        boolean boolean89 = combinedEventsManager0.reset((double) (short) 0, doubleArray83);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventStateCollection42);
        org.junit.Assert.assertNotNull(eventStateCollection43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(eventStateCollection80);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler14 = null;
        combinedEventsManager0.addEventHandler(eventHandler14, (double) (byte) 0, (double) '#', (int) (byte) 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection19 = combinedEventsManager0.getEventsHandlers();
        double double20 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertNotNull(eventHandlerCollection19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager14.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager14.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager19.getEventsStates();
        double[] doubleArray26 = new double[] { (-1.0f) };
        boolean boolean27 = combinedEventsManager19.reset((double) (short) 100, doubleArray26);
        combinedEventsManager14.stepAccepted((double) 10, doubleArray26);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray26);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager0.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager0.getEventsHandlers();
        boolean boolean33 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean35 = combinedEventsManager0.isEmpty();
        boolean boolean36 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) (byte) 100, doubleArray27);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager0.getEventsStates();
        boolean boolean31 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager33.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager33.getEventsHandlers();
        double[] doubleArray43 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean44 = combinedEventsManager33.reset((double) (byte) 1, doubleArray43);
        boolean boolean45 = combinedEventsManager33.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection46 = combinedEventsManager33.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean49 = combinedEventsManager48.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager48.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection51 = combinedEventsManager48.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager53.getEventsStates();
        double[] doubleArray58 = new double[] { 1L };
        boolean boolean59 = combinedEventsManager53.reset((double) (byte) 0, doubleArray58);
        combinedEventsManager48.stepAccepted((double) (byte) 1, doubleArray58);
        combinedEventsManager33.stepAccepted((double) (byte) 100, doubleArray58);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray58);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(eventStateCollection51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        org.apache.commons.math.ode.events.EventHandler eventHandler20 = null;
        combinedEventsManager0.addEventHandler(eventHandler20, (double) 1, (double) 'a', (int) '#');
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler29 = null;
        combinedEventsManager0.addEventHandler(eventHandler29, (double) 10L, (double) 1, 10);
        double double34 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection35 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(eventHandlerCollection35);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass20 = eventStateCollection19.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager6.getEventsStates();
        double[] doubleArray11 = new double[] { 1L };
        boolean boolean12 = combinedEventsManager6.reset((double) (byte) 0, doubleArray11);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray11);
        boolean boolean14 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager0.evaluateStep(stepInterpolator16);
        double double18 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        double[] doubleArray5 = new double[] { 1L };
        boolean boolean6 = combinedEventsManager0.reset((double) (byte) 0, doubleArray5);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection8 = combinedEventsManager0.getEventsHandlers();
        double double9 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) 0.0f, 100.0d, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        double double8 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        boolean boolean10 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        boolean boolean14 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventStateCollection15);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        double double3 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        double double6 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) (byte) 10, (double) 100, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(eventStateCollection7);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray10);
        boolean boolean13 = combinedEventsManager0.isEmpty();
        boolean boolean14 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        double double20 = combinedEventsManager18.getEventTime();
        double double21 = combinedEventsManager18.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        double double27 = combinedEventsManager24.getEventTime();
        boolean boolean28 = combinedEventsManager24.stop();
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean33 = combinedEventsManager24.reset(1.0d, doubleArray32);
        boolean boolean34 = combinedEventsManager18.reset((double) (short) 1, doubleArray32);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        double double38 = combinedEventsManager36.getEventTime();
        double double39 = combinedEventsManager36.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager36.getEventsStates();
        double[] doubleArray43 = new double[] { (-1.0f) };
        boolean boolean44 = combinedEventsManager36.reset((double) (short) 100, doubleArray43);
        combinedEventsManager18.stepAccepted((double) 0.0f, doubleArray43);
        boolean boolean46 = combinedEventsManager0.reset((double) (byte) 0, doubleArray43);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = combinedEventsManager0.evaluateStep(stepInterpolator47);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager3 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean4 = combinedEventsManager3.stop();
        boolean boolean5 = combinedEventsManager3.stop();
        combinedEventsManager3.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager3.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager3.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager3.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        boolean boolean13 = combinedEventsManager11.stop();
        combinedEventsManager11.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager11.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        double double20 = combinedEventsManager18.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager23.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager28.getEventsStates();
        double[] doubleArray33 = new double[] { 1L };
        boolean boolean34 = combinedEventsManager28.reset((double) (byte) 0, doubleArray33);
        combinedEventsManager23.stepAccepted((double) (byte) 1, doubleArray33);
        combinedEventsManager18.stepAccepted(1.0d, doubleArray33);
        combinedEventsManager11.stepAccepted(10.0d, doubleArray33);
        combinedEventsManager3.stepAccepted((double) 100L, doubleArray33);
        boolean boolean39 = combinedEventsManager3.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager41 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean42 = combinedEventsManager41.stop();
        double double43 = combinedEventsManager41.getEventTime();
        double double44 = combinedEventsManager41.getEventTime();
        double double45 = combinedEventsManager41.getEventTime();
        boolean boolean46 = combinedEventsManager41.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection47 = combinedEventsManager41.getEventsHandlers();
        boolean boolean48 = combinedEventsManager41.isEmpty();
        double double49 = combinedEventsManager41.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection50 = combinedEventsManager41.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection51 = combinedEventsManager41.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        double double55 = combinedEventsManager53.getEventTime();
        double double56 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager53.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager59 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean60 = combinedEventsManager59.stop();
        double double61 = combinedEventsManager59.getEventTime();
        double double62 = combinedEventsManager59.getEventTime();
        boolean boolean63 = combinedEventsManager59.stop();
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean68 = combinedEventsManager59.reset(1.0d, doubleArray67);
        boolean boolean69 = combinedEventsManager53.reset((double) (short) 1, doubleArray67);
        combinedEventsManager41.stepAccepted((double) (byte) 0, doubleArray67);
        combinedEventsManager3.stepAccepted((double) '#', doubleArray67);
        boolean boolean72 = combinedEventsManager0.reset((double) (short) -1, doubleArray67);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventHandlerCollection50);
        org.junit.Assert.assertNotNull(eventHandlerCollection51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, 10.0d, 0.0d, (int) (byte) 1);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager7.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray23 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean24 = combinedEventsManager13.reset((double) (byte) 1, doubleArray23);
        org.apache.commons.math.ode.events.EventHandler eventHandler25 = null;
        combinedEventsManager13.addEventHandler(eventHandler25, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager31.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection34 = combinedEventsManager31.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager36.getEventsStates();
        double[] doubleArray41 = new double[] { 1L };
        boolean boolean42 = combinedEventsManager36.reset((double) (byte) 0, doubleArray41);
        combinedEventsManager31.stepAccepted((double) (byte) 1, doubleArray41);
        boolean boolean44 = combinedEventsManager13.reset((double) '4', doubleArray41);
        boolean boolean45 = combinedEventsManager7.reset((double) (-1), doubleArray41);
        boolean boolean46 = combinedEventsManager0.reset((double) (byte) -1, doubleArray41);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager0.getEventsStates();
        boolean boolean48 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection49 = combinedEventsManager0.getEventsHandlers();
        boolean boolean50 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertNotNull(eventStateCollection34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) (byte) 100, doubleArray27);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager0.getEventsStates();
        boolean boolean31 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertNotNull(eventStateCollection33);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        double double3 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        boolean boolean17 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = combinedEventsManager0.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = combinedEventsManager0.evaluateStep(stepInterpolator20);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        boolean boolean7 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        boolean boolean10 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        boolean boolean7 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean10 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = new double[] { (-1.0f) };
        boolean boolean8 = combinedEventsManager0.reset((double) (short) 100, doubleArray7);
        boolean boolean9 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = combinedEventsManager12.evaluateStep(stepInterpolator14);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager12.getEventsHandlers();
        double[] doubleArray23 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean24 = combinedEventsManager12.reset(0.0d, doubleArray23);
        double double25 = combinedEventsManager12.getEventTime();
        double double26 = combinedEventsManager12.getEventTime();
        double double27 = combinedEventsManager12.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager29.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager29.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager34.getEventsStates();
        double[] doubleArray39 = new double[] { 1L };
        boolean boolean40 = combinedEventsManager34.reset((double) (byte) 0, doubleArray39);
        combinedEventsManager29.stepAccepted((double) (byte) 1, doubleArray39);
        boolean boolean42 = combinedEventsManager12.reset((double) 0.0f, doubleArray39);
        combinedEventsManager0.stepAccepted((double) '#', doubleArray39);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, 1.0d, (double) 0, (int) (byte) 0);
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) (-1.0f), (double) (-1), (int) (short) 1);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventStateCollection7);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) 1.0f, (double) '#', (int) (short) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean14 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager16.getEventsStates();
        combinedEventsManager16.clearEventsHandlers();
        boolean boolean20 = combinedEventsManager16.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = combinedEventsManager22.evaluateStep(stepInterpolator24);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager22.getEventsHandlers();
        double[] doubleArray32 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean33 = combinedEventsManager22.reset((double) (byte) 1, doubleArray32);
        boolean boolean34 = combinedEventsManager22.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray47 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean48 = combinedEventsManager36.reset(0.0d, doubleArray47);
        combinedEventsManager22.stepAccepted(0.0d, doubleArray47);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection50 = combinedEventsManager22.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager52.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager57.getEventsStates();
        double[] doubleArray62 = new double[] { 1L };
        boolean boolean63 = combinedEventsManager57.reset((double) (byte) 0, doubleArray62);
        boolean boolean64 = combinedEventsManager52.reset((double) (short) -1, doubleArray62);
        boolean boolean65 = combinedEventsManager22.reset((double) (-1), doubleArray62);
        boolean boolean66 = combinedEventsManager16.reset((double) '4', doubleArray62);
        boolean boolean67 = combinedEventsManager0.reset(10.0d, doubleArray62);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection68 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = combinedEventsManager0.evaluateStep(stepInterpolator69);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        boolean boolean12 = combinedEventsManager0.reset((double) (short) -1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, 1.0d, (double) 10, (int) (byte) 0);
        org.apache.commons.math.ode.events.EventHandler eventHandler18 = null;
        combinedEventsManager0.addEventHandler(eventHandler18, (double) (byte) 1, (double) 0.0f, 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager0.evaluateStep(stepInterpolator7);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = new double[] { (-1.0f) };
        boolean boolean8 = combinedEventsManager0.reset((double) (short) 100, doubleArray7);
        boolean boolean9 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        double double11 = combinedEventsManager7.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray24 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean25 = combinedEventsManager13.reset(0.0d, doubleArray24);
        combinedEventsManager7.stepAccepted((double) (short) 10, doubleArray24);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray24);
        org.apache.commons.math.ode.events.EventHandler eventHandler28 = null;
        combinedEventsManager0.addEventHandler(eventHandler28, (double) 1L, (double) 0, (int) ' ');
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        boolean boolean36 = combinedEventsManager34.stop();
        combinedEventsManager34.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection38 = combinedEventsManager34.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection39 = combinedEventsManager34.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager41 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean42 = combinedEventsManager41.stop();
        double double43 = combinedEventsManager41.getEventTime();
        double double44 = combinedEventsManager41.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager41.getEventsStates();
        double[] doubleArray48 = new double[] { (-1.0f) };
        boolean boolean49 = combinedEventsManager41.reset((double) (short) 100, doubleArray48);
        boolean boolean50 = combinedEventsManager34.reset((double) 0, doubleArray48);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection51 = combinedEventsManager34.getEventsHandlers();
        boolean boolean52 = combinedEventsManager34.stop();
        combinedEventsManager34.clearEventsHandlers();
        boolean boolean54 = combinedEventsManager34.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager56 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean57 = combinedEventsManager56.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager56.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager56.getEventsStates();
        boolean boolean60 = combinedEventsManager56.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = combinedEventsManager56.evaluateStep(stepInterpolator61);
        double double63 = combinedEventsManager56.getEventTime();
        combinedEventsManager56.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        double double68 = combinedEventsManager66.getEventTime();
        double double69 = combinedEventsManager66.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager66.getEventsStates();
        double[] doubleArray73 = new double[] { (-1.0f) };
        boolean boolean74 = combinedEventsManager66.reset((double) (short) 100, doubleArray73);
        combinedEventsManager56.stepAccepted(0.0d, doubleArray73);
        boolean boolean76 = combinedEventsManager34.reset((double) 1L, doubleArray73);
        boolean boolean77 = combinedEventsManager0.reset(10.0d, doubleArray73);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection38);
        org.junit.Assert.assertNotNull(eventStateCollection39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(eventStateCollection45);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(eventStateCollection70);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        double double17 = combinedEventsManager0.getEventTime();
        double double18 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        boolean boolean17 = combinedEventsManager0.stop();
        boolean boolean18 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        boolean boolean22 = combinedEventsManager20.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager20.getEventsStates();
        double double24 = combinedEventsManager20.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager26.getEventsStates();
        double[] doubleArray31 = new double[] { 1L };
        boolean boolean32 = combinedEventsManager26.reset((double) (byte) 0, doubleArray31);
        boolean boolean33 = combinedEventsManager20.reset(10.0d, doubleArray31);
        combinedEventsManager0.stepAccepted((double) (-1), doubleArray31);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        boolean boolean8 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) (short) 1, (double) 0, 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        boolean boolean20 = combinedEventsManager8.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager8.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager23.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager28.getEventsStates();
        double[] doubleArray33 = new double[] { 1L };
        boolean boolean34 = combinedEventsManager28.reset((double) (byte) 0, doubleArray33);
        combinedEventsManager23.stepAccepted((double) (byte) 1, doubleArray33);
        combinedEventsManager8.stepAccepted((double) (byte) 100, doubleArray33);
        combinedEventsManager0.stepAccepted((double) 1, doubleArray33);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager0.evaluateStep(stepInterpolator38);
        boolean boolean40 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventStateCollection41);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        double double8 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) (byte) 0, (double) 0, (int) (byte) 1);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean15 = combinedEventsManager0.isEmpty();
        java.lang.Class<?> wildcardClass16 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        boolean boolean44 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection49 = combinedEventsManager46.getEventsHandlers();
        boolean boolean50 = combinedEventsManager46.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager52.evaluateStep(stepInterpolator54);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection56 = combinedEventsManager52.getEventsHandlers();
        double[] doubleArray62 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean63 = combinedEventsManager52.reset((double) (byte) 1, doubleArray62);
        boolean boolean64 = combinedEventsManager52.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = combinedEventsManager66.evaluateStep(stepInterpolator68);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection70 = combinedEventsManager66.getEventsHandlers();
        double[] doubleArray76 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean77 = combinedEventsManager66.reset((double) (byte) 1, doubleArray76);
        org.apache.commons.math.ode.events.EventHandler eventHandler78 = null;
        combinedEventsManager66.addEventHandler(eventHandler78, (double) '#', (double) 100L, 10);
        boolean boolean83 = combinedEventsManager66.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection84 = combinedEventsManager66.getEventsStates();
        double[] doubleArray87 = new double[] { '4' };
        boolean boolean88 = combinedEventsManager66.reset((double) (byte) 0, doubleArray87);
        boolean boolean89 = combinedEventsManager52.reset(Double.NaN, doubleArray87);
        boolean boolean90 = combinedEventsManager46.reset((double) 100.0f, doubleArray87);
        boolean boolean91 = combinedEventsManager0.reset((double) (byte) -1, doubleArray87);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(eventHandlerCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection70);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(eventStateCollection84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) (byte) 100, doubleArray27);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager0.getEventsStates();
        boolean boolean31 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.stop();
        boolean boolean6 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        double double7 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        double double12 = combinedEventsManager10.getEventTime();
        double double13 = combinedEventsManager10.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager10.getEventsStates();
        double[] doubleArray17 = new double[] { (-1.0f) };
        boolean boolean18 = combinedEventsManager10.reset((double) (short) 100, doubleArray17);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray17);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        boolean boolean23 = combinedEventsManager21.stop();
        combinedEventsManager21.clearEventsHandlers();
        boolean boolean25 = combinedEventsManager21.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        double double29 = combinedEventsManager27.getEventTime();
        double double30 = combinedEventsManager27.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager27.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        double double35 = combinedEventsManager33.getEventTime();
        double double36 = combinedEventsManager33.getEventTime();
        boolean boolean37 = combinedEventsManager33.stop();
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean42 = combinedEventsManager33.reset(1.0d, doubleArray41);
        boolean boolean43 = combinedEventsManager27.reset((double) (short) 1, doubleArray41);
        combinedEventsManager21.stepAccepted((double) 1, doubleArray41);
        boolean boolean45 = combinedEventsManager0.reset(1.0d, doubleArray41);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean22 = combinedEventsManager0.isEmpty();
        boolean boolean23 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection24 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager26.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection29 = combinedEventsManager26.getEventsStates();
        boolean boolean30 = combinedEventsManager26.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = combinedEventsManager26.evaluateStep(stepInterpolator31);
        double double33 = combinedEventsManager26.getEventTime();
        combinedEventsManager26.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        double double38 = combinedEventsManager36.getEventTime();
        double double39 = combinedEventsManager36.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager36.getEventsStates();
        double[] doubleArray43 = new double[] { (-1.0f) };
        boolean boolean44 = combinedEventsManager36.reset((double) (short) 100, doubleArray43);
        combinedEventsManager26.stepAccepted(0.0d, doubleArray43);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray43);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertNotNull(eventStateCollection29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        double[] doubleArray5 = new double[] { 1L };
        boolean boolean6 = combinedEventsManager0.reset((double) (byte) 0, doubleArray5);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, 10.0d, (double) 0.0f, (int) (byte) 10);
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) 1.0f, (double) (byte) 1, (int) (short) 1);
        boolean boolean18 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager14.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager14.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager19.getEventsStates();
        double[] doubleArray26 = new double[] { (-1.0f) };
        boolean boolean27 = combinedEventsManager19.reset((double) (short) 100, doubleArray26);
        combinedEventsManager14.stepAccepted((double) 10, doubleArray26);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray26);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager0.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager0.getEventsHandlers();
        boolean boolean33 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean35 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        double double25 = combinedEventsManager22.getEventTime();
        double double26 = combinedEventsManager22.getEventTime();
        boolean boolean27 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager22.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        boolean boolean42 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection43 = combinedEventsManager30.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager45.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager45.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager50.getEventsStates();
        double[] doubleArray55 = new double[] { 1L };
        boolean boolean56 = combinedEventsManager50.reset((double) (byte) 0, doubleArray55);
        combinedEventsManager45.stepAccepted((double) (byte) 1, doubleArray55);
        combinedEventsManager30.stepAccepted((double) (byte) 100, doubleArray55);
        combinedEventsManager22.stepAccepted((double) 1, doubleArray55);
        boolean boolean60 = combinedEventsManager0.reset((-1.0d), doubleArray55);
        org.apache.commons.math.ode.events.EventHandler eventHandler61 = null;
        combinedEventsManager0.addEventHandler(eventHandler61, (double) (short) 10, (double) '#', (-1));
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        combinedEventsManager0.clearEventsHandlers();
        double double22 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = combinedEventsManager24.evaluateStep(stepInterpolator26);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager24.getEventsHandlers();
        boolean boolean29 = combinedEventsManager24.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager24.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler31 = null;
        combinedEventsManager24.addEventHandler(eventHandler31, (double) 1.0f, (double) '#', (int) (short) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager24.getEventsHandlers();
        combinedEventsManager24.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        double double41 = combinedEventsManager39.getEventTime();
        double double42 = combinedEventsManager39.getEventTime();
        double double43 = combinedEventsManager39.getEventTime();
        boolean boolean44 = combinedEventsManager39.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager39.getEventsHandlers();
        boolean boolean46 = combinedEventsManager39.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager39.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection48 = combinedEventsManager39.getEventsHandlers();
        combinedEventsManager39.clearEventsHandlers();
        boolean boolean50 = combinedEventsManager39.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        double double55 = combinedEventsManager52.getEventTime();
        double double56 = combinedEventsManager52.getEventTime();
        boolean boolean57 = combinedEventsManager52.stop();
        boolean boolean58 = combinedEventsManager52.stop();
        combinedEventsManager52.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        double double63 = combinedEventsManager61.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager61.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        double[] doubleArray71 = new double[] { 1L };
        boolean boolean72 = combinedEventsManager66.reset((double) (byte) 0, doubleArray71);
        boolean boolean73 = combinedEventsManager61.reset((double) (short) -1, doubleArray71);
        combinedEventsManager52.stepAccepted((double) (byte) 0, doubleArray71);
        combinedEventsManager39.stepAccepted((double) 0L, doubleArray71);
        combinedEventsManager24.stepAccepted((double) (short) 1, doubleArray71);
        combinedEventsManager0.stepAccepted((double) (byte) 0, doubleArray71);
        boolean boolean78 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(eventHandlerCollection48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        boolean boolean20 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        double double25 = combinedEventsManager23.getEventTime();
        double double26 = combinedEventsManager23.getEventTime();
        double double27 = combinedEventsManager23.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = combinedEventsManager29.evaluateStep(stepInterpolator31);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection33 = combinedEventsManager29.getEventsHandlers();
        double[] doubleArray40 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean41 = combinedEventsManager29.reset(0.0d, doubleArray40);
        combinedEventsManager23.stepAccepted((double) (short) 10, doubleArray40);
        combinedEventsManager23.clearEventsHandlers();
        boolean boolean44 = combinedEventsManager23.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager46.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        double double55 = combinedEventsManager52.getEventTime();
        boolean boolean56 = combinedEventsManager52.stop();
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean61 = combinedEventsManager52.reset(1.0d, doubleArray60);
        boolean boolean62 = combinedEventsManager46.reset((double) (short) 1, doubleArray60);
        boolean boolean63 = combinedEventsManager23.reset((double) ' ', doubleArray60);
        boolean boolean64 = combinedEventsManager0.reset(0.0d, doubleArray60);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = combinedEventsManager0.evaluateStep(stepInterpolator65);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection67 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection33);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(eventStateCollection67);
        org.junit.Assert.assertNotNull(eventStateCollection68);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager18.stepAccepted((double) (byte) 1, doubleArray28);
        boolean boolean31 = combinedEventsManager0.reset((double) '4', doubleArray28);
        boolean boolean32 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, (double) (byte) 10, (double) (byte) 100, 1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection38 = combinedEventsManager0.getEventsHandlers();
        boolean boolean39 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager0.getEventsHandlers();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        double double12 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler14 = null;
        combinedEventsManager0.addEventHandler(eventHandler14, (double) (short) 100, 1.0d, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        boolean boolean8 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        boolean boolean8 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) (short) 100, (double) (byte) 0, (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) (byte) 100, doubleArray27);
        org.apache.commons.math.ode.events.EventHandler eventHandler30 = null;
        combinedEventsManager0.addEventHandler(eventHandler30, (double) ' ', Double.NaN, 1);
        org.apache.commons.math.ode.events.EventHandler eventHandler35 = null;
        combinedEventsManager0.addEventHandler(eventHandler35, (double) 100L, (double) 'a', (int) (byte) 100);
        boolean boolean40 = combinedEventsManager0.stop();
        boolean boolean41 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean43 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertNotNull(eventStateCollection45);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertNotNull(eventStateCollection6);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass13 = eventStateCollection12.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        combinedEventsManager0.clearEventsHandlers();
        double double18 = combinedEventsManager0.getEventTime();
        double double19 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = combinedEventsManager0.evaluateStep(stepInterpolator20);
        boolean boolean22 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager15.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager15.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager20.getEventsStates();
        double[] doubleArray25 = new double[] { 1L };
        boolean boolean26 = combinedEventsManager20.reset((double) (byte) 0, doubleArray25);
        combinedEventsManager15.stepAccepted((double) (byte) 1, doubleArray25);
        combinedEventsManager0.stepAccepted((double) (byte) 100, doubleArray25);
        double double29 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager31.getEventsStates();
        double[] doubleArray36 = new double[] { 1L };
        boolean boolean37 = combinedEventsManager31.reset((double) (byte) 0, doubleArray36);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray36);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager0.evaluateStep(stepInterpolator39);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        boolean boolean19 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager0.getEventsStates();
        double double21 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        java.lang.Class<?> wildcardClass7 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        combinedEventsManager5.clearEventsHandlers();
        boolean boolean9 = combinedEventsManager5.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager11.getEventsStates();
        combinedEventsManager11.clearEventsHandlers();
        combinedEventsManager11.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        boolean boolean19 = combinedEventsManager17.isEmpty();
        double double20 = combinedEventsManager17.getEventTime();
        combinedEventsManager17.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        double double25 = combinedEventsManager23.getEventTime();
        double double26 = combinedEventsManager23.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager23.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        double double31 = combinedEventsManager29.getEventTime();
        double double32 = combinedEventsManager29.getEventTime();
        boolean boolean33 = combinedEventsManager29.stop();
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean38 = combinedEventsManager29.reset(1.0d, doubleArray37);
        boolean boolean39 = combinedEventsManager23.reset((double) (short) 1, doubleArray37);
        boolean boolean40 = combinedEventsManager17.reset((double) 10L, doubleArray37);
        boolean boolean41 = combinedEventsManager11.reset(0.0d, doubleArray37);
        combinedEventsManager5.stepAccepted(1.0d, doubleArray37);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray37);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager0.getEventsStates();
        boolean boolean45 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager30.getEventsStates();
        double[] doubleArray35 = new double[] { 1L };
        boolean boolean36 = combinedEventsManager30.reset((double) (byte) 0, doubleArray35);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray35);
        org.apache.commons.math.ode.events.EventHandler eventHandler38 = null;
        combinedEventsManager0.addEventHandler(eventHandler38, (double) (byte) 100, (double) 10L, (-1));
        boolean boolean43 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(eventStateCollection45);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager14.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager14.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager19.getEventsStates();
        double[] doubleArray26 = new double[] { (-1.0f) };
        boolean boolean27 = combinedEventsManager19.reset((double) (short) 100, doubleArray26);
        combinedEventsManager14.stepAccepted((double) 10, doubleArray26);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray26);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager0.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager0.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        double double38 = combinedEventsManager36.getEventTime();
        double double39 = combinedEventsManager36.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager36.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        double double44 = combinedEventsManager42.getEventTime();
        double double45 = combinedEventsManager42.getEventTime();
        boolean boolean46 = combinedEventsManager42.stop();
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean51 = combinedEventsManager42.reset(1.0d, doubleArray50);
        boolean boolean52 = combinedEventsManager36.reset((double) (short) 1, doubleArray50);
        boolean boolean53 = combinedEventsManager0.reset((double) 100L, doubleArray50);
        double double54 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = combinedEventsManager0.evaluateStep(stepInterpolator55);
        boolean boolean57 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass59 = eventStateCollection58.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager6.getEventsStates();
        double[] doubleArray11 = new double[] { 1L };
        boolean boolean12 = combinedEventsManager6.reset((double) (byte) 0, doubleArray11);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray11);
        boolean boolean14 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager0.getEventsHandlers();
        boolean boolean16 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        double double15 = combinedEventsManager12.getEventTime();
        boolean boolean16 = combinedEventsManager12.stop();
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean21 = combinedEventsManager12.reset(1.0d, doubleArray20);
        boolean boolean22 = combinedEventsManager6.reset((double) (short) 1, doubleArray20);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        double double27 = combinedEventsManager24.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager24.getEventsStates();
        double[] doubleArray31 = new double[] { (-1.0f) };
        boolean boolean32 = combinedEventsManager24.reset((double) (short) 100, doubleArray31);
        combinedEventsManager6.stepAccepted((double) 0.0f, doubleArray31);
        combinedEventsManager0.stepAccepted((double) 1L, doubleArray31);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray46 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean47 = combinedEventsManager36.reset((double) (byte) 1, doubleArray46);
        org.apache.commons.math.ode.events.EventHandler eventHandler48 = null;
        combinedEventsManager36.addEventHandler(eventHandler48, (double) '#', (double) 100L, 10);
        double[] doubleArray54 = null;
        boolean boolean55 = combinedEventsManager36.reset((double) 10, doubleArray54);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        boolean boolean59 = combinedEventsManager57.stop();
        combinedEventsManager57.clearEventsHandlers();
        boolean boolean61 = combinedEventsManager57.isEmpty();
        boolean boolean62 = combinedEventsManager57.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        double double66 = combinedEventsManager64.getEventTime();
        double double67 = combinedEventsManager64.getEventTime();
        double double68 = combinedEventsManager64.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = combinedEventsManager70.evaluateStep(stepInterpolator72);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection74 = combinedEventsManager70.getEventsHandlers();
        double[] doubleArray81 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean82 = combinedEventsManager70.reset(0.0d, doubleArray81);
        combinedEventsManager64.stepAccepted((double) (short) 10, doubleArray81);
        combinedEventsManager57.stepAccepted((double) 10.0f, doubleArray81);
        boolean boolean85 = combinedEventsManager36.reset((double) (byte) 1, doubleArray81);
        combinedEventsManager0.stepAccepted((double) ' ', doubleArray81);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection87 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator88 = null;
        boolean boolean89 = combinedEventsManager0.evaluateStep(stepInterpolator88);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection74);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(eventStateCollection87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) 1.0f, (double) '#', (int) (short) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager0.getEventsHandlers();
        boolean boolean13 = combinedEventsManager0.isEmpty();
        boolean boolean14 = combinedEventsManager0.stop();
        java.lang.Class<?> wildcardClass15 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = new double[] { (-1.0f) };
        boolean boolean8 = combinedEventsManager0.reset((double) (short) 100, doubleArray7);
        boolean boolean9 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager0.getEventsStates();
        double double13 = combinedEventsManager0.getEventTime();
        double double14 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        boolean boolean20 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = combinedEventsManager22.evaluateStep(stepInterpolator24);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager22.getEventsHandlers();
        double[] doubleArray33 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean34 = combinedEventsManager22.reset(0.0d, doubleArray33);
        combinedEventsManager8.stepAccepted(0.0d, doubleArray33);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager8.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager38.getEventsStates();
        double[] doubleArray43 = new double[] { 1L };
        boolean boolean44 = combinedEventsManager38.reset((double) (byte) 0, doubleArray43);
        combinedEventsManager8.stepAccepted((double) 10.0f, doubleArray43);
        combinedEventsManager0.stepAccepted((double) '#', doubleArray43);
        boolean boolean47 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = combinedEventsManager0.evaluateStep(stepInterpolator48);
        double double50 = combinedEventsManager0.getEventTime();
        double[] doubleArray52 = null;
        boolean boolean53 = combinedEventsManager0.reset((double) 1L, doubleArray52);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        double[] doubleArray5 = new double[] { 1L };
        boolean boolean6 = combinedEventsManager0.reset((double) (byte) 0, doubleArray5);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection8 = combinedEventsManager0.getEventsHandlers();
        double double9 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = combinedEventsManager0.evaluateStep(stepInterpolator12);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager12.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager12.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        double[] doubleArray22 = new double[] { 1L };
        boolean boolean23 = combinedEventsManager17.reset((double) (byte) 0, doubleArray22);
        combinedEventsManager12.stepAccepted((double) (byte) 1, doubleArray22);
        combinedEventsManager7.stepAccepted(1.0d, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = combinedEventsManager0.evaluateStep(stepInterpolator28);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = combinedEventsManager0.evaluateStep(stepInterpolator6);
        boolean boolean8 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) 0.0f, (double) (byte) 0, (int) (short) 1);
        boolean boolean14 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager0.getEventsHandlers();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager13.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray29 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean30 = combinedEventsManager19.reset((double) (byte) 1, doubleArray29);
        org.apache.commons.math.ode.events.EventHandler eventHandler31 = null;
        combinedEventsManager19.addEventHandler(eventHandler31, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection39 = combinedEventsManager37.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager37.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager42.getEventsStates();
        double[] doubleArray47 = new double[] { 1L };
        boolean boolean48 = combinedEventsManager42.reset((double) (byte) 0, doubleArray47);
        combinedEventsManager37.stepAccepted((double) (byte) 1, doubleArray47);
        boolean boolean50 = combinedEventsManager19.reset((double) '4', doubleArray47);
        boolean boolean51 = combinedEventsManager13.reset((double) (-1), doubleArray47);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray47);
        java.lang.Class<?> wildcardClass53 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventStateCollection39);
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray16 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean17 = combinedEventsManager6.reset((double) (byte) 1, doubleArray16);
        boolean boolean18 = combinedEventsManager6.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = combinedEventsManager20.evaluateStep(stepInterpolator22);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection24 = combinedEventsManager20.getEventsHandlers();
        double[] doubleArray30 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean31 = combinedEventsManager20.reset((double) (byte) 1, doubleArray30);
        org.apache.commons.math.ode.events.EventHandler eventHandler32 = null;
        combinedEventsManager20.addEventHandler(eventHandler32, (double) '#', (double) 100L, 10);
        boolean boolean37 = combinedEventsManager20.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager20.getEventsStates();
        double[] doubleArray41 = new double[] { '4' };
        boolean boolean42 = combinedEventsManager20.reset((double) (byte) 0, doubleArray41);
        boolean boolean43 = combinedEventsManager6.reset(Double.NaN, doubleArray41);
        boolean boolean44 = combinedEventsManager0.reset((double) 100.0f, doubleArray41);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray9 = null;
        combinedEventsManager0.stepAccepted((double) '#', doubleArray9);
        double double11 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        boolean boolean12 = combinedEventsManager0.isEmpty();
        boolean boolean13 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        boolean boolean15 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        double double15 = combinedEventsManager12.getEventTime();
        boolean boolean16 = combinedEventsManager12.stop();
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean21 = combinedEventsManager12.reset(1.0d, doubleArray20);
        boolean boolean22 = combinedEventsManager6.reset((double) (short) 1, doubleArray20);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = combinedEventsManager24.evaluateStep(stepInterpolator26);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager24.getEventsHandlers();
        double[] doubleArray35 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean36 = combinedEventsManager24.reset(0.0d, doubleArray35);
        combinedEventsManager6.stepAccepted((double) (short) -1, doubleArray35);
        org.apache.commons.math.ode.events.EventHandler eventHandler38 = null;
        combinedEventsManager6.addEventHandler(eventHandler38, (double) (short) 10, 0.0d, (int) 'a');
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager44 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean45 = combinedEventsManager44.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = combinedEventsManager44.evaluateStep(stepInterpolator46);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection48 = combinedEventsManager44.getEventsHandlers();
        double[] doubleArray54 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean55 = combinedEventsManager44.reset((double) (byte) 1, doubleArray54);
        org.apache.commons.math.ode.events.EventHandler eventHandler56 = null;
        combinedEventsManager44.addEventHandler(eventHandler56, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager62 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean63 = combinedEventsManager62.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager62.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection65 = combinedEventsManager62.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager67 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean68 = combinedEventsManager67.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection69 = combinedEventsManager67.getEventsStates();
        double[] doubleArray72 = new double[] { 1L };
        boolean boolean73 = combinedEventsManager67.reset((double) (byte) 0, doubleArray72);
        combinedEventsManager62.stepAccepted((double) (byte) 1, doubleArray72);
        boolean boolean75 = combinedEventsManager44.reset((double) '4', doubleArray72);
        boolean boolean76 = combinedEventsManager6.reset((double) 10.0f, doubleArray72);
        combinedEventsManager0.stepAccepted((double) (short) 0, doubleArray72);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertNotNull(eventStateCollection65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(eventStateCollection69);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        boolean boolean20 = combinedEventsManager8.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager8.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager23.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager28.getEventsStates();
        double[] doubleArray33 = new double[] { 1L };
        boolean boolean34 = combinedEventsManager28.reset((double) (byte) 0, doubleArray33);
        combinedEventsManager23.stepAccepted((double) (byte) 1, doubleArray33);
        combinedEventsManager8.stepAccepted((double) (byte) 100, doubleArray33);
        combinedEventsManager0.stepAccepted((double) 1, doubleArray33);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager0.evaluateStep(stepInterpolator38);
        double double40 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection41 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(eventHandlerCollection41);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        double double16 = combinedEventsManager13.getEventTime();
        double double17 = combinedEventsManager13.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        combinedEventsManager13.stepAccepted((double) (short) 10, doubleArray30);
        combinedEventsManager8.stepAccepted(10.0d, doubleArray30);
        boolean boolean34 = combinedEventsManager8.stop();
        boolean boolean35 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager37.evaluateStep(stepInterpolator39);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection41 = combinedEventsManager37.getEventsHandlers();
        double[] doubleArray47 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean48 = combinedEventsManager37.reset((double) (byte) 1, doubleArray47);
        org.apache.commons.math.ode.events.EventHandler eventHandler49 = null;
        combinedEventsManager37.addEventHandler(eventHandler49, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager55.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager55.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager60 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean61 = combinedEventsManager60.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager60.getEventsStates();
        double[] doubleArray65 = new double[] { 1L };
        boolean boolean66 = combinedEventsManager60.reset((double) (byte) 0, doubleArray65);
        combinedEventsManager55.stepAccepted((double) (byte) 1, doubleArray65);
        boolean boolean68 = combinedEventsManager37.reset((double) '4', doubleArray65);
        combinedEventsManager8.stepAccepted((double) 1, doubleArray65);
        boolean boolean70 = combinedEventsManager0.reset((double) 100.0f, doubleArray65);
        double double71 = combinedEventsManager0.getEventTime();
        boolean boolean72 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection73 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler74 = null;
        combinedEventsManager0.addEventHandler(eventHandler74, (double) (byte) 10, (double) 10.0f, (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection73);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        double[] doubleArray5 = new double[] { 1L };
        boolean boolean6 = combinedEventsManager0.reset((double) (byte) 0, doubleArray5);
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) (byte) 10, 1.0d, (int) (byte) 1);
        double double12 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) (byte) 0, (double) (byte) 1, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager30.getEventsStates();
        double[] doubleArray35 = new double[] { 1L };
        boolean boolean36 = combinedEventsManager30.reset((double) (byte) 0, doubleArray35);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray35);
        boolean boolean38 = combinedEventsManager0.isEmpty();
        double double39 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) 1.0f, (double) '#', (int) (short) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean14 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager9 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean10 = combinedEventsManager9.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager9.evaluateStep(stepInterpolator11);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager9.getEventsHandlers();
        double[] doubleArray19 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean20 = combinedEventsManager9.reset((double) (byte) 1, doubleArray19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager22.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection29 = combinedEventsManager27.getEventsStates();
        double[] doubleArray32 = new double[] { 1L };
        boolean boolean33 = combinedEventsManager27.reset((double) (byte) 0, doubleArray32);
        boolean boolean34 = combinedEventsManager22.reset((double) (short) -1, doubleArray32);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray46 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean47 = combinedEventsManager36.reset((double) (byte) 1, doubleArray46);
        boolean boolean48 = combinedEventsManager36.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = combinedEventsManager50.evaluateStep(stepInterpolator52);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection54 = combinedEventsManager50.getEventsHandlers();
        double[] doubleArray61 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean62 = combinedEventsManager50.reset(0.0d, doubleArray61);
        combinedEventsManager36.stepAccepted(0.0d, doubleArray61);
        boolean boolean64 = combinedEventsManager22.reset((double) (short) 1, doubleArray61);
        combinedEventsManager9.stepAccepted((double) 10.0f, doubleArray61);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager67 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean68 = combinedEventsManager67.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = combinedEventsManager67.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator71 = null;
        boolean boolean72 = combinedEventsManager67.evaluateStep(stepInterpolator71);
        combinedEventsManager67.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager75 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean76 = combinedEventsManager75.stop();
        double double77 = combinedEventsManager75.getEventTime();
        double double78 = combinedEventsManager75.getEventTime();
        boolean boolean79 = combinedEventsManager75.stop();
        double[] doubleArray83 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean84 = combinedEventsManager75.reset(1.0d, doubleArray83);
        boolean boolean85 = combinedEventsManager67.reset((double) (short) 0, doubleArray83);
        boolean boolean86 = combinedEventsManager9.reset((double) (byte) 10, doubleArray83);
        boolean boolean87 = combinedEventsManager0.reset((double) 'a', doubleArray83);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(eventStateCollection29);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection54);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (double) 100, 0.0d, (int) (short) 1);
        combinedEventsManager0.clearEventsHandlers();
        double[] doubleArray12 = null;
        combinedEventsManager0.stepAccepted((double) (byte) 0, doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = combinedEventsManager0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) (-1.0f), 1.0d, (int) (byte) 10);
        boolean boolean13 = combinedEventsManager0.stop();
        java.lang.Class<?> wildcardClass14 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager6.stepAccepted((double) 0, doubleArray22);
        boolean boolean25 = combinedEventsManager0.reset((double) '#', doubleArray22);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        boolean boolean29 = combinedEventsManager27.stop();
        combinedEventsManager27.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager32.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        double double40 = combinedEventsManager38.getEventTime();
        double double41 = combinedEventsManager38.getEventTime();
        boolean boolean42 = combinedEventsManager38.stop();
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean47 = combinedEventsManager38.reset(1.0d, doubleArray46);
        boolean boolean48 = combinedEventsManager32.reset((double) (short) 1, doubleArray46);
        combinedEventsManager27.stepAccepted((double) (byte) 1, doubleArray46);
        boolean boolean50 = combinedEventsManager0.reset(0.0d, doubleArray46);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection51 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = combinedEventsManager0.evaluateStep(stepInterpolator52);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) 100, (double) (short) 100, (int) ' ');
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) 10.0f, (double) 0L, (int) (byte) 10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = combinedEventsManager0.evaluateStep(stepInterpolator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = combinedEventsManager0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) (-1.0f), 1.0d, (int) (byte) 10);
        boolean boolean13 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        double double17 = combinedEventsManager15.getEventTime();
        double double18 = combinedEventsManager15.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        double double22 = combinedEventsManager20.getEventTime();
        double double23 = combinedEventsManager20.getEventTime();
        double double24 = combinedEventsManager20.getEventTime();
        boolean boolean25 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager20.getEventsHandlers();
        boolean boolean27 = combinedEventsManager20.isEmpty();
        double double28 = combinedEventsManager20.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection29 = combinedEventsManager20.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        double double33 = combinedEventsManager31.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection34 = combinedEventsManager31.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager36.getEventsStates();
        double[] doubleArray41 = new double[] { 1L };
        boolean boolean42 = combinedEventsManager36.reset((double) (byte) 0, doubleArray41);
        boolean boolean43 = combinedEventsManager31.reset((double) (short) -1, doubleArray41);
        boolean boolean44 = combinedEventsManager20.reset((double) (-1), doubleArray41);
        combinedEventsManager15.stepAccepted(1.0d, doubleArray41);
        boolean boolean46 = combinedEventsManager0.reset((double) (short) -1, doubleArray41);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(eventHandlerCollection29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(eventStateCollection34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) 1.0f, (-1.0d), 0);
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        boolean boolean10 = combinedEventsManager6.stop();
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean15 = combinedEventsManager6.reset(1.0d, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) (short) 1, doubleArray14);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        double double20 = combinedEventsManager18.getEventTime();
        double double21 = combinedEventsManager18.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager18.getEventsStates();
        double[] doubleArray25 = new double[] { (-1.0f) };
        boolean boolean26 = combinedEventsManager18.reset((double) (short) 100, doubleArray25);
        combinedEventsManager0.stepAccepted((double) 0.0f, doubleArray25);
        org.apache.commons.math.ode.events.EventHandler eventHandler28 = null;
        combinedEventsManager0.addEventHandler(eventHandler28, 0.0d, (double) '4', (int) (byte) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager34.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager34.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        double double41 = combinedEventsManager39.getEventTime();
        double double42 = combinedEventsManager39.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection43 = combinedEventsManager39.getEventsStates();
        double[] doubleArray46 = new double[] { (-1.0f) };
        boolean boolean47 = combinedEventsManager39.reset((double) (short) 100, doubleArray46);
        combinedEventsManager34.stepAccepted((double) 10, doubleArray46);
        boolean boolean49 = combinedEventsManager0.reset((double) (-1L), doubleArray46);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager0.evaluateStep(stepInterpolator54);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(eventStateCollection43);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        boolean boolean12 = combinedEventsManager0.reset((double) (short) -1, doubleArray10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray24 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean25 = combinedEventsManager14.reset((double) (byte) 1, doubleArray24);
        boolean boolean26 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager28.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager28.getEventsHandlers();
        double[] doubleArray39 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean40 = combinedEventsManager28.reset(0.0d, doubleArray39);
        combinedEventsManager14.stepAccepted(0.0d, doubleArray39);
        boolean boolean42 = combinedEventsManager0.reset((double) (short) 1, doubleArray39);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) (byte) 100, (double) 0L, 1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection49 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection49);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, 10.0d, 0.0d, (int) (byte) 1);
        boolean boolean11 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        double double16 = combinedEventsManager13.getEventTime();
        double double17 = combinedEventsManager13.getEventTime();
        boolean boolean18 = combinedEventsManager13.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection19 = combinedEventsManager13.getEventsHandlers();
        boolean boolean20 = combinedEventsManager13.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager13.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager13.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager13.getEventsHandlers();
        boolean boolean24 = combinedEventsManager13.isEmpty();
        double double25 = combinedEventsManager13.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager13.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection30 = combinedEventsManager28.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = combinedEventsManager32.evaluateStep(stepInterpolator34);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager32.getEventsHandlers();
        double[] doubleArray42 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean43 = combinedEventsManager32.reset((double) (byte) 1, doubleArray42);
        boolean boolean44 = combinedEventsManager32.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager32.getEventsHandlers();
        double double46 = combinedEventsManager32.getEventTime();
        double double47 = combinedEventsManager32.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager49 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean50 = combinedEventsManager49.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection51 = combinedEventsManager49.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = combinedEventsManager49.evaluateStep(stepInterpolator52);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager55.getEventsStates();
        double[] doubleArray60 = new double[] { 1L };
        boolean boolean61 = combinedEventsManager55.reset((double) (byte) 0, doubleArray60);
        combinedEventsManager49.stepAccepted(0.0d, doubleArray60);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = combinedEventsManager64.evaluateStep(stepInterpolator66);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection68 = combinedEventsManager64.getEventsHandlers();
        double[] doubleArray75 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean76 = combinedEventsManager64.reset(0.0d, doubleArray75);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager78 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = combinedEventsManager78.evaluateStep(stepInterpolator79);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection81 = combinedEventsManager78.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager83 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean84 = combinedEventsManager83.stop();
        double double85 = combinedEventsManager83.getEventTime();
        double double86 = combinedEventsManager83.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection87 = combinedEventsManager83.getEventsStates();
        double[] doubleArray90 = new double[] { (-1.0f) };
        boolean boolean91 = combinedEventsManager83.reset((double) (short) 100, doubleArray90);
        combinedEventsManager78.stepAccepted((double) 10, doubleArray90);
        combinedEventsManager64.stepAccepted((double) (byte) 10, doubleArray90);
        combinedEventsManager49.stepAccepted((double) 0L, doubleArray90);
        combinedEventsManager32.stepAccepted((double) (-1L), doubleArray90);
        combinedEventsManager28.stepAccepted((double) (short) 1, doubleArray90);
        combinedEventsManager13.stepAccepted(Double.NaN, doubleArray90);
        boolean boolean98 = combinedEventsManager0.reset((double) (short) 0, doubleArray90);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(eventStateCollection51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection68);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertNotNull(eventStateCollection87);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean21 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager0.getEventsStates();
        boolean boolean23 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        double double28 = combinedEventsManager26.getEventTime();
        double double29 = combinedEventsManager26.getEventTime();
        double double30 = combinedEventsManager26.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler34 = null;
        combinedEventsManager32.addEventHandler(eventHandler34, 0.0d, (double) 100.0f, (int) (short) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        double double42 = combinedEventsManager40.getEventTime();
        double double43 = combinedEventsManager40.getEventTime();
        double double44 = combinedEventsManager40.getEventTime();
        boolean boolean45 = combinedEventsManager40.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection46 = combinedEventsManager40.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection47 = combinedEventsManager40.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager40.getEventsStates();
        boolean boolean49 = combinedEventsManager40.stop();
        boolean boolean50 = combinedEventsManager40.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = combinedEventsManager40.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager54 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean55 = combinedEventsManager54.stop();
        double double56 = combinedEventsManager54.getEventTime();
        double double57 = combinedEventsManager54.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager54.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager60 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean61 = combinedEventsManager60.stop();
        double double62 = combinedEventsManager60.getEventTime();
        double double63 = combinedEventsManager60.getEventTime();
        boolean boolean64 = combinedEventsManager60.stop();
        double[] doubleArray68 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean69 = combinedEventsManager60.reset(1.0d, doubleArray68);
        boolean boolean70 = combinedEventsManager54.reset((double) (short) 1, doubleArray68);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager72 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean73 = combinedEventsManager72.stop();
        double double74 = combinedEventsManager72.getEventTime();
        double double75 = combinedEventsManager72.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection76 = combinedEventsManager72.getEventsStates();
        double[] doubleArray79 = new double[] { (-1.0f) };
        boolean boolean80 = combinedEventsManager72.reset((double) (short) 100, doubleArray79);
        combinedEventsManager54.stepAccepted((double) 0.0f, doubleArray79);
        boolean boolean82 = combinedEventsManager40.reset((double) 0, doubleArray79);
        boolean boolean83 = combinedEventsManager32.reset((double) 'a', doubleArray79);
        boolean boolean84 = combinedEventsManager26.reset((double) 100, doubleArray79);
        boolean boolean85 = combinedEventsManager0.reset((double) (short) 1, doubleArray79);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection46);
        org.junit.Assert.assertNotNull(eventHandlerCollection47);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(eventStateCollection76);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = new double[] { (-1.0f) };
        boolean boolean8 = combinedEventsManager0.reset((double) (short) 100, doubleArray7);
        boolean boolean9 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        combinedEventsManager0.clearEventsHandlers();
        java.lang.Class<?> wildcardClass13 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        boolean boolean7 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        double double19 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(eventStateCollection20);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) (byte) 100, doubleArray27);
        org.apache.commons.math.ode.events.EventHandler eventHandler30 = null;
        combinedEventsManager0.addEventHandler(eventHandler30, (double) ' ', Double.NaN, 1);
        org.apache.commons.math.ode.events.EventHandler eventHandler35 = null;
        combinedEventsManager0.addEventHandler(eventHandler35, (double) 100L, (double) 'a', (int) (byte) 100);
        boolean boolean40 = combinedEventsManager0.stop();
        boolean boolean41 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean43 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (-1.0d), (double) (-1L), (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection5 = combinedEventsManager0.getEventsHandlers();
        boolean boolean6 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (-1), doubleArray40);
        double double44 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        boolean boolean48 = combinedEventsManager46.isEmpty();
        boolean boolean49 = combinedEventsManager46.isEmpty();
        combinedEventsManager46.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager52.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = combinedEventsManager57.evaluateStep(stepInterpolator59);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection61 = combinedEventsManager57.getEventsHandlers();
        double[] doubleArray68 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean69 = combinedEventsManager57.reset(0.0d, doubleArray68);
        combinedEventsManager52.stepAccepted((double) 0, doubleArray68);
        boolean boolean71 = combinedEventsManager46.reset((double) '#', doubleArray68);
        boolean boolean72 = combinedEventsManager0.reset(10.0d, doubleArray68);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection73 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection61);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventStateCollection73);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        double[] doubleArray18 = null;
        boolean boolean19 = combinedEventsManager0.reset((double) 10, doubleArray18);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        boolean boolean23 = combinedEventsManager21.stop();
        combinedEventsManager21.clearEventsHandlers();
        boolean boolean25 = combinedEventsManager21.isEmpty();
        boolean boolean26 = combinedEventsManager21.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        double double32 = combinedEventsManager28.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = combinedEventsManager34.evaluateStep(stepInterpolator36);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection38 = combinedEventsManager34.getEventsHandlers();
        double[] doubleArray45 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean46 = combinedEventsManager34.reset(0.0d, doubleArray45);
        combinedEventsManager28.stepAccepted((double) (short) 10, doubleArray45);
        combinedEventsManager21.stepAccepted((double) 10.0f, doubleArray45);
        boolean boolean49 = combinedEventsManager0.reset((double) (byte) 1, doubleArray45);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass51 = eventStateCollection50.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection38);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager14.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager14.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager19.getEventsStates();
        double[] doubleArray26 = new double[] { (-1.0f) };
        boolean boolean27 = combinedEventsManager19.reset((double) (short) 100, doubleArray26);
        combinedEventsManager14.stepAccepted((double) 10, doubleArray26);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray26);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager0.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager0.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        double double38 = combinedEventsManager36.getEventTime();
        double double39 = combinedEventsManager36.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager36.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        double double44 = combinedEventsManager42.getEventTime();
        double double45 = combinedEventsManager42.getEventTime();
        boolean boolean46 = combinedEventsManager42.stop();
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean51 = combinedEventsManager42.reset(1.0d, doubleArray50);
        boolean boolean52 = combinedEventsManager36.reset((double) (short) 1, doubleArray50);
        boolean boolean53 = combinedEventsManager0.reset((double) 100L, doubleArray50);
        double double54 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = combinedEventsManager0.evaluateStep(stepInterpolator55);
        boolean boolean57 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(eventStateCollection58);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager7.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray23 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean24 = combinedEventsManager13.reset((double) (byte) 1, doubleArray23);
        org.apache.commons.math.ode.events.EventHandler eventHandler25 = null;
        combinedEventsManager13.addEventHandler(eventHandler25, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager31.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection34 = combinedEventsManager31.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager36.getEventsStates();
        double[] doubleArray41 = new double[] { 1L };
        boolean boolean42 = combinedEventsManager36.reset((double) (byte) 0, doubleArray41);
        combinedEventsManager31.stepAccepted((double) (byte) 1, doubleArray41);
        boolean boolean44 = combinedEventsManager13.reset((double) '4', doubleArray41);
        boolean boolean45 = combinedEventsManager7.reset((double) (-1), doubleArray41);
        boolean boolean46 = combinedEventsManager0.reset((double) (byte) -1, doubleArray41);
        boolean boolean47 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection49 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler50 = null;
        combinedEventsManager0.addEventHandler(eventHandler50, (double) 1L, (double) (byte) 10, (int) (short) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection55 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertNotNull(eventStateCollection34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(eventStateCollection49);
        org.junit.Assert.assertNotNull(eventHandlerCollection55);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        double double8 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = combinedEventsManager12.evaluateStep(stepInterpolator14);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager12.getEventsHandlers();
        double[] doubleArray23 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean24 = combinedEventsManager12.reset(0.0d, doubleArray23);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = combinedEventsManager26.evaluateStep(stepInterpolator27);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection29 = combinedEventsManager26.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        double double33 = combinedEventsManager31.getEventTime();
        double double34 = combinedEventsManager31.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager31.getEventsStates();
        double[] doubleArray38 = new double[] { (-1.0f) };
        boolean boolean39 = combinedEventsManager31.reset((double) (short) 100, doubleArray38);
        combinedEventsManager26.stepAccepted((double) 10, doubleArray38);
        combinedEventsManager12.stepAccepted((double) (byte) 10, doubleArray38);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = combinedEventsManager12.evaluateStep(stepInterpolator42);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager12.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = combinedEventsManager12.evaluateStep(stepInterpolator45);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean49 = combinedEventsManager48.stop();
        double double50 = combinedEventsManager48.getEventTime();
        double double51 = combinedEventsManager48.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager48.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager54 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean55 = combinedEventsManager54.stop();
        double double56 = combinedEventsManager54.getEventTime();
        double double57 = combinedEventsManager54.getEventTime();
        boolean boolean58 = combinedEventsManager54.stop();
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean63 = combinedEventsManager54.reset(1.0d, doubleArray62);
        boolean boolean64 = combinedEventsManager48.reset((double) (short) 1, doubleArray62);
        boolean boolean65 = combinedEventsManager12.reset((double) 100L, doubleArray62);
        combinedEventsManager0.stepAccepted((double) (byte) -1, doubleArray62);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        double double7 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) (-1L), (double) 0.0f, (int) '#');
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        boolean boolean16 = combinedEventsManager14.isEmpty();
        boolean boolean17 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager19.getEventsStates();
        combinedEventsManager19.clearEventsHandlers();
        boolean boolean23 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager25 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean26 = combinedEventsManager25.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager25.getEventsStates();
        combinedEventsManager25.clearEventsHandlers();
        combinedEventsManager25.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        boolean boolean33 = combinedEventsManager31.isEmpty();
        double double34 = combinedEventsManager31.getEventTime();
        combinedEventsManager31.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        double double39 = combinedEventsManager37.getEventTime();
        double double40 = combinedEventsManager37.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager37.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager43 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean44 = combinedEventsManager43.stop();
        double double45 = combinedEventsManager43.getEventTime();
        double double46 = combinedEventsManager43.getEventTime();
        boolean boolean47 = combinedEventsManager43.stop();
        double[] doubleArray51 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean52 = combinedEventsManager43.reset(1.0d, doubleArray51);
        boolean boolean53 = combinedEventsManager37.reset((double) (short) 1, doubleArray51);
        boolean boolean54 = combinedEventsManager31.reset((double) 10L, doubleArray51);
        boolean boolean55 = combinedEventsManager25.reset(0.0d, doubleArray51);
        combinedEventsManager19.stepAccepted(1.0d, doubleArray51);
        combinedEventsManager14.stepAccepted((double) 0, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) (-1L), doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) '4', (double) 10.0f, 10);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = combinedEventsManager0.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.events.EventHandler eventHandler52 = null;
        combinedEventsManager0.addEventHandler(eventHandler52, (double) 1L, (double) 10, 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray16 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean17 = combinedEventsManager6.reset((double) (byte) 1, doubleArray16);
        org.apache.commons.math.ode.events.EventHandler eventHandler18 = null;
        combinedEventsManager6.addEventHandler(eventHandler18, (double) '#', (double) 100L, 10);
        boolean boolean23 = combinedEventsManager6.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager6.getEventsStates();
        double[] doubleArray27 = new double[] { '4' };
        boolean boolean28 = combinedEventsManager6.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) ' ', doubleArray27);
        boolean boolean30 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager32.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager37.evaluateStep(stepInterpolator39);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection41 = combinedEventsManager37.getEventsHandlers();
        double[] doubleArray48 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean49 = combinedEventsManager37.reset(0.0d, doubleArray48);
        combinedEventsManager32.stepAccepted((double) 0, doubleArray48);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        double double55 = combinedEventsManager52.getEventTime();
        double double56 = combinedEventsManager52.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        double double60 = combinedEventsManager58.getEventTime();
        double double61 = combinedEventsManager58.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager58.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        double double66 = combinedEventsManager64.getEventTime();
        double double67 = combinedEventsManager64.getEventTime();
        boolean boolean68 = combinedEventsManager64.stop();
        double[] doubleArray72 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean73 = combinedEventsManager64.reset(1.0d, doubleArray72);
        boolean boolean74 = combinedEventsManager58.reset((double) (short) 1, doubleArray72);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager76 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean77 = combinedEventsManager76.stop();
        double double78 = combinedEventsManager76.getEventTime();
        double double79 = combinedEventsManager76.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection80 = combinedEventsManager76.getEventsStates();
        double[] doubleArray83 = new double[] { (-1.0f) };
        boolean boolean84 = combinedEventsManager76.reset((double) (short) 100, doubleArray83);
        combinedEventsManager58.stepAccepted((double) 0.0f, doubleArray83);
        combinedEventsManager52.stepAccepted((double) 1L, doubleArray83);
        combinedEventsManager32.stepAccepted((double) ' ', doubleArray83);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray83);
        double[] doubleArray90 = null;
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray90);
        combinedEventsManager0.clearEventsHandlers();
        double double93 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection41);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(eventStateCollection80);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = null;
        boolean boolean8 = combinedEventsManager0.reset((double) 1.0f, doubleArray7);
        boolean boolean9 = combinedEventsManager0.isEmpty();
        double[] doubleArray11 = null;
        boolean boolean12 = combinedEventsManager0.reset((double) (byte) 10, doubleArray11);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        double double19 = combinedEventsManager17.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager17.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager17.reset((double) (short) -1, doubleArray27);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager31.evaluateStep(stepInterpolator33);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection35 = combinedEventsManager31.getEventsHandlers();
        double[] doubleArray41 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean42 = combinedEventsManager31.reset((double) (byte) 1, doubleArray41);
        boolean boolean43 = combinedEventsManager31.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = combinedEventsManager45.evaluateStep(stepInterpolator47);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection49 = combinedEventsManager45.getEventsHandlers();
        double[] doubleArray56 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean57 = combinedEventsManager45.reset(0.0d, doubleArray56);
        combinedEventsManager31.stepAccepted(0.0d, doubleArray56);
        boolean boolean59 = combinedEventsManager17.reset((double) (short) 1, doubleArray56);
        combinedEventsManager0.stepAccepted((double) (-1.0f), doubleArray56);
        org.apache.commons.math.ode.events.EventHandler eventHandler61 = null;
        combinedEventsManager0.addEventHandler(eventHandler61, Double.NaN, 0.0d, (int) (byte) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager67 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean68 = combinedEventsManager67.stop();
        double double69 = combinedEventsManager67.getEventTime();
        double double70 = combinedEventsManager67.getEventTime();
        double double71 = combinedEventsManager67.getEventTime();
        boolean boolean72 = combinedEventsManager67.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager74 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = combinedEventsManager74.evaluateStep(stepInterpolator75);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection77 = combinedEventsManager74.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager79 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean80 = combinedEventsManager79.stop();
        double double81 = combinedEventsManager79.getEventTime();
        double double82 = combinedEventsManager79.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection83 = combinedEventsManager79.getEventsStates();
        double[] doubleArray86 = new double[] { (-1.0f) };
        boolean boolean87 = combinedEventsManager79.reset((double) (short) 100, doubleArray86);
        combinedEventsManager74.stepAccepted((double) 10, doubleArray86);
        combinedEventsManager67.stepAccepted((double) 100.0f, doubleArray86);
        boolean boolean90 = combinedEventsManager0.reset((double) 1, doubleArray86);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(eventStateCollection83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection27 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        double double31 = combinedEventsManager29.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager29.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager34.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager34.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager39.getEventsStates();
        double[] doubleArray44 = new double[] { 1L };
        boolean boolean45 = combinedEventsManager39.reset((double) (byte) 0, doubleArray44);
        combinedEventsManager34.stepAccepted((double) (byte) 1, doubleArray44);
        combinedEventsManager29.stepAccepted(1.0d, doubleArray44);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = combinedEventsManager29.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection53 = combinedEventsManager51.getEventsStates();
        double[] doubleArray56 = new double[] { 1L };
        boolean boolean57 = combinedEventsManager51.reset((double) (byte) 0, doubleArray56);
        boolean boolean58 = combinedEventsManager29.reset((double) (byte) 100, doubleArray56);
        boolean boolean59 = combinedEventsManager0.reset(0.0d, doubleArray56);
        double double60 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection61 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection62 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(eventStateCollection53);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(eventStateCollection61);
        org.junit.Assert.assertNotNull(eventHandlerCollection62);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        double double10 = combinedEventsManager0.getEventTime();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        boolean boolean12 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler14 = null;
        combinedEventsManager0.addEventHandler(eventHandler14, (double) (short) 1, 0.0d, 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection13);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection22 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertNotNull(eventHandlerCollection22);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = combinedEventsManager0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) '4', 1.0d, (int) (byte) 1);
        boolean boolean13 = combinedEventsManager0.stop();
        boolean boolean14 = combinedEventsManager0.isEmpty();
        boolean boolean15 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager17.getEventsStates();
        combinedEventsManager17.clearEventsHandlers();
        double double22 = combinedEventsManager17.getEventTime();
        boolean boolean23 = combinedEventsManager17.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler24 = null;
        combinedEventsManager17.addEventHandler(eventHandler24, (double) 'a', (double) 0, (int) '4');
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        boolean boolean32 = combinedEventsManager30.stop();
        combinedEventsManager30.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        double double39 = combinedEventsManager37.getEventTime();
        double double40 = combinedEventsManager37.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager37.getEventsStates();
        double[] doubleArray44 = new double[] { (-1.0f) };
        boolean boolean45 = combinedEventsManager37.reset((double) (short) 100, doubleArray44);
        boolean boolean46 = combinedEventsManager30.reset((double) 0, doubleArray44);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection47 = combinedEventsManager30.getEventsHandlers();
        boolean boolean48 = combinedEventsManager30.stop();
        combinedEventsManager30.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = combinedEventsManager30.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager53.getEventsStates();
        double[] doubleArray58 = new double[] { 1L };
        boolean boolean59 = combinedEventsManager53.reset((double) (byte) 0, doubleArray58);
        boolean boolean60 = combinedEventsManager30.reset((double) 1L, doubleArray58);
        boolean boolean61 = combinedEventsManager17.reset(Double.NaN, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted(0.0d, doubleArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        boolean boolean32 = combinedEventsManager0.reset((double) 10, doubleArray30);
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, 10.0d, (double) (short) -1, (int) (byte) 1);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = combinedEventsManager40.evaluateStep(stepInterpolator42);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager40.getEventsHandlers();
        double[] doubleArray50 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean51 = combinedEventsManager40.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = combinedEventsManager40.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection53 = combinedEventsManager40.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager55.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager55.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager60 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean61 = combinedEventsManager60.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager60.getEventsStates();
        double[] doubleArray65 = new double[] { 1L };
        boolean boolean66 = combinedEventsManager60.reset((double) (byte) 0, doubleArray65);
        combinedEventsManager55.stepAccepted((double) (byte) 1, doubleArray65);
        combinedEventsManager40.stepAccepted((double) (byte) 100, doubleArray65);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = combinedEventsManager70.evaluateStep(stepInterpolator72);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection74 = combinedEventsManager70.getEventsHandlers();
        double[] doubleArray80 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean81 = combinedEventsManager70.reset((double) (byte) 1, doubleArray80);
        org.apache.commons.math.ode.events.EventHandler eventHandler82 = null;
        combinedEventsManager70.addEventHandler(eventHandler82, (double) '#', (double) 100L, 10);
        boolean boolean87 = combinedEventsManager70.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection88 = combinedEventsManager70.getEventsStates();
        double[] doubleArray91 = new double[] { '4' };
        boolean boolean92 = combinedEventsManager70.reset((double) (byte) 0, doubleArray91);
        boolean boolean93 = combinedEventsManager40.reset((double) (byte) 100, doubleArray91);
        boolean boolean94 = combinedEventsManager0.reset((double) (byte) 100, doubleArray91);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection95 = combinedEventsManager0.getEventsStates();
        boolean boolean96 = combinedEventsManager0.isEmpty();
        java.lang.Class<?> wildcardClass97 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(eventStateCollection88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(eventStateCollection95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        boolean boolean8 = combinedEventsManager0.isEmpty();
        double double9 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler2 = null;
        combinedEventsManager0.addEventHandler(eventHandler2, 0.0d, (double) 100.0f, (int) (short) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        double double10 = combinedEventsManager8.getEventTime();
        double double11 = combinedEventsManager8.getEventTime();
        double double12 = combinedEventsManager8.getEventTime();
        boolean boolean13 = combinedEventsManager8.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager8.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager8.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager8.getEventsStates();
        boolean boolean17 = combinedEventsManager8.stop();
        boolean boolean18 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager8.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        double double25 = combinedEventsManager22.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager22.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        boolean boolean32 = combinedEventsManager28.stop();
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean37 = combinedEventsManager28.reset(1.0d, doubleArray36);
        boolean boolean38 = combinedEventsManager22.reset((double) (short) 1, doubleArray36);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        double double42 = combinedEventsManager40.getEventTime();
        double double43 = combinedEventsManager40.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager40.getEventsStates();
        double[] doubleArray47 = new double[] { (-1.0f) };
        boolean boolean48 = combinedEventsManager40.reset((double) (short) 100, doubleArray47);
        combinedEventsManager22.stepAccepted((double) 0.0f, doubleArray47);
        boolean boolean50 = combinedEventsManager8.reset((double) 0, doubleArray47);
        boolean boolean51 = combinedEventsManager0.reset((double) 'a', doubleArray47);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = combinedEventsManager0.evaluateStep(stepInterpolator53);
        boolean boolean55 = combinedEventsManager0.stop();
        double double56 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        double double12 = combinedEventsManager10.getEventTime();
        double double13 = combinedEventsManager10.getEventTime();
        double double14 = combinedEventsManager10.getEventTime();
        boolean boolean15 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager10.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager10.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        double double27 = combinedEventsManager24.getEventTime();
        double double28 = combinedEventsManager24.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray41 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean42 = combinedEventsManager30.reset(0.0d, doubleArray41);
        combinedEventsManager24.stepAccepted((double) (short) 10, doubleArray41);
        combinedEventsManager19.stepAccepted(10.0d, doubleArray41);
        boolean boolean45 = combinedEventsManager19.stop();
        boolean boolean46 = combinedEventsManager19.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean49 = combinedEventsManager48.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = combinedEventsManager48.evaluateStep(stepInterpolator50);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection52 = combinedEventsManager48.getEventsHandlers();
        double[] doubleArray58 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean59 = combinedEventsManager48.reset((double) (byte) 1, doubleArray58);
        org.apache.commons.math.ode.events.EventHandler eventHandler60 = null;
        combinedEventsManager48.addEventHandler(eventHandler60, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection69 = combinedEventsManager66.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager71 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean72 = combinedEventsManager71.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection73 = combinedEventsManager71.getEventsStates();
        double[] doubleArray76 = new double[] { 1L };
        boolean boolean77 = combinedEventsManager71.reset((double) (byte) 0, doubleArray76);
        combinedEventsManager66.stepAccepted((double) (byte) 1, doubleArray76);
        boolean boolean79 = combinedEventsManager48.reset((double) '4', doubleArray76);
        combinedEventsManager19.stepAccepted((double) 1, doubleArray76);
        combinedEventsManager10.stepAccepted((double) (byte) 100, doubleArray76);
        boolean boolean82 = combinedEventsManager0.reset(100.0d, doubleArray76);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator84 = null;
        boolean boolean85 = combinedEventsManager0.evaluateStep(stepInterpolator84);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection86 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(eventStateCollection69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventStateCollection73);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(eventStateCollection86);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        double double15 = combinedEventsManager12.getEventTime();
        boolean boolean16 = combinedEventsManager12.stop();
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean21 = combinedEventsManager12.reset(1.0d, doubleArray20);
        boolean boolean22 = combinedEventsManager6.reset((double) (short) 1, doubleArray20);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        double double27 = combinedEventsManager24.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager24.getEventsStates();
        double[] doubleArray31 = new double[] { (-1.0f) };
        boolean boolean32 = combinedEventsManager24.reset((double) (short) 100, doubleArray31);
        combinedEventsManager6.stepAccepted((double) 0.0f, doubleArray31);
        combinedEventsManager0.stepAccepted((double) 1L, doubleArray31);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray46 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean47 = combinedEventsManager36.reset((double) (byte) 1, doubleArray46);
        org.apache.commons.math.ode.events.EventHandler eventHandler48 = null;
        combinedEventsManager36.addEventHandler(eventHandler48, (double) '#', (double) 100L, 10);
        double[] doubleArray54 = null;
        boolean boolean55 = combinedEventsManager36.reset((double) 10, doubleArray54);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        boolean boolean59 = combinedEventsManager57.stop();
        combinedEventsManager57.clearEventsHandlers();
        boolean boolean61 = combinedEventsManager57.isEmpty();
        boolean boolean62 = combinedEventsManager57.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        double double66 = combinedEventsManager64.getEventTime();
        double double67 = combinedEventsManager64.getEventTime();
        double double68 = combinedEventsManager64.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = combinedEventsManager70.evaluateStep(stepInterpolator72);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection74 = combinedEventsManager70.getEventsHandlers();
        double[] doubleArray81 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean82 = combinedEventsManager70.reset(0.0d, doubleArray81);
        combinedEventsManager64.stepAccepted((double) (short) 10, doubleArray81);
        combinedEventsManager57.stepAccepted((double) 10.0f, doubleArray81);
        boolean boolean85 = combinedEventsManager36.reset((double) (byte) 1, doubleArray81);
        combinedEventsManager0.stepAccepted((double) ' ', doubleArray81);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection87 = combinedEventsManager0.getEventsStates();
        boolean boolean88 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler89 = null;
        combinedEventsManager0.addEventHandler(eventHandler89, (double) ' ', 0.0d, (int) (byte) 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection94 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection74);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(eventStateCollection87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection94);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        boolean boolean8 = combinedEventsManager6.isEmpty();
        double double9 = combinedEventsManager6.getEventTime();
        combinedEventsManager6.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        double double15 = combinedEventsManager12.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager12.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        double double20 = combinedEventsManager18.getEventTime();
        double double21 = combinedEventsManager18.getEventTime();
        boolean boolean22 = combinedEventsManager18.stop();
        double[] doubleArray26 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean27 = combinedEventsManager18.reset(1.0d, doubleArray26);
        boolean boolean28 = combinedEventsManager12.reset((double) (short) 1, doubleArray26);
        boolean boolean29 = combinedEventsManager6.reset((double) 10L, doubleArray26);
        boolean boolean30 = combinedEventsManager0.reset(0.0d, doubleArray26);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection31 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection31);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        java.lang.Class<?> wildcardClass21 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        double double8 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = combinedEventsManager0.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager14.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager14.getEventsStates();
        boolean boolean18 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        double double22 = combinedEventsManager20.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager20.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager25 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean26 = combinedEventsManager25.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager25.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager25.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager30.getEventsStates();
        double[] doubleArray35 = new double[] { 1L };
        boolean boolean36 = combinedEventsManager30.reset((double) (byte) 0, doubleArray35);
        combinedEventsManager25.stepAccepted((double) (byte) 1, doubleArray35);
        combinedEventsManager20.stepAccepted(1.0d, doubleArray35);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager20.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager42.getEventsStates();
        double[] doubleArray47 = new double[] { 1L };
        boolean boolean48 = combinedEventsManager42.reset((double) (byte) 0, doubleArray47);
        boolean boolean49 = combinedEventsManager20.reset((double) (byte) 100, doubleArray47);
        boolean boolean50 = combinedEventsManager14.reset((double) (byte) 100, doubleArray47);
        combinedEventsManager0.stepAccepted((double) 1L, doubleArray47);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        double double3 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection5 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection5);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray10);
        boolean boolean13 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler16 = null;
        combinedEventsManager0.addEventHandler(eventHandler16, (double) (-1), 0.0d, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eventStateCollection15);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager13.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        double[] doubleArray23 = new double[] { 1L };
        boolean boolean24 = combinedEventsManager18.reset((double) (byte) 0, doubleArray23);
        boolean boolean25 = combinedEventsManager13.reset((double) (short) -1, doubleArray23);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = combinedEventsManager27.evaluateStep(stepInterpolator29);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection31 = combinedEventsManager27.getEventsHandlers();
        double[] doubleArray37 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean38 = combinedEventsManager27.reset((double) (byte) 1, doubleArray37);
        boolean boolean39 = combinedEventsManager27.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager41 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean42 = combinedEventsManager41.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = combinedEventsManager41.evaluateStep(stepInterpolator43);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager41.getEventsHandlers();
        double[] doubleArray52 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean53 = combinedEventsManager41.reset(0.0d, doubleArray52);
        combinedEventsManager27.stepAccepted(0.0d, doubleArray52);
        boolean boolean55 = combinedEventsManager13.reset((double) (short) 1, doubleArray52);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray52);
        boolean boolean57 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection58 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection58);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray10);
        boolean boolean13 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        boolean boolean17 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = combinedEventsManager19.evaluateStep(stepInterpolator23);
        combinedEventsManager19.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        double double29 = combinedEventsManager27.getEventTime();
        double double30 = combinedEventsManager27.getEventTime();
        boolean boolean31 = combinedEventsManager27.stop();
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean36 = combinedEventsManager27.reset(1.0d, doubleArray35);
        boolean boolean37 = combinedEventsManager19.reset((double) (short) 0, doubleArray35);
        combinedEventsManager19.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        boolean boolean42 = combinedEventsManager40.stop();
        combinedEventsManager40.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager40.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager40.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager47 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean48 = combinedEventsManager47.stop();
        double double49 = combinedEventsManager47.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager47.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection54 = combinedEventsManager52.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager52.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager57.getEventsStates();
        double[] doubleArray62 = new double[] { 1L };
        boolean boolean63 = combinedEventsManager57.reset((double) (byte) 0, doubleArray62);
        combinedEventsManager52.stepAccepted((double) (byte) 1, doubleArray62);
        combinedEventsManager47.stepAccepted(1.0d, doubleArray62);
        combinedEventsManager40.stepAccepted(10.0d, doubleArray62);
        combinedEventsManager19.stepAccepted((double) 10, doubleArray62);
        boolean boolean68 = combinedEventsManager0.reset((double) 10L, doubleArray62);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertNotNull(eventStateCollection45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventStateCollection54);
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        double double8 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager10.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager16.getEventsStates();
        double[] doubleArray21 = new double[] { 1L };
        boolean boolean22 = combinedEventsManager16.reset((double) (byte) 0, doubleArray21);
        combinedEventsManager10.stepAccepted(0.0d, doubleArray21);
        boolean boolean24 = combinedEventsManager10.stop();
        combinedEventsManager10.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        double double29 = combinedEventsManager27.getEventTime();
        double double30 = combinedEventsManager27.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager27.getEventsStates();
        double[] doubleArray34 = new double[] { (-1.0f) };
        boolean boolean35 = combinedEventsManager27.reset((double) (short) 100, doubleArray34);
        boolean boolean36 = combinedEventsManager10.reset((double) (short) 0, doubleArray34);
        boolean boolean37 = combinedEventsManager10.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        double double41 = combinedEventsManager39.getEventTime();
        double double42 = combinedEventsManager39.getEventTime();
        double double43 = combinedEventsManager39.getEventTime();
        boolean boolean44 = combinedEventsManager39.stop();
        boolean boolean45 = combinedEventsManager39.stop();
        combinedEventsManager39.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean49 = combinedEventsManager48.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager48.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection51 = combinedEventsManager48.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager53.getEventsStates();
        double[] doubleArray58 = new double[] { 1L };
        boolean boolean59 = combinedEventsManager53.reset((double) (byte) 0, doubleArray58);
        combinedEventsManager48.stepAccepted((double) (byte) 1, doubleArray58);
        combinedEventsManager39.stepAccepted((double) (short) 100, doubleArray58);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager63 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean64 = combinedEventsManager63.stop();
        double double65 = combinedEventsManager63.getEventTime();
        double double66 = combinedEventsManager63.getEventTime();
        double double67 = combinedEventsManager63.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager69 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean70 = combinedEventsManager69.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator71 = null;
        boolean boolean72 = combinedEventsManager69.evaluateStep(stepInterpolator71);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection73 = combinedEventsManager69.getEventsHandlers();
        double[] doubleArray80 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean81 = combinedEventsManager69.reset(0.0d, doubleArray80);
        combinedEventsManager63.stepAccepted((double) (short) 10, doubleArray80);
        combinedEventsManager39.stepAccepted((double) (-1L), doubleArray80);
        boolean boolean84 = combinedEventsManager10.reset(1.0d, doubleArray80);
        combinedEventsManager0.stepAccepted((double) (short) -1, doubleArray80);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(eventStateCollection51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection73);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        boolean boolean13 = combinedEventsManager0.stop();
        double double14 = combinedEventsManager0.getEventTime();
        boolean boolean15 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager0.getEventsHandlers();
        double double17 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        double double10 = combinedEventsManager6.getEventTime();
        boolean boolean11 = combinedEventsManager6.stop();
        boolean boolean12 = combinedEventsManager6.stop();
        combinedEventsManager6.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        double double17 = combinedEventsManager15.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager15.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager20.getEventsStates();
        double[] doubleArray25 = new double[] { 1L };
        boolean boolean26 = combinedEventsManager20.reset((double) (byte) 0, doubleArray25);
        boolean boolean27 = combinedEventsManager15.reset((double) (short) -1, doubleArray25);
        combinedEventsManager6.stepAccepted((double) (byte) 0, doubleArray25);
        combinedEventsManager0.stepAccepted((double) 100, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection30 = combinedEventsManager0.getEventsHandlers();
        double double31 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler32 = null;
        combinedEventsManager0.addEventHandler(eventHandler32, (double) '4', (double) (short) 0, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        boolean boolean32 = combinedEventsManager0.reset((double) 10, doubleArray30);
        boolean boolean33 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager0.getEventsHandlers();
        boolean boolean19 = combinedEventsManager0.stop();
        boolean boolean20 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) '#', 0.0d, 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager0.getEventsStates();
        double double13 = combinedEventsManager0.getEventTime();
        java.lang.Class<?> wildcardClass14 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager6.stepAccepted((double) 0, doubleArray22);
        boolean boolean25 = combinedEventsManager0.reset((double) '#', doubleArray22);
        boolean boolean26 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection27 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = combinedEventsManager0.evaluateStep(stepInterpolator28);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        boolean boolean20 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        double double25 = combinedEventsManager23.getEventTime();
        double double26 = combinedEventsManager23.getEventTime();
        double double27 = combinedEventsManager23.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = combinedEventsManager29.evaluateStep(stepInterpolator31);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection33 = combinedEventsManager29.getEventsHandlers();
        double[] doubleArray40 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean41 = combinedEventsManager29.reset(0.0d, doubleArray40);
        combinedEventsManager23.stepAccepted((double) (short) 10, doubleArray40);
        combinedEventsManager23.clearEventsHandlers();
        boolean boolean44 = combinedEventsManager23.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager46.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        double double55 = combinedEventsManager52.getEventTime();
        boolean boolean56 = combinedEventsManager52.stop();
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean61 = combinedEventsManager52.reset(1.0d, doubleArray60);
        boolean boolean62 = combinedEventsManager46.reset((double) (short) 1, doubleArray60);
        boolean boolean63 = combinedEventsManager23.reset((double) ' ', doubleArray60);
        boolean boolean64 = combinedEventsManager0.reset(0.0d, doubleArray60);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = combinedEventsManager0.evaluateStep(stepInterpolator65);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection67 = combinedEventsManager0.getEventsStates();
        boolean boolean68 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection33);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(eventStateCollection67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler22 = null;
        combinedEventsManager0.addEventHandler(eventHandler22, (double) ' ', (double) (short) 100, (int) (short) 0);
        boolean boolean27 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler2 = null;
        combinedEventsManager0.addEventHandler(eventHandler2, 0.0d, (double) 100.0f, (int) (short) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        double double10 = combinedEventsManager8.getEventTime();
        double double11 = combinedEventsManager8.getEventTime();
        double double12 = combinedEventsManager8.getEventTime();
        boolean boolean13 = combinedEventsManager8.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager8.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager8.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager8.getEventsStates();
        boolean boolean17 = combinedEventsManager8.stop();
        boolean boolean18 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager8.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        double double25 = combinedEventsManager22.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager22.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        boolean boolean32 = combinedEventsManager28.stop();
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean37 = combinedEventsManager28.reset(1.0d, doubleArray36);
        boolean boolean38 = combinedEventsManager22.reset((double) (short) 1, doubleArray36);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        double double42 = combinedEventsManager40.getEventTime();
        double double43 = combinedEventsManager40.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager40.getEventsStates();
        double[] doubleArray47 = new double[] { (-1.0f) };
        boolean boolean48 = combinedEventsManager40.reset((double) (short) 100, doubleArray47);
        combinedEventsManager22.stepAccepted((double) 0.0f, doubleArray47);
        boolean boolean50 = combinedEventsManager8.reset((double) 0, doubleArray47);
        boolean boolean51 = combinedEventsManager0.reset((double) 'a', doubleArray47);
        java.lang.Class<?> wildcardClass52 = doubleArray47.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) '4', (double) 10.0f, 10);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean50 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager15.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager15.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager20.getEventsStates();
        double[] doubleArray25 = new double[] { 1L };
        boolean boolean26 = combinedEventsManager20.reset((double) (byte) 0, doubleArray25);
        combinedEventsManager15.stepAccepted((double) (byte) 1, doubleArray25);
        combinedEventsManager0.stepAccepted((double) (byte) 100, doubleArray25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler42 = null;
        combinedEventsManager30.addEventHandler(eventHandler42, (double) '#', (double) 100L, 10);
        boolean boolean47 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager30.getEventsStates();
        double[] doubleArray51 = new double[] { '4' };
        boolean boolean52 = combinedEventsManager30.reset((double) (byte) 0, doubleArray51);
        boolean boolean53 = combinedEventsManager0.reset((double) (byte) 100, doubleArray51);
        boolean boolean54 = combinedEventsManager0.stop();
        double double55 = combinedEventsManager0.getEventTime();
        boolean boolean56 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection57 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection57);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) (short) 10, 0.0d, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = new double[] { (-1.0f) };
        boolean boolean8 = combinedEventsManager0.reset((double) (short) 100, doubleArray7);
        java.lang.Class<?> wildcardClass9 = doubleArray7.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager5.evaluateStep(stepInterpolator7);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager5.getEventsHandlers();
        double[] doubleArray16 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean17 = combinedEventsManager5.reset(0.0d, doubleArray16);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray16);
        combinedEventsManager0.clearEventsHandlers();
        double[] doubleArray21 = null;
        combinedEventsManager0.stepAccepted((double) '4', doubleArray21);
        double double23 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        double double5 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        double double11 = combinedEventsManager0.getEventTime();
        boolean boolean12 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager12.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager12.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        double[] doubleArray22 = new double[] { 1L };
        boolean boolean23 = combinedEventsManager17.reset((double) (byte) 0, doubleArray22);
        combinedEventsManager12.stepAccepted((double) (byte) 1, doubleArray22);
        combinedEventsManager7.stepAccepted(1.0d, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        org.apache.commons.math.ode.events.EventHandler eventHandler27 = null;
        combinedEventsManager0.addEventHandler(eventHandler27, (double) 0, (double) 1.0f, (int) (short) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection32);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager30.getEventsStates();
        double[] doubleArray35 = new double[] { 1L };
        boolean boolean36 = combinedEventsManager30.reset((double) (byte) 0, doubleArray35);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray35);
        org.apache.commons.math.ode.events.EventHandler eventHandler38 = null;
        combinedEventsManager0.addEventHandler(eventHandler38, (double) (byte) 100, (double) 10L, (-1));
        org.apache.commons.math.ode.events.EventHandler eventHandler43 = null;
        combinedEventsManager0.addEventHandler(eventHandler43, (double) (-1), (double) (short) 1, (int) '#');
        boolean boolean48 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        boolean boolean52 = combinedEventsManager50.stop();
        combinedEventsManager50.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager50.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.events.EventHandler eventHandler56 = null;
        combinedEventsManager50.addEventHandler(eventHandler56, (double) '#', 0.0d, 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection61 = combinedEventsManager50.getEventsStates();
        boolean boolean62 = combinedEventsManager50.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager64 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean65 = combinedEventsManager64.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection66 = combinedEventsManager64.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = combinedEventsManager64.evaluateStep(stepInterpolator67);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection72 = combinedEventsManager70.getEventsStates();
        double[] doubleArray75 = new double[] { 1L };
        boolean boolean76 = combinedEventsManager70.reset((double) (byte) 0, doubleArray75);
        combinedEventsManager64.stepAccepted(0.0d, doubleArray75);
        boolean boolean78 = combinedEventsManager50.reset((double) 100, doubleArray75);
        boolean boolean79 = combinedEventsManager0.reset((double) (-1), doubleArray75);
        org.apache.commons.math.ode.events.EventHandler eventHandler80 = null;
        combinedEventsManager0.addEventHandler(eventHandler80, (-1.0d), (double) 1.0f, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(eventStateCollection61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(eventStateCollection66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(eventStateCollection72);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler19 = null;
        combinedEventsManager0.addEventHandler(eventHandler19, 0.0d, (double) (short) 1, 1);
        double double24 = combinedEventsManager0.getEventTime();
        boolean boolean25 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = combinedEventsManager0.evaluateStep(stepInterpolator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        double double7 = combinedEventsManager0.getEventTime();
        double double8 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = combinedEventsManager0.evaluateStep(stepInterpolator12);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager0.getEventsStates();
        boolean boolean16 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) 10L, (-1.0d), (int) (short) 100);
        combinedEventsManager0.clearEventsHandlers();
        java.lang.Class<?> wildcardClass19 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        double double13 = combinedEventsManager11.getEventTime();
        double double14 = combinedEventsManager11.getEventTime();
        boolean boolean15 = combinedEventsManager11.stop();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean20 = combinedEventsManager11.reset(1.0d, doubleArray19);
        boolean boolean21 = combinedEventsManager5.reset((double) (short) 1, doubleArray19);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray19);
        boolean boolean23 = combinedEventsManager0.stop();
        double[] doubleArray25 = null;
        boolean boolean26 = combinedEventsManager0.reset((double) 100, doubleArray25);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager14.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager14.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager19.getEventsStates();
        double[] doubleArray26 = new double[] { (-1.0f) };
        boolean boolean27 = combinedEventsManager19.reset((double) (short) 100, doubleArray26);
        combinedEventsManager14.stepAccepted((double) 10, doubleArray26);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray26);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager0.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager0.evaluateStep(stepInterpolator33);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventStateCollection36);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        double double25 = combinedEventsManager22.getEventTime();
        double double26 = combinedEventsManager22.getEventTime();
        boolean boolean27 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager22.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        boolean boolean42 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection43 = combinedEventsManager30.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager45.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager45.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager50.getEventsStates();
        double[] doubleArray55 = new double[] { 1L };
        boolean boolean56 = combinedEventsManager50.reset((double) (byte) 0, doubleArray55);
        combinedEventsManager45.stepAccepted((double) (byte) 1, doubleArray55);
        combinedEventsManager30.stepAccepted((double) (byte) 100, doubleArray55);
        combinedEventsManager22.stepAccepted((double) 1, doubleArray55);
        boolean boolean60 = combinedEventsManager0.reset((-1.0d), doubleArray55);
        boolean boolean61 = combinedEventsManager0.isEmpty();
        boolean boolean62 = combinedEventsManager0.stop();
        boolean boolean63 = combinedEventsManager0.isEmpty();
        java.lang.Class<?> wildcardClass64 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) 100, (double) 1, (int) '4');
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(eventStateCollection12);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = combinedEventsManager16.evaluateStep(stepInterpolator18);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager16.getEventsHandlers();
        double[] doubleArray26 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean27 = combinedEventsManager16.reset((double) (byte) 1, doubleArray26);
        boolean boolean28 = combinedEventsManager16.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray41 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean42 = combinedEventsManager30.reset(0.0d, doubleArray41);
        combinedEventsManager16.stepAccepted(0.0d, doubleArray41);
        combinedEventsManager0.stepAccepted((double) (short) 1, doubleArray41);
        double double45 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler46 = null;
        combinedEventsManager0.addEventHandler(eventHandler46, (double) 'a', 0.0d, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        double double19 = combinedEventsManager0.getEventTime();
        boolean boolean20 = combinedEventsManager0.stop();
        double double21 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler22 = null;
        combinedEventsManager0.addEventHandler(eventHandler22, (double) 1L, (double) ' ', (int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager18.stepAccepted((double) (byte) 1, doubleArray28);
        boolean boolean31 = combinedEventsManager0.reset((double) '4', doubleArray28);
        boolean boolean32 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, (double) (byte) 10, (double) (byte) 100, 1);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventStateCollection38);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager6.getEventsStates();
        double[] doubleArray11 = new double[] { 1L };
        boolean boolean12 = combinedEventsManager6.reset((double) (byte) 0, doubleArray11);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray11);
        boolean boolean14 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        double double19 = combinedEventsManager17.getEventTime();
        double double20 = combinedEventsManager17.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager17.getEventsStates();
        double[] doubleArray24 = new double[] { (-1.0f) };
        boolean boolean25 = combinedEventsManager17.reset((double) (short) 100, doubleArray24);
        boolean boolean26 = combinedEventsManager0.reset((double) (short) 0, doubleArray24);
        boolean boolean27 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler28 = null;
        combinedEventsManager0.addEventHandler(eventHandler28, (double) '#', (double) ' ', (int) (byte) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventStateCollection33);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = combinedEventsManager0.evaluateStep(stepInterpolator14);
        double double16 = combinedEventsManager0.getEventTime();
        boolean boolean17 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) (short) 10, (double) (-1.0f), (int) '#');
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager0.getEventsStates();
        boolean boolean13 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager6.getEventsStates();
        combinedEventsManager6.clearEventsHandlers();
        combinedEventsManager6.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        boolean boolean14 = combinedEventsManager12.isEmpty();
        double double15 = combinedEventsManager12.getEventTime();
        combinedEventsManager12.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        double double20 = combinedEventsManager18.getEventTime();
        double double21 = combinedEventsManager18.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        double double27 = combinedEventsManager24.getEventTime();
        boolean boolean28 = combinedEventsManager24.stop();
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean33 = combinedEventsManager24.reset(1.0d, doubleArray32);
        boolean boolean34 = combinedEventsManager18.reset((double) (short) 1, doubleArray32);
        boolean boolean35 = combinedEventsManager12.reset((double) 10L, doubleArray32);
        boolean boolean36 = combinedEventsManager6.reset(0.0d, doubleArray32);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray32);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager0.evaluateStep(stepInterpolator38);
        boolean boolean40 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) '4', (double) 10.0f, 10);
        combinedEventsManager0.clearEventsHandlers();
        double double50 = combinedEventsManager0.getEventTime();
        java.lang.Class<?> wildcardClass51 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        boolean boolean7 = combinedEventsManager0.stop();
        double[] doubleArray9 = null;
        boolean boolean10 = combinedEventsManager0.reset((double) (short) 10, doubleArray9);
        boolean boolean11 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass4 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        boolean boolean15 = combinedEventsManager0.stop();
        boolean boolean16 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager12.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager12.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        double[] doubleArray22 = new double[] { 1L };
        boolean boolean23 = combinedEventsManager17.reset((double) (byte) 0, doubleArray22);
        combinedEventsManager12.stepAccepted((double) (byte) 1, doubleArray22);
        combinedEventsManager7.stepAccepted(1.0d, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        org.apache.commons.math.ode.events.EventHandler eventHandler27 = null;
        combinedEventsManager0.addEventHandler(eventHandler27, (double) 0, (double) 1.0f, (int) (short) -1);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        double double36 = combinedEventsManager34.getEventTime();
        double double37 = combinedEventsManager34.getEventTime();
        double double38 = combinedEventsManager34.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = combinedEventsManager40.evaluateStep(stepInterpolator42);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager40.getEventsHandlers();
        double[] doubleArray51 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean52 = combinedEventsManager40.reset(0.0d, doubleArray51);
        combinedEventsManager34.stepAccepted((double) (short) 10, doubleArray51);
        combinedEventsManager34.clearEventsHandlers();
        boolean boolean55 = combinedEventsManager34.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        double double59 = combinedEventsManager57.getEventTime();
        double double60 = combinedEventsManager57.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection61 = combinedEventsManager57.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager63 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean64 = combinedEventsManager63.stop();
        double double65 = combinedEventsManager63.getEventTime();
        double double66 = combinedEventsManager63.getEventTime();
        boolean boolean67 = combinedEventsManager63.stop();
        double[] doubleArray71 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean72 = combinedEventsManager63.reset(1.0d, doubleArray71);
        boolean boolean73 = combinedEventsManager57.reset((double) (short) 1, doubleArray71);
        boolean boolean74 = combinedEventsManager34.reset((double) ' ', doubleArray71);
        boolean boolean75 = combinedEventsManager0.reset((double) (short) 100, doubleArray71);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection76 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(eventStateCollection61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection76);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        boolean boolean4 = combinedEventsManager0.stop();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        double double13 = combinedEventsManager11.getEventTime();
        double double14 = combinedEventsManager11.getEventTime();
        boolean boolean15 = combinedEventsManager11.stop();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean20 = combinedEventsManager11.reset(1.0d, doubleArray19);
        boolean boolean21 = combinedEventsManager5.reset((double) (short) 1, doubleArray19);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray19);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection23);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) (byte) 1, (double) 0, 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = combinedEventsManager0.evaluateStep(stepInterpolator12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(eventStateCollection11);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        double double7 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) (-1L), (double) 0.0f, (int) '#');
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean21 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = combinedEventsManager0.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.events.EventHandler eventHandler24 = null;
        combinedEventsManager0.addEventHandler(eventHandler24, (double) (byte) 100, (double) (short) 100, (int) ' ');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        boolean boolean7 = combinedEventsManager0.stop();
        double double8 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager14.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager14.getEventsStates();
        combinedEventsManager14.clearEventsHandlers();
        double double19 = combinedEventsManager14.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        double double23 = combinedEventsManager21.getEventTime();
        double double24 = combinedEventsManager21.getEventTime();
        double double25 = combinedEventsManager21.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        double double29 = combinedEventsManager27.getEventTime();
        double double30 = combinedEventsManager27.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager27.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        double double35 = combinedEventsManager33.getEventTime();
        double double36 = combinedEventsManager33.getEventTime();
        boolean boolean37 = combinedEventsManager33.stop();
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean42 = combinedEventsManager33.reset(1.0d, doubleArray41);
        boolean boolean43 = combinedEventsManager27.reset((double) (short) 1, doubleArray41);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        double double47 = combinedEventsManager45.getEventTime();
        double double48 = combinedEventsManager45.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection49 = combinedEventsManager45.getEventsStates();
        double[] doubleArray52 = new double[] { (-1.0f) };
        boolean boolean53 = combinedEventsManager45.reset((double) (short) 100, doubleArray52);
        combinedEventsManager27.stepAccepted((double) 0.0f, doubleArray52);
        combinedEventsManager21.stepAccepted((double) 1L, doubleArray52);
        combinedEventsManager14.stepAccepted((double) (byte) 10, doubleArray52);
        boolean boolean57 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager59 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean60 = combinedEventsManager59.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection61 = combinedEventsManager59.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection62 = combinedEventsManager59.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection63 = combinedEventsManager59.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler64 = null;
        combinedEventsManager59.addEventHandler(eventHandler64, (double) (short) 1, 10.0d, (int) (short) 10);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection69 = combinedEventsManager59.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager71 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean72 = combinedEventsManager71.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection73 = combinedEventsManager71.getEventsStates();
        combinedEventsManager71.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection75 = combinedEventsManager71.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager77 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean78 = combinedEventsManager77.stop();
        boolean boolean79 = combinedEventsManager77.stop();
        combinedEventsManager77.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection81 = combinedEventsManager77.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection82 = combinedEventsManager77.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager84 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean85 = combinedEventsManager84.stop();
        double double86 = combinedEventsManager84.getEventTime();
        double double87 = combinedEventsManager84.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection88 = combinedEventsManager84.getEventsStates();
        double[] doubleArray91 = new double[] { (-1.0f) };
        boolean boolean92 = combinedEventsManager84.reset((double) (short) 100, doubleArray91);
        boolean boolean93 = combinedEventsManager77.reset((double) 0, doubleArray91);
        combinedEventsManager71.stepAccepted((-1.0d), doubleArray91);
        boolean boolean95 = combinedEventsManager59.reset((double) 0L, doubleArray91);
        boolean boolean96 = combinedEventsManager14.reset((double) 1L, doubleArray91);
        combinedEventsManager0.stepAccepted((double) 1.0f, doubleArray91);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection98 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(eventStateCollection49);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(eventStateCollection61);
        org.junit.Assert.assertNotNull(eventHandlerCollection62);
        org.junit.Assert.assertNotNull(eventHandlerCollection63);
        org.junit.Assert.assertNotNull(eventStateCollection69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventStateCollection73);
        org.junit.Assert.assertNotNull(eventStateCollection75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection81);
        org.junit.Assert.assertNotNull(eventStateCollection82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(eventStateCollection88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection98);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler19 = null;
        combinedEventsManager0.addEventHandler(eventHandler19, 0.0d, (double) (short) 1, 1);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager0.evaluateStep(stepInterpolator25);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventStateCollection27);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        double double10 = combinedEventsManager8.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager8.getEventsHandlers();
        boolean boolean12 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray24 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean25 = combinedEventsManager14.reset((double) (byte) 1, doubleArray24);
        boolean boolean26 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager28.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager28.getEventsHandlers();
        double[] doubleArray38 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean39 = combinedEventsManager28.reset((double) (byte) 1, doubleArray38);
        org.apache.commons.math.ode.events.EventHandler eventHandler40 = null;
        combinedEventsManager28.addEventHandler(eventHandler40, (double) '#', (double) 100L, 10);
        boolean boolean45 = combinedEventsManager28.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection46 = combinedEventsManager28.getEventsStates();
        double[] doubleArray49 = new double[] { '4' };
        boolean boolean50 = combinedEventsManager28.reset((double) (byte) 0, doubleArray49);
        boolean boolean51 = combinedEventsManager14.reset(Double.NaN, doubleArray49);
        boolean boolean52 = combinedEventsManager8.reset((double) 100.0f, doubleArray49);
        combinedEventsManager0.stepAccepted((double) (short) -1, doubleArray49);
        double double54 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(eventStateCollection46);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        double double11 = combinedEventsManager7.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray24 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean25 = combinedEventsManager13.reset(0.0d, doubleArray24);
        combinedEventsManager7.stepAccepted((double) (short) 10, doubleArray24);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray24);
        combinedEventsManager0.clearEventsHandlers();
        double double29 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        boolean boolean8 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventStateCollection9);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) (byte) 100, doubleArray27);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection31 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler32 = null;
        combinedEventsManager0.addEventHandler(eventHandler32, (double) 1.0f, (double) (short) 100, (int) '4');
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler38 = null;
        combinedEventsManager0.addEventHandler(eventHandler38, (double) (byte) 10, 0.0d, (int) (short) 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection43 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(eventHandlerCollection31);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertNotNull(eventHandlerCollection43);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        double double13 = combinedEventsManager11.getEventTime();
        double double14 = combinedEventsManager11.getEventTime();
        boolean boolean15 = combinedEventsManager11.stop();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean20 = combinedEventsManager11.reset(1.0d, doubleArray19);
        boolean boolean21 = combinedEventsManager5.reset((double) (short) 1, doubleArray19);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray19);
        boolean boolean23 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        double double28 = combinedEventsManager26.getEventTime();
        double double29 = combinedEventsManager26.getEventTime();
        double double30 = combinedEventsManager26.getEventTime();
        boolean boolean31 = combinedEventsManager26.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager26.getEventsHandlers();
        boolean boolean33 = combinedEventsManager26.isEmpty();
        double double34 = combinedEventsManager26.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler35 = null;
        combinedEventsManager26.addEventHandler(eventHandler35, (double) (byte) 0, (double) 0, (int) (byte) 1);
        combinedEventsManager26.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager26.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager43 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean44 = combinedEventsManager43.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager43.getEventsStates();
        combinedEventsManager43.clearEventsHandlers();
        combinedEventsManager43.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager49 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean50 = combinedEventsManager49.stop();
        boolean boolean51 = combinedEventsManager49.isEmpty();
        double double52 = combinedEventsManager49.getEventTime();
        combinedEventsManager49.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        double double57 = combinedEventsManager55.getEventTime();
        double double58 = combinedEventsManager55.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager55.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        double double63 = combinedEventsManager61.getEventTime();
        double double64 = combinedEventsManager61.getEventTime();
        boolean boolean65 = combinedEventsManager61.stop();
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean70 = combinedEventsManager61.reset(1.0d, doubleArray69);
        boolean boolean71 = combinedEventsManager55.reset((double) (short) 1, doubleArray69);
        boolean boolean72 = combinedEventsManager49.reset((double) 10L, doubleArray69);
        boolean boolean73 = combinedEventsManager43.reset(0.0d, doubleArray69);
        boolean boolean74 = combinedEventsManager26.reset((double) 10.0f, doubleArray69);
        combinedEventsManager0.stepAccepted((double) (byte) 0, doubleArray69);
        java.lang.Class<?> wildcardClass76 = doubleArray69.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventStateCollection45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = combinedEventsManager0.evaluateStep(stepInterpolator1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager5.evaluateStep(stepInterpolator7);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager5.getEventsHandlers();
        double[] doubleArray15 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean16 = combinedEventsManager5.reset((double) (byte) 1, doubleArray15);
        boolean boolean17 = combinedEventsManager5.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        combinedEventsManager5.stepAccepted(0.0d, doubleArray30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection33 = combinedEventsManager5.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        double double37 = combinedEventsManager35.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager35.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection42 = combinedEventsManager40.getEventsStates();
        double[] doubleArray45 = new double[] { 1L };
        boolean boolean46 = combinedEventsManager40.reset((double) (byte) 0, doubleArray45);
        boolean boolean47 = combinedEventsManager35.reset((double) (short) -1, doubleArray45);
        boolean boolean48 = combinedEventsManager5.reset((double) (short) 0, doubleArray45);
        boolean boolean49 = combinedEventsManager0.reset((double) (byte) 0, doubleArray45);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = combinedEventsManager51.evaluateStep(stepInterpolator53);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection55 = combinedEventsManager51.getEventsHandlers();
        double[] doubleArray61 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean62 = combinedEventsManager51.reset((double) (byte) 1, doubleArray61);
        boolean boolean63 = combinedEventsManager51.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection64 = combinedEventsManager51.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection69 = combinedEventsManager66.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager71 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean72 = combinedEventsManager71.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection73 = combinedEventsManager71.getEventsStates();
        double[] doubleArray76 = new double[] { 1L };
        boolean boolean77 = combinedEventsManager71.reset((double) (byte) 0, doubleArray76);
        combinedEventsManager66.stepAccepted((double) (byte) 1, doubleArray76);
        combinedEventsManager51.stepAccepted((double) (byte) 100, doubleArray76);
        double double80 = combinedEventsManager51.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager82 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean83 = combinedEventsManager82.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection84 = combinedEventsManager82.getEventsStates();
        double[] doubleArray87 = new double[] { 1L };
        boolean boolean88 = combinedEventsManager82.reset((double) (byte) 0, doubleArray87);
        combinedEventsManager51.stepAccepted((double) (byte) 1, doubleArray87);
        boolean boolean90 = combinedEventsManager0.reset((double) (byte) -1, doubleArray87);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection92 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventStateCollection42);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(eventStateCollection69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventStateCollection73);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(eventStateCollection84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection92);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        double double16 = combinedEventsManager13.getEventTime();
        double double17 = combinedEventsManager13.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        combinedEventsManager13.stepAccepted((double) (short) 10, doubleArray30);
        combinedEventsManager8.stepAccepted(10.0d, doubleArray30);
        boolean boolean34 = combinedEventsManager8.stop();
        boolean boolean35 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager37.evaluateStep(stepInterpolator39);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection41 = combinedEventsManager37.getEventsHandlers();
        double[] doubleArray47 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean48 = combinedEventsManager37.reset((double) (byte) 1, doubleArray47);
        org.apache.commons.math.ode.events.EventHandler eventHandler49 = null;
        combinedEventsManager37.addEventHandler(eventHandler49, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager55.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager55.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager60 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean61 = combinedEventsManager60.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager60.getEventsStates();
        double[] doubleArray65 = new double[] { 1L };
        boolean boolean66 = combinedEventsManager60.reset((double) (byte) 0, doubleArray65);
        combinedEventsManager55.stepAccepted((double) (byte) 1, doubleArray65);
        boolean boolean68 = combinedEventsManager37.reset((double) '4', doubleArray65);
        combinedEventsManager8.stepAccepted((double) 1, doubleArray65);
        boolean boolean70 = combinedEventsManager0.reset((double) 100.0f, doubleArray65);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator71 = null;
        boolean boolean72 = combinedEventsManager0.evaluateStep(stepInterpolator71);
        boolean boolean73 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection74 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(eventStateCollection74);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) 0, (double) (short) 10, (int) 'a');
        org.apache.commons.math.ode.events.EventHandler eventHandler14 = null;
        combinedEventsManager0.addEventHandler(eventHandler14, (-1.0d), (double) 10, 1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager20.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager20.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection24 = combinedEventsManager20.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager20.getEventsStates();
        double[] doubleArray27 = null;
        boolean boolean28 = combinedEventsManager20.reset((double) 1.0f, doubleArray27);
        boolean boolean29 = combinedEventsManager20.isEmpty();
        double[] doubleArray31 = null;
        boolean boolean32 = combinedEventsManager20.reset((double) (byte) 10, doubleArray31);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager20.evaluateStep(stepInterpolator33);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection35 = combinedEventsManager20.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        double double39 = combinedEventsManager37.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager37.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager42.getEventsStates();
        double[] doubleArray47 = new double[] { 1L };
        boolean boolean48 = combinedEventsManager42.reset((double) (byte) 0, doubleArray47);
        boolean boolean49 = combinedEventsManager37.reset((double) (short) -1, doubleArray47);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = combinedEventsManager51.evaluateStep(stepInterpolator53);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection55 = combinedEventsManager51.getEventsHandlers();
        double[] doubleArray61 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean62 = combinedEventsManager51.reset((double) (byte) 1, doubleArray61);
        boolean boolean63 = combinedEventsManager51.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager65 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean66 = combinedEventsManager65.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = combinedEventsManager65.evaluateStep(stepInterpolator67);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection69 = combinedEventsManager65.getEventsHandlers();
        double[] doubleArray76 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean77 = combinedEventsManager65.reset(0.0d, doubleArray76);
        combinedEventsManager51.stepAccepted(0.0d, doubleArray76);
        boolean boolean79 = combinedEventsManager37.reset((double) (short) 1, doubleArray76);
        combinedEventsManager20.stepAccepted((double) (-1.0f), doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) '#', doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(eventHandlerCollection24);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection69);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        boolean boolean10 = combinedEventsManager6.stop();
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean15 = combinedEventsManager6.reset(1.0d, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) (short) 1, doubleArray14);
        org.apache.commons.math.ode.events.EventHandler eventHandler17 = null;
        combinedEventsManager0.addEventHandler(eventHandler17, 100.0d, (double) (byte) 100, (int) 'a');
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = combinedEventsManager23.evaluateStep(stepInterpolator24);
        boolean boolean26 = combinedEventsManager23.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler27 = null;
        combinedEventsManager23.addEventHandler(eventHandler27, 0.0d, (double) (short) 0, (int) (short) 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        double double35 = combinedEventsManager33.getEventTime();
        double double36 = combinedEventsManager33.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager33.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = combinedEventsManager39.evaluateStep(stepInterpolator41);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection43 = combinedEventsManager39.getEventsHandlers();
        double[] doubleArray49 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean50 = combinedEventsManager39.reset((double) (byte) 1, doubleArray49);
        org.apache.commons.math.ode.events.EventHandler eventHandler51 = null;
        combinedEventsManager39.addEventHandler(eventHandler51, (double) '#', (double) 100L, 10);
        boolean boolean56 = combinedEventsManager39.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager39.getEventsStates();
        double[] doubleArray60 = new double[] { '4' };
        boolean boolean61 = combinedEventsManager39.reset((double) (byte) 0, doubleArray60);
        boolean boolean62 = combinedEventsManager33.reset((double) ' ', doubleArray60);
        boolean boolean63 = combinedEventsManager23.reset((double) 100, doubleArray60);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) '4', doubleArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        double[] doubleArray18 = null;
        boolean boolean19 = combinedEventsManager0.reset((double) 10, doubleArray18);
        boolean boolean20 = combinedEventsManager0.stop();
        boolean boolean21 = combinedEventsManager0.stop();
        boolean boolean22 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager15.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager15.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager20.getEventsStates();
        double[] doubleArray25 = new double[] { 1L };
        boolean boolean26 = combinedEventsManager20.reset((double) (byte) 0, doubleArray25);
        combinedEventsManager15.stepAccepted((double) (byte) 1, doubleArray25);
        combinedEventsManager0.stepAccepted((double) (byte) 100, doubleArray25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler42 = null;
        combinedEventsManager30.addEventHandler(eventHandler42, (double) '#', (double) 100L, 10);
        boolean boolean47 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager30.getEventsStates();
        double[] doubleArray51 = new double[] { '4' };
        boolean boolean52 = combinedEventsManager30.reset((double) (byte) 0, doubleArray51);
        boolean boolean53 = combinedEventsManager0.reset((double) (byte) 100, doubleArray51);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        double double57 = combinedEventsManager55.getEventTime();
        double double58 = combinedEventsManager55.getEventTime();
        double double59 = combinedEventsManager55.getEventTime();
        boolean boolean60 = combinedEventsManager55.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection61 = combinedEventsManager55.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager63 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean64 = combinedEventsManager63.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = combinedEventsManager63.evaluateStep(stepInterpolator65);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection67 = combinedEventsManager63.getEventsHandlers();
        double[] doubleArray73 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean74 = combinedEventsManager63.reset((double) (byte) 1, doubleArray73);
        boolean boolean75 = combinedEventsManager63.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection76 = combinedEventsManager63.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager78 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean79 = combinedEventsManager78.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection80 = combinedEventsManager78.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection81 = combinedEventsManager78.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager83 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean84 = combinedEventsManager83.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection85 = combinedEventsManager83.getEventsStates();
        double[] doubleArray88 = new double[] { 1L };
        boolean boolean89 = combinedEventsManager83.reset((double) (byte) 0, doubleArray88);
        combinedEventsManager78.stepAccepted((double) (byte) 1, doubleArray88);
        combinedEventsManager63.stepAccepted((double) (byte) 100, doubleArray88);
        combinedEventsManager55.stepAccepted((double) 1, doubleArray88);
        combinedEventsManager0.stepAccepted((double) (short) 0, doubleArray88);
        boolean boolean94 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection95 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection96 = combinedEventsManager0.getEventsHandlers();
        boolean boolean97 = combinedEventsManager0.isEmpty();
        boolean boolean98 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(eventStateCollection80);
        org.junit.Assert.assertNotNull(eventStateCollection81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(eventStateCollection85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(eventStateCollection95);
        org.junit.Assert.assertNotNull(eventHandlerCollection96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (-1.0d), (double) 1, (int) (byte) -1);
        boolean boolean10 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) (byte) 100, doubleArray27);
        org.apache.commons.math.ode.events.EventHandler eventHandler30 = null;
        combinedEventsManager0.addEventHandler(eventHandler30, (double) ' ', Double.NaN, 1);
        org.apache.commons.math.ode.events.EventHandler eventHandler35 = null;
        combinedEventsManager0.addEventHandler(eventHandler35, (double) 100L, (double) 'a', (int) (byte) 100);
        boolean boolean40 = combinedEventsManager0.stop();
        double double41 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        boolean boolean20 = combinedEventsManager0.stop();
        double double21 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = combinedEventsManager0.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.events.EventHandler eventHandler24 = null;
        combinedEventsManager0.addEventHandler(eventHandler24, (double) ' ', (double) 10.0f, 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection29 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection29);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        double double6 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        double double10 = combinedEventsManager8.getEventTime();
        double double11 = combinedEventsManager8.getEventTime();
        double double12 = combinedEventsManager8.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        double double16 = combinedEventsManager14.getEventTime();
        double double17 = combinedEventsManager14.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager14.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        double double22 = combinedEventsManager20.getEventTime();
        double double23 = combinedEventsManager20.getEventTime();
        boolean boolean24 = combinedEventsManager20.stop();
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean29 = combinedEventsManager20.reset(1.0d, doubleArray28);
        boolean boolean30 = combinedEventsManager14.reset((double) (short) 1, doubleArray28);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager32.getEventsStates();
        double[] doubleArray39 = new double[] { (-1.0f) };
        boolean boolean40 = combinedEventsManager32.reset((double) (short) 100, doubleArray39);
        combinedEventsManager14.stepAccepted((double) 0.0f, doubleArray39);
        combinedEventsManager8.stepAccepted((double) 1L, doubleArray39);
        combinedEventsManager0.stepAccepted((double) (short) 0, doubleArray39);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager46.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection49 = combinedEventsManager46.getEventsStates();
        boolean boolean50 = combinedEventsManager46.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = combinedEventsManager46.evaluateStep(stepInterpolator51);
        double double53 = combinedEventsManager46.getEventTime();
        combinedEventsManager46.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager56 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean57 = combinedEventsManager56.stop();
        double double58 = combinedEventsManager56.getEventTime();
        double double59 = combinedEventsManager56.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection60 = combinedEventsManager56.getEventsStates();
        double[] doubleArray63 = new double[] { (-1.0f) };
        boolean boolean64 = combinedEventsManager56.reset((double) (short) 100, doubleArray63);
        combinedEventsManager46.stepAccepted(0.0d, doubleArray63);
        combinedEventsManager0.stepAccepted((double) 10, doubleArray63);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager68 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean69 = combinedEventsManager68.stop();
        double double70 = combinedEventsManager68.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection71 = combinedEventsManager68.getEventsHandlers();
        boolean boolean72 = combinedEventsManager68.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator73 = null;
        boolean boolean74 = combinedEventsManager68.evaluateStep(stepInterpolator73);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection75 = combinedEventsManager68.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager77 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean78 = combinedEventsManager77.stop();
        double double79 = combinedEventsManager77.getEventTime();
        double double80 = combinedEventsManager77.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection81 = combinedEventsManager77.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager83 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean84 = combinedEventsManager83.stop();
        double double85 = combinedEventsManager83.getEventTime();
        double double86 = combinedEventsManager83.getEventTime();
        boolean boolean87 = combinedEventsManager83.stop();
        double[] doubleArray91 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean92 = combinedEventsManager83.reset(1.0d, doubleArray91);
        boolean boolean93 = combinedEventsManager77.reset((double) (short) 1, doubleArray91);
        combinedEventsManager68.stepAccepted((double) 10, doubleArray91);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray91);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(eventStateCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(eventStateCollection60);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(eventHandlerCollection71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(eventStateCollection75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(eventStateCollection81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        boolean boolean20 = combinedEventsManager8.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager8.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager23.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager28.getEventsStates();
        double[] doubleArray33 = new double[] { 1L };
        boolean boolean34 = combinedEventsManager28.reset((double) (byte) 0, doubleArray33);
        combinedEventsManager23.stepAccepted((double) (byte) 1, doubleArray33);
        combinedEventsManager8.stepAccepted((double) (byte) 100, doubleArray33);
        combinedEventsManager0.stepAccepted((double) 1, doubleArray33);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager0.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager41 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = combinedEventsManager41.evaluateStep(stepInterpolator42);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager41.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager46.getEventsStates();
        double[] doubleArray53 = new double[] { (-1.0f) };
        boolean boolean54 = combinedEventsManager46.reset((double) (short) 100, doubleArray53);
        combinedEventsManager41.stepAccepted((double) 10, doubleArray53);
        combinedEventsManager0.stepAccepted(100.0d, doubleArray53);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = combinedEventsManager0.evaluateStep(stepInterpolator57);
        double double59 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager6.getEventsStates();
        double[] doubleArray11 = new double[] { 1L };
        boolean boolean12 = combinedEventsManager6.reset((double) (byte) 0, doubleArray11);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray11);
        boolean boolean14 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        double double19 = combinedEventsManager17.getEventTime();
        double double20 = combinedEventsManager17.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager17.getEventsStates();
        double[] doubleArray24 = new double[] { (-1.0f) };
        boolean boolean25 = combinedEventsManager17.reset((double) (short) 100, doubleArray24);
        boolean boolean26 = combinedEventsManager0.reset((double) (short) 0, doubleArray24);
        boolean boolean27 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager11.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager11.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager16.getEventsStates();
        double[] doubleArray21 = new double[] { 1L };
        boolean boolean22 = combinedEventsManager16.reset((double) (byte) 0, doubleArray21);
        combinedEventsManager11.stepAccepted((double) (byte) 1, doubleArray21);
        combinedEventsManager6.stepAccepted(1.0d, doubleArray21);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager6.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager28.getEventsStates();
        double[] doubleArray33 = new double[] { 1L };
        boolean boolean34 = combinedEventsManager28.reset((double) (byte) 0, doubleArray33);
        boolean boolean35 = combinedEventsManager6.reset((double) (byte) 100, doubleArray33);
        boolean boolean36 = combinedEventsManager0.reset((double) (byte) 100, doubleArray33);
        boolean boolean37 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager0.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = combinedEventsManager0.evaluateStep(stepInterpolator40);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean43 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray16 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean17 = combinedEventsManager6.reset((double) (byte) 1, doubleArray16);
        org.apache.commons.math.ode.events.EventHandler eventHandler18 = null;
        combinedEventsManager6.addEventHandler(eventHandler18, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager24.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager24.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager29.getEventsStates();
        double[] doubleArray34 = new double[] { 1L };
        boolean boolean35 = combinedEventsManager29.reset((double) (byte) 0, doubleArray34);
        combinedEventsManager24.stepAccepted((double) (byte) 1, doubleArray34);
        boolean boolean37 = combinedEventsManager6.reset((double) '4', doubleArray34);
        boolean boolean38 = combinedEventsManager0.reset((double) (-1), doubleArray34);
        org.apache.commons.math.ode.events.EventHandler eventHandler39 = null;
        combinedEventsManager0.addEventHandler(eventHandler39, (double) (byte) 100, (double) (-1), (int) (short) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager0.getEventsStates();
        boolean boolean45 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        double double12 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray24 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean25 = combinedEventsManager14.reset((double) (byte) 1, doubleArray24);
        org.apache.commons.math.ode.events.EventHandler eventHandler26 = null;
        combinedEventsManager14.addEventHandler(eventHandler26, (double) '#', (double) 100L, 10);
        boolean boolean31 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager33.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager33.getEventsHandlers();
        double[] doubleArray44 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean45 = combinedEventsManager33.reset(0.0d, doubleArray44);
        boolean boolean46 = combinedEventsManager14.reset((double) 10, doubleArray44);
        org.apache.commons.math.ode.events.EventHandler eventHandler47 = null;
        combinedEventsManager14.addEventHandler(eventHandler47, 10.0d, (double) (short) -1, (int) (byte) 1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        double double55 = combinedEventsManager53.getEventTime();
        double double56 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection57 = combinedEventsManager53.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = combinedEventsManager53.evaluateStep(stepInterpolator58);
        boolean boolean60 = combinedEventsManager53.stop();
        combinedEventsManager53.clearEventsHandlers();
        combinedEventsManager53.clearEventsHandlers();
        double double63 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection64 = combinedEventsManager53.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        double double68 = combinedEventsManager66.getEventTime();
        double double69 = combinedEventsManager66.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager66.getEventsStates();
        double[] doubleArray73 = new double[] { (-1.0f) };
        boolean boolean74 = combinedEventsManager66.reset((double) (short) 100, doubleArray73);
        boolean boolean75 = combinedEventsManager53.reset((double) 0L, doubleArray73);
        boolean boolean76 = combinedEventsManager14.reset((double) 100, doubleArray73);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray73);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection78 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection79 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(eventHandlerCollection57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(eventHandlerCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(eventStateCollection70);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection78);
        org.junit.Assert.assertNotNull(eventHandlerCollection79);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager18.stepAccepted((double) (byte) 1, doubleArray28);
        boolean boolean31 = combinedEventsManager0.reset((double) '4', doubleArray28);
        boolean boolean32 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, (double) (short) -1, (double) (byte) -1, (int) (byte) 1);
        double[] doubleArray43 = new double[] { (-1L), 0.0d, 10L, (-1L) };
        boolean boolean44 = combinedEventsManager0.reset((double) (byte) 1, doubleArray43);
        boolean boolean45 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager47 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean48 = combinedEventsManager47.stop();
        boolean boolean49 = combinedEventsManager47.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler50 = null;
        combinedEventsManager47.addEventHandler(eventHandler50, (double) (short) 100, (double) 10.0f, (int) (byte) 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection55 = combinedEventsManager47.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection56 = combinedEventsManager47.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler57 = null;
        combinedEventsManager47.addEventHandler(eventHandler57, 0.0d, (double) 10, (-1));
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager63 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean64 = combinedEventsManager63.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = combinedEventsManager63.evaluateStep(stepInterpolator65);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = combinedEventsManager63.evaluateStep(stepInterpolator67);
        combinedEventsManager63.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager71 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean72 = combinedEventsManager71.stop();
        double double73 = combinedEventsManager71.getEventTime();
        double double74 = combinedEventsManager71.getEventTime();
        boolean boolean75 = combinedEventsManager71.stop();
        double[] doubleArray79 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean80 = combinedEventsManager71.reset(1.0d, doubleArray79);
        boolean boolean81 = combinedEventsManager63.reset((double) (short) 0, doubleArray79);
        boolean boolean82 = combinedEventsManager47.reset((double) (byte) 0, doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) (-1L), doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection55);
        org.junit.Assert.assertNotNull(eventHandlerCollection56);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        double double10 = combinedEventsManager0.getEventTime();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        boolean boolean12 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        double double18 = combinedEventsManager16.getEventTime();
        double double19 = combinedEventsManager16.getEventTime();
        double double20 = combinedEventsManager16.getEventTime();
        boolean boolean21 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection22 = combinedEventsManager16.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager16.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager25 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean26 = combinedEventsManager25.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = combinedEventsManager25.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        double double33 = combinedEventsManager30.getEventTime();
        double double34 = combinedEventsManager30.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray47 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean48 = combinedEventsManager36.reset(0.0d, doubleArray47);
        combinedEventsManager30.stepAccepted((double) (short) 10, doubleArray47);
        combinedEventsManager25.stepAccepted(10.0d, doubleArray47);
        boolean boolean51 = combinedEventsManager25.stop();
        boolean boolean52 = combinedEventsManager25.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager54 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean55 = combinedEventsManager54.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = combinedEventsManager54.evaluateStep(stepInterpolator56);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection58 = combinedEventsManager54.getEventsHandlers();
        double[] doubleArray64 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean65 = combinedEventsManager54.reset((double) (byte) 1, doubleArray64);
        org.apache.commons.math.ode.events.EventHandler eventHandler66 = null;
        combinedEventsManager54.addEventHandler(eventHandler66, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager72 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean73 = combinedEventsManager72.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection74 = combinedEventsManager72.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection75 = combinedEventsManager72.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager77 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean78 = combinedEventsManager77.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection79 = combinedEventsManager77.getEventsStates();
        double[] doubleArray82 = new double[] { 1L };
        boolean boolean83 = combinedEventsManager77.reset((double) (byte) 0, doubleArray82);
        combinedEventsManager72.stepAccepted((double) (byte) 1, doubleArray82);
        boolean boolean85 = combinedEventsManager54.reset((double) '4', doubleArray82);
        combinedEventsManager25.stepAccepted((double) 1, doubleArray82);
        combinedEventsManager16.stepAccepted((double) (byte) 100, doubleArray82);
        combinedEventsManager0.stepAccepted((double) (byte) 100, doubleArray82);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection22);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(eventStateCollection74);
        org.junit.Assert.assertNotNull(eventStateCollection75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(eventStateCollection79);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        double double3 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        double double6 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, Double.NaN, (double) 10L, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(eventStateCollection7);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        double double4 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager15.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager15.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager20.getEventsStates();
        double[] doubleArray25 = new double[] { 1L };
        boolean boolean26 = combinedEventsManager20.reset((double) (byte) 0, doubleArray25);
        combinedEventsManager15.stepAccepted((double) (byte) 1, doubleArray25);
        combinedEventsManager0.stepAccepted((double) (byte) 100, doubleArray25);
        double double29 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass32 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        double double7 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        double double9 = combinedEventsManager0.getEventTime();
        boolean boolean10 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        double double6 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        double double6 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        double double10 = combinedEventsManager8.getEventTime();
        double double11 = combinedEventsManager8.getEventTime();
        double double12 = combinedEventsManager8.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager8.stepAccepted((double) (short) 10, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager8.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        double double33 = combinedEventsManager30.getEventTime();
        double double34 = combinedEventsManager30.getEventTime();
        boolean boolean35 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager30.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = combinedEventsManager38.evaluateStep(stepInterpolator40);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection42 = combinedEventsManager38.getEventsHandlers();
        double[] doubleArray48 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean49 = combinedEventsManager38.reset((double) (byte) 1, doubleArray48);
        boolean boolean50 = combinedEventsManager38.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection51 = combinedEventsManager38.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager53.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection56 = combinedEventsManager53.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection60 = combinedEventsManager58.getEventsStates();
        double[] doubleArray63 = new double[] { 1L };
        boolean boolean64 = combinedEventsManager58.reset((double) (byte) 0, doubleArray63);
        combinedEventsManager53.stepAccepted((double) (byte) 1, doubleArray63);
        combinedEventsManager38.stepAccepted((double) (byte) 100, doubleArray63);
        combinedEventsManager30.stepAccepted((double) 1, doubleArray63);
        boolean boolean68 = combinedEventsManager8.reset((-1.0d), doubleArray63);
        boolean boolean69 = combinedEventsManager0.reset((double) 0L, doubleArray63);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass71 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertNotNull(eventStateCollection56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(eventStateCollection60);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(eventStateCollection70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        double double6 = combinedEventsManager0.getEventTime();
        double double7 = combinedEventsManager0.getEventTime();
        boolean boolean8 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = combinedEventsManager12.evaluateStep(stepInterpolator14);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager12.getEventsHandlers();
        double[] doubleArray22 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean23 = combinedEventsManager12.reset((double) (byte) 1, doubleArray22);
        org.apache.commons.math.ode.events.EventHandler eventHandler24 = null;
        combinedEventsManager12.addEventHandler(eventHandler24, (double) '#', (double) 100L, 10);
        boolean boolean29 = combinedEventsManager12.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager12.getEventsStates();
        double[] doubleArray33 = new double[] { '4' };
        boolean boolean34 = combinedEventsManager12.reset((double) (byte) 0, doubleArray33);
        boolean boolean35 = combinedEventsManager6.reset((double) ' ', doubleArray33);
        boolean boolean36 = combinedEventsManager0.reset((double) (byte) 1, doubleArray33);
        org.apache.commons.math.ode.events.EventHandler eventHandler37 = null;
        combinedEventsManager0.addEventHandler(eventHandler37, 0.0d, (double) ' ', (int) 'a');
        boolean boolean42 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) 10L, (double) 100.0f, (int) 'a');
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean13 = combinedEventsManager0.isEmpty();
        boolean boolean14 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        boolean boolean7 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        double double15 = combinedEventsManager12.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager12.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = combinedEventsManager18.evaluateStep(stepInterpolator20);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection22 = combinedEventsManager18.getEventsHandlers();
        double[] doubleArray28 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean29 = combinedEventsManager18.reset((double) (byte) 1, doubleArray28);
        org.apache.commons.math.ode.events.EventHandler eventHandler30 = null;
        combinedEventsManager18.addEventHandler(eventHandler30, (double) '#', (double) 100L, 10);
        boolean boolean35 = combinedEventsManager18.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager18.getEventsStates();
        double[] doubleArray39 = new double[] { '4' };
        boolean boolean40 = combinedEventsManager18.reset((double) (byte) 0, doubleArray39);
        boolean boolean41 = combinedEventsManager12.reset((double) ' ', doubleArray39);
        double[] doubleArray43 = null;
        combinedEventsManager12.stepAccepted((double) (byte) 10, doubleArray43);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager46.getEventsStates();
        double[] doubleArray51 = new double[] { 1L };
        boolean boolean52 = combinedEventsManager46.reset((double) (byte) 0, doubleArray51);
        org.apache.commons.math.ode.events.EventHandler eventHandler53 = null;
        combinedEventsManager46.addEventHandler(eventHandler53, (double) (byte) 10, 1.0d, (int) (byte) 1);
        org.apache.commons.math.ode.events.EventHandler eventHandler58 = null;
        combinedEventsManager46.addEventHandler(eventHandler58, (double) 10L, (double) (byte) 100, (int) (byte) 0);
        org.apache.commons.math.ode.events.EventHandler eventHandler63 = null;
        combinedEventsManager46.addEventHandler(eventHandler63, 0.0d, (double) 100L, (int) '4');
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager69 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean70 = combinedEventsManager69.stop();
        boolean boolean71 = combinedEventsManager69.isEmpty();
        double double72 = combinedEventsManager69.getEventTime();
        combinedEventsManager69.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager75 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean76 = combinedEventsManager75.stop();
        double double77 = combinedEventsManager75.getEventTime();
        double double78 = combinedEventsManager75.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection79 = combinedEventsManager75.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager81 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean82 = combinedEventsManager81.stop();
        double double83 = combinedEventsManager81.getEventTime();
        double double84 = combinedEventsManager81.getEventTime();
        boolean boolean85 = combinedEventsManager81.stop();
        double[] doubleArray89 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean90 = combinedEventsManager81.reset(1.0d, doubleArray89);
        boolean boolean91 = combinedEventsManager75.reset((double) (short) 1, doubleArray89);
        boolean boolean92 = combinedEventsManager69.reset((double) 10L, doubleArray89);
        boolean boolean93 = combinedEventsManager46.reset(1.0d, doubleArray89);
        combinedEventsManager12.stepAccepted(0.0d, doubleArray89);
        boolean boolean95 = combinedEventsManager0.reset((double) 'a', doubleArray89);
        java.lang.Class<?> wildcardClass96 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection22);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(eventStateCollection79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager18.stepAccepted((double) (byte) 1, doubleArray28);
        boolean boolean31 = combinedEventsManager0.reset((double) '4', doubleArray28);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager34.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager34.getEventsStates();
        combinedEventsManager34.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        double double42 = combinedEventsManager40.getEventTime();
        double double43 = combinedEventsManager40.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager40.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = combinedEventsManager46.evaluateStep(stepInterpolator48);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection50 = combinedEventsManager46.getEventsHandlers();
        double[] doubleArray56 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean57 = combinedEventsManager46.reset((double) (byte) 1, doubleArray56);
        org.apache.commons.math.ode.events.EventHandler eventHandler58 = null;
        combinedEventsManager46.addEventHandler(eventHandler58, (double) '#', (double) 100L, 10);
        boolean boolean63 = combinedEventsManager46.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager46.getEventsStates();
        double[] doubleArray67 = new double[] { '4' };
        boolean boolean68 = combinedEventsManager46.reset((double) (byte) 0, doubleArray67);
        boolean boolean69 = combinedEventsManager40.reset((double) ' ', doubleArray67);
        boolean boolean70 = combinedEventsManager34.reset((double) (byte) 1, doubleArray67);
        combinedEventsManager0.stepAccepted((-1.0d), doubleArray67);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = combinedEventsManager0.evaluateStep(stepInterpolator72);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator74 = null;
        boolean boolean75 = combinedEventsManager0.evaluateStep(stepInterpolator74);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        double double3 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.stop();
        double double6 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        double double8 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        org.apache.commons.math.ode.events.EventHandler eventHandler20 = null;
        combinedEventsManager0.addEventHandler(eventHandler20, (double) 1, (double) 'a', (int) '#');
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray30 = null;
        boolean boolean31 = combinedEventsManager0.reset((double) 100, doubleArray30);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        double double4 = combinedEventsManager0.getEventTime();
        double double5 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection5 = combinedEventsManager0.getEventsHandlers();
        double double6 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        double double23 = combinedEventsManager21.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager21.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager26.getEventsStates();
        double[] doubleArray31 = new double[] { 1L };
        boolean boolean32 = combinedEventsManager26.reset((double) (byte) 0, doubleArray31);
        boolean boolean33 = combinedEventsManager21.reset((double) (short) -1, doubleArray31);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = combinedEventsManager35.evaluateStep(stepInterpolator37);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection39 = combinedEventsManager35.getEventsHandlers();
        double[] doubleArray45 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean46 = combinedEventsManager35.reset((double) (byte) 1, doubleArray45);
        boolean boolean47 = combinedEventsManager35.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager49 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean50 = combinedEventsManager49.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = combinedEventsManager49.evaluateStep(stepInterpolator51);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection53 = combinedEventsManager49.getEventsHandlers();
        double[] doubleArray60 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean61 = combinedEventsManager49.reset(0.0d, doubleArray60);
        combinedEventsManager35.stepAccepted(0.0d, doubleArray60);
        boolean boolean63 = combinedEventsManager21.reset((double) (short) 1, doubleArray60);
        combinedEventsManager8.stepAccepted((double) 10.0f, doubleArray60);
        combinedEventsManager8.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager67 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean68 = combinedEventsManager67.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection69 = combinedEventsManager67.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = combinedEventsManager67.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager73 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean74 = combinedEventsManager73.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection75 = combinedEventsManager73.getEventsStates();
        double[] doubleArray78 = new double[] { 1L };
        boolean boolean79 = combinedEventsManager73.reset((double) (byte) 0, doubleArray78);
        combinedEventsManager67.stepAccepted(0.0d, doubleArray78);
        boolean boolean81 = combinedEventsManager67.stop();
        combinedEventsManager67.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager84 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean85 = combinedEventsManager84.stop();
        double double86 = combinedEventsManager84.getEventTime();
        double double87 = combinedEventsManager84.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection88 = combinedEventsManager84.getEventsStates();
        double[] doubleArray91 = new double[] { (-1.0f) };
        boolean boolean92 = combinedEventsManager84.reset((double) (short) 100, doubleArray91);
        boolean boolean93 = combinedEventsManager67.reset((double) (short) 0, doubleArray91);
        boolean boolean94 = combinedEventsManager8.reset(100.0d, doubleArray91);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray91);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection96 = combinedEventsManager0.getEventsHandlers();
        double double97 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(eventHandlerCollection5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(eventStateCollection69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(eventStateCollection75);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(eventStateCollection88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection96);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager14.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager14.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager19.getEventsStates();
        double[] doubleArray26 = new double[] { (-1.0f) };
        boolean boolean27 = combinedEventsManager19.reset((double) (short) 100, doubleArray26);
        combinedEventsManager14.stepAccepted((double) 10, doubleArray26);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray26);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager0.evaluateStep(stepInterpolator30);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager0.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        double double38 = combinedEventsManager36.getEventTime();
        double double39 = combinedEventsManager36.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager36.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        double double44 = combinedEventsManager42.getEventTime();
        double double45 = combinedEventsManager42.getEventTime();
        boolean boolean46 = combinedEventsManager42.stop();
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean51 = combinedEventsManager42.reset(1.0d, doubleArray50);
        boolean boolean52 = combinedEventsManager36.reset((double) (short) 1, doubleArray50);
        boolean boolean53 = combinedEventsManager0.reset((double) 100L, doubleArray50);
        double double54 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = combinedEventsManager0.evaluateStep(stepInterpolator55);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass58 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler19 = null;
        combinedEventsManager0.addEventHandler(eventHandler19, 0.0d, (double) (short) 1, 1);
        org.apache.commons.math.ode.events.EventHandler eventHandler24 = null;
        combinedEventsManager0.addEventHandler(eventHandler24, Double.NaN, (double) 10.0f, (int) (byte) 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection29 = combinedEventsManager0.getEventsHandlers();
        java.lang.Class<?> wildcardClass30 = eventHandlerCollection29.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(eventHandlerCollection29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection29 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection29);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager18.stepAccepted((double) (byte) 1, doubleArray28);
        boolean boolean31 = combinedEventsManager0.reset((double) '4', doubleArray28);
        boolean boolean32 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, (double) (byte) 10, (double) (byte) 100, 1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection38 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler39 = null;
        combinedEventsManager0.addEventHandler(eventHandler39, (double) '#', 10.0d, 0);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean45 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray16 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean17 = combinedEventsManager6.reset((double) (byte) 1, doubleArray16);
        boolean boolean18 = combinedEventsManager6.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection19 = combinedEventsManager6.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager21.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager21.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager26.getEventsStates();
        double[] doubleArray31 = new double[] { 1L };
        boolean boolean32 = combinedEventsManager26.reset((double) (byte) 0, doubleArray31);
        combinedEventsManager21.stepAccepted((double) (byte) 1, doubleArray31);
        combinedEventsManager6.stepAccepted((double) (byte) 100, doubleArray31);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray46 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean47 = combinedEventsManager36.reset((double) (byte) 1, doubleArray46);
        org.apache.commons.math.ode.events.EventHandler eventHandler48 = null;
        combinedEventsManager36.addEventHandler(eventHandler48, (double) '#', (double) 100L, 10);
        boolean boolean53 = combinedEventsManager36.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection54 = combinedEventsManager36.getEventsStates();
        double[] doubleArray57 = new double[] { '4' };
        boolean boolean58 = combinedEventsManager36.reset((double) (byte) 0, doubleArray57);
        boolean boolean59 = combinedEventsManager6.reset((double) (byte) 100, doubleArray57);
        combinedEventsManager0.stepAccepted((double) (byte) -1, doubleArray57);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventStateCollection54);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        boolean boolean8 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray21 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean22 = combinedEventsManager11.reset((double) (byte) 1, doubleArray21);
        org.apache.commons.math.ode.events.EventHandler eventHandler23 = null;
        combinedEventsManager11.addEventHandler(eventHandler23, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager29.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager29.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager34.getEventsStates();
        double[] doubleArray39 = new double[] { 1L };
        boolean boolean40 = combinedEventsManager34.reset((double) (byte) 0, doubleArray39);
        combinedEventsManager29.stepAccepted((double) (byte) 1, doubleArray39);
        boolean boolean42 = combinedEventsManager11.reset((double) '4', doubleArray39);
        combinedEventsManager11.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager45.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager45.getEventsStates();
        combinedEventsManager45.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        double double53 = combinedEventsManager51.getEventTime();
        double double54 = combinedEventsManager51.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection55 = combinedEventsManager51.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = combinedEventsManager57.evaluateStep(stepInterpolator59);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection61 = combinedEventsManager57.getEventsHandlers();
        double[] doubleArray67 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean68 = combinedEventsManager57.reset((double) (byte) 1, doubleArray67);
        org.apache.commons.math.ode.events.EventHandler eventHandler69 = null;
        combinedEventsManager57.addEventHandler(eventHandler69, (double) '#', (double) 100L, 10);
        boolean boolean74 = combinedEventsManager57.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection75 = combinedEventsManager57.getEventsStates();
        double[] doubleArray78 = new double[] { '4' };
        boolean boolean79 = combinedEventsManager57.reset((double) (byte) 0, doubleArray78);
        boolean boolean80 = combinedEventsManager51.reset((double) ' ', doubleArray78);
        boolean boolean81 = combinedEventsManager45.reset((double) (byte) 1, doubleArray78);
        combinedEventsManager11.stepAccepted((-1.0d), doubleArray78);
        boolean boolean83 = combinedEventsManager0.reset((double) 1, doubleArray78);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(eventHandlerCollection55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(eventStateCollection75);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager9 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean10 = combinedEventsManager9.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager9.evaluateStep(stepInterpolator11);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager9.getEventsHandlers();
        double[] doubleArray19 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean20 = combinedEventsManager9.reset((double) (byte) 1, doubleArray19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager22.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection29 = combinedEventsManager27.getEventsStates();
        double[] doubleArray32 = new double[] { 1L };
        boolean boolean33 = combinedEventsManager27.reset((double) (byte) 0, doubleArray32);
        boolean boolean34 = combinedEventsManager22.reset((double) (short) -1, doubleArray32);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray46 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean47 = combinedEventsManager36.reset((double) (byte) 1, doubleArray46);
        boolean boolean48 = combinedEventsManager36.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = combinedEventsManager50.evaluateStep(stepInterpolator52);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection54 = combinedEventsManager50.getEventsHandlers();
        double[] doubleArray61 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean62 = combinedEventsManager50.reset(0.0d, doubleArray61);
        combinedEventsManager36.stepAccepted(0.0d, doubleArray61);
        boolean boolean64 = combinedEventsManager22.reset((double) (short) 1, doubleArray61);
        combinedEventsManager9.stepAccepted((double) 10.0f, doubleArray61);
        combinedEventsManager0.stepAccepted((double) 0L, doubleArray61);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(eventStateCollection29);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection54);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection27 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection29 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass30 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection27);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertNotNull(eventStateCollection29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertNotNull(eventStateCollection4);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        double[] doubleArray5 = new double[] { 1L };
        boolean boolean6 = combinedEventsManager0.reset((double) (byte) 0, doubleArray5);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        double double8 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        double double8 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        double double12 = combinedEventsManager10.getEventTime();
        double double13 = combinedEventsManager10.getEventTime();
        double double14 = combinedEventsManager10.getEventTime();
        boolean boolean15 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager10.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager10.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        double double27 = combinedEventsManager24.getEventTime();
        double double28 = combinedEventsManager24.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray41 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean42 = combinedEventsManager30.reset(0.0d, doubleArray41);
        combinedEventsManager24.stepAccepted((double) (short) 10, doubleArray41);
        combinedEventsManager19.stepAccepted(10.0d, doubleArray41);
        boolean boolean45 = combinedEventsManager19.stop();
        boolean boolean46 = combinedEventsManager19.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean49 = combinedEventsManager48.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = combinedEventsManager48.evaluateStep(stepInterpolator50);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection52 = combinedEventsManager48.getEventsHandlers();
        double[] doubleArray58 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean59 = combinedEventsManager48.reset((double) (byte) 1, doubleArray58);
        org.apache.commons.math.ode.events.EventHandler eventHandler60 = null;
        combinedEventsManager48.addEventHandler(eventHandler60, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection69 = combinedEventsManager66.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager71 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean72 = combinedEventsManager71.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection73 = combinedEventsManager71.getEventsStates();
        double[] doubleArray76 = new double[] { 1L };
        boolean boolean77 = combinedEventsManager71.reset((double) (byte) 0, doubleArray76);
        combinedEventsManager66.stepAccepted((double) (byte) 1, doubleArray76);
        boolean boolean79 = combinedEventsManager48.reset((double) '4', doubleArray76);
        combinedEventsManager19.stepAccepted((double) 1, doubleArray76);
        combinedEventsManager10.stepAccepted((double) (byte) 100, doubleArray76);
        boolean boolean82 = combinedEventsManager0.reset(100.0d, doubleArray76);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator83 = null;
        boolean boolean84 = combinedEventsManager0.evaluateStep(stepInterpolator83);
        org.apache.commons.math.ode.events.EventHandler eventHandler85 = null;
        combinedEventsManager0.addEventHandler(eventHandler85, (double) (byte) -1, (double) 10.0f, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(eventStateCollection69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventStateCollection73);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        boolean boolean32 = combinedEventsManager0.reset((double) 10, doubleArray30);
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, 10.0d, (double) (short) -1, (int) (byte) 1);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler39 = null;
        combinedEventsManager0.addEventHandler(eventHandler39, (double) ' ', (double) 10L, 10);
        double double44 = combinedEventsManager0.getEventTime();
        boolean boolean45 = combinedEventsManager0.stop();
        boolean boolean46 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        double double48 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        double double12 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray24 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean25 = combinedEventsManager14.reset((double) (byte) 1, doubleArray24);
        org.apache.commons.math.ode.events.EventHandler eventHandler26 = null;
        combinedEventsManager14.addEventHandler(eventHandler26, (double) '#', (double) 100L, 10);
        boolean boolean31 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager33.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager33.getEventsHandlers();
        double[] doubleArray44 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean45 = combinedEventsManager33.reset(0.0d, doubleArray44);
        boolean boolean46 = combinedEventsManager14.reset((double) 10, doubleArray44);
        org.apache.commons.math.ode.events.EventHandler eventHandler47 = null;
        combinedEventsManager14.addEventHandler(eventHandler47, 10.0d, (double) (short) -1, (int) (byte) 1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        double double55 = combinedEventsManager53.getEventTime();
        double double56 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection57 = combinedEventsManager53.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = combinedEventsManager53.evaluateStep(stepInterpolator58);
        boolean boolean60 = combinedEventsManager53.stop();
        combinedEventsManager53.clearEventsHandlers();
        combinedEventsManager53.clearEventsHandlers();
        double double63 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection64 = combinedEventsManager53.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        double double68 = combinedEventsManager66.getEventTime();
        double double69 = combinedEventsManager66.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager66.getEventsStates();
        double[] doubleArray73 = new double[] { (-1.0f) };
        boolean boolean74 = combinedEventsManager66.reset((double) (short) 100, doubleArray73);
        boolean boolean75 = combinedEventsManager53.reset((double) 0L, doubleArray73);
        boolean boolean76 = combinedEventsManager14.reset((double) 100, doubleArray73);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray73);
        double double78 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler80 = null;
        combinedEventsManager0.addEventHandler(eventHandler80, (double) 100L, (double) 1.0f, (int) ' ');
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection85 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(eventHandlerCollection57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(eventHandlerCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(eventStateCollection70);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(eventHandlerCollection85);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager12.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager12.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        double[] doubleArray22 = new double[] { 1L };
        boolean boolean23 = combinedEventsManager17.reset((double) (byte) 0, doubleArray22);
        combinedEventsManager12.stepAccepted((double) (byte) 1, doubleArray22);
        combinedEventsManager7.stepAccepted(1.0d, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        org.apache.commons.math.ode.events.EventHandler eventHandler27 = null;
        combinedEventsManager0.addEventHandler(eventHandler27, (double) 0, (double) 1.0f, (int) (short) -1);
        combinedEventsManager0.clearEventsHandlers();
        double double33 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        double double6 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        double double8 = combinedEventsManager0.getEventTime();
        double double9 = combinedEventsManager0.getEventTime();
        double double10 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection5 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        boolean boolean20 = combinedEventsManager8.isEmpty();
        combinedEventsManager8.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager8.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = combinedEventsManager24.evaluateStep(stepInterpolator26);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager24.getEventsHandlers();
        double[] doubleArray34 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean35 = combinedEventsManager24.reset((double) (byte) 1, doubleArray34);
        boolean boolean36 = combinedEventsManager24.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = combinedEventsManager38.evaluateStep(stepInterpolator40);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection42 = combinedEventsManager38.getEventsHandlers();
        double[] doubleArray49 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean50 = combinedEventsManager38.reset(0.0d, doubleArray49);
        combinedEventsManager24.stepAccepted(0.0d, doubleArray49);
        combinedEventsManager8.stepAccepted((double) (short) 1, doubleArray49);
        combinedEventsManager0.stepAccepted((double) 100L, doubleArray49);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection54 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double56 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(eventHandlerCollection5);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection42);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(eventStateCollection54);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        boolean boolean20 = combinedEventsManager8.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager8.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager23.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager28.getEventsStates();
        double[] doubleArray33 = new double[] { 1L };
        boolean boolean34 = combinedEventsManager28.reset((double) (byte) 0, doubleArray33);
        combinedEventsManager23.stepAccepted((double) (byte) 1, doubleArray33);
        combinedEventsManager8.stepAccepted((double) (byte) 100, doubleArray33);
        combinedEventsManager0.stepAccepted((double) 1, doubleArray33);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager0.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager41 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = combinedEventsManager41.evaluateStep(stepInterpolator42);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager41.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager46.getEventsStates();
        double[] doubleArray53 = new double[] { (-1.0f) };
        boolean boolean54 = combinedEventsManager46.reset((double) (short) 100, doubleArray53);
        combinedEventsManager41.stepAccepted((double) 10, doubleArray53);
        combinedEventsManager0.stepAccepted(100.0d, doubleArray53);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = combinedEventsManager0.evaluateStep(stepInterpolator57);
        boolean boolean59 = combinedEventsManager0.stop();
        boolean boolean60 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        double double11 = combinedEventsManager7.getEventTime();
        boolean boolean12 = combinedEventsManager7.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager7.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager7.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler15 = null;
        combinedEventsManager7.addEventHandler(eventHandler15, 1.0d, (double) 0, (int) (byte) 0);
        org.apache.commons.math.ode.events.EventHandler eventHandler20 = null;
        combinedEventsManager7.addEventHandler(eventHandler20, (double) 10, Double.NaN, (int) (short) -1);
        combinedEventsManager7.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        double double29 = combinedEventsManager27.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager27.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection34 = combinedEventsManager32.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager32.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection39 = combinedEventsManager37.getEventsStates();
        double[] doubleArray42 = new double[] { 1L };
        boolean boolean43 = combinedEventsManager37.reset((double) (byte) 0, doubleArray42);
        combinedEventsManager32.stepAccepted((double) (byte) 1, doubleArray42);
        combinedEventsManager27.stepAccepted(1.0d, doubleArray42);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager47 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean48 = combinedEventsManager47.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection49 = combinedEventsManager47.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection50 = combinedEventsManager47.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection51 = combinedEventsManager47.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler52 = null;
        combinedEventsManager47.addEventHandler(eventHandler52, (double) (short) 1, 10.0d, (int) (short) 10);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager47.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager59 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean60 = combinedEventsManager59.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection61 = combinedEventsManager59.getEventsStates();
        combinedEventsManager59.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager59.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager65 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean66 = combinedEventsManager65.stop();
        boolean boolean67 = combinedEventsManager65.stop();
        combinedEventsManager65.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection69 = combinedEventsManager65.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager65.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager72 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean73 = combinedEventsManager72.stop();
        double double74 = combinedEventsManager72.getEventTime();
        double double75 = combinedEventsManager72.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection76 = combinedEventsManager72.getEventsStates();
        double[] doubleArray79 = new double[] { (-1.0f) };
        boolean boolean80 = combinedEventsManager72.reset((double) (short) 100, doubleArray79);
        boolean boolean81 = combinedEventsManager65.reset((double) 0, doubleArray79);
        combinedEventsManager59.stepAccepted((-1.0d), doubleArray79);
        boolean boolean83 = combinedEventsManager47.reset((double) 0L, doubleArray79);
        combinedEventsManager27.stepAccepted((double) 'a', doubleArray79);
        boolean boolean85 = combinedEventsManager7.reset((double) 'a', doubleArray79);
        combinedEventsManager0.stepAccepted((double) (byte) 100, doubleArray79);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventStateCollection34);
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventStateCollection39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(eventStateCollection49);
        org.junit.Assert.assertNotNull(eventHandlerCollection50);
        org.junit.Assert.assertNotNull(eventHandlerCollection51);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(eventStateCollection61);
        org.junit.Assert.assertNotNull(eventStateCollection63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection69);
        org.junit.Assert.assertNotNull(eventStateCollection70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(eventStateCollection76);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, 1.0d, (double) 10.0f, (int) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eventStateCollection8);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        boolean boolean10 = combinedEventsManager6.stop();
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean15 = combinedEventsManager6.reset(1.0d, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) (short) 1, doubleArray14);
        double double17 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = combinedEventsManager0.evaluateStep(stepInterpolator18);
        boolean boolean20 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventStateCollection21);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        double double14 = combinedEventsManager0.getEventTime();
        double double15 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager0.evaluateStep(stepInterpolator16);
        boolean boolean18 = combinedEventsManager0.isEmpty();
        double double19 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = combinedEventsManager21.evaluateStep(stepInterpolator23);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection25 = combinedEventsManager21.getEventsHandlers();
        double[] doubleArray31 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean32 = combinedEventsManager21.reset((double) (byte) 1, doubleArray31);
        boolean boolean33 = combinedEventsManager21.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = combinedEventsManager35.evaluateStep(stepInterpolator37);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection39 = combinedEventsManager35.getEventsHandlers();
        double[] doubleArray46 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean47 = combinedEventsManager35.reset(0.0d, doubleArray46);
        combinedEventsManager21.stepAccepted(0.0d, doubleArray46);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection49 = combinedEventsManager21.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        double double53 = combinedEventsManager51.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection54 = combinedEventsManager51.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager56 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean57 = combinedEventsManager56.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager56.getEventsStates();
        double[] doubleArray61 = new double[] { 1L };
        boolean boolean62 = combinedEventsManager56.reset((double) (byte) 0, doubleArray61);
        boolean boolean63 = combinedEventsManager51.reset((double) (short) -1, doubleArray61);
        boolean boolean64 = combinedEventsManager21.reset((double) (-1), doubleArray61);
        double double65 = combinedEventsManager21.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager67 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean68 = combinedEventsManager67.stop();
        boolean boolean69 = combinedEventsManager67.isEmpty();
        boolean boolean70 = combinedEventsManager67.isEmpty();
        combinedEventsManager67.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager73 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean74 = combinedEventsManager73.stop();
        double double75 = combinedEventsManager73.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection76 = combinedEventsManager73.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager78 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean79 = combinedEventsManager78.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator80 = null;
        boolean boolean81 = combinedEventsManager78.evaluateStep(stepInterpolator80);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection82 = combinedEventsManager78.getEventsHandlers();
        double[] doubleArray89 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean90 = combinedEventsManager78.reset(0.0d, doubleArray89);
        combinedEventsManager73.stepAccepted((double) 0, doubleArray89);
        boolean boolean92 = combinedEventsManager67.reset((double) '#', doubleArray89);
        boolean boolean93 = combinedEventsManager21.reset(10.0d, doubleArray89);
        combinedEventsManager0.stepAccepted((double) (byte) 0, doubleArray89);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection25);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection39);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(eventStateCollection54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(eventStateCollection76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection82);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager14.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager14.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        double double21 = combinedEventsManager19.getEventTime();
        double double22 = combinedEventsManager19.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager19.getEventsStates();
        double[] doubleArray26 = new double[] { (-1.0f) };
        boolean boolean27 = combinedEventsManager19.reset((double) (short) 100, doubleArray26);
        combinedEventsManager14.stepAccepted((double) 10, doubleArray26);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray26);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager0.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager0.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager5.evaluateStep(stepInterpolator7);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager5.getEventsHandlers();
        double[] doubleArray16 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean17 = combinedEventsManager5.reset(0.0d, doubleArray16);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray16);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean20 = combinedEventsManager0.stop();
        boolean boolean21 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eventStateCollection22);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean20 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (double) (short) 1, 100.0d, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler3 = null;
        combinedEventsManager0.addEventHandler(eventHandler3, 0.0d, (double) (short) 1, (int) (short) -1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager9 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean10 = combinedEventsManager9.stop();
        boolean boolean11 = combinedEventsManager9.stop();
        combinedEventsManager9.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager9.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager9.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        double double18 = combinedEventsManager16.getEventTime();
        double double19 = combinedEventsManager16.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager16.getEventsStates();
        double[] doubleArray23 = new double[] { (-1.0f) };
        boolean boolean24 = combinedEventsManager16.reset((double) (short) 100, doubleArray23);
        boolean boolean25 = combinedEventsManager9.reset((double) 0, doubleArray23);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager9.getEventsHandlers();
        boolean boolean27 = combinedEventsManager9.stop();
        combinedEventsManager9.clearEventsHandlers();
        combinedEventsManager9.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager31.evaluateStep(stepInterpolator33);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection35 = combinedEventsManager31.getEventsHandlers();
        double[] doubleArray41 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean42 = combinedEventsManager31.reset((double) (byte) 1, doubleArray41);
        boolean boolean43 = combinedEventsManager31.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager31.getEventsHandlers();
        double double45 = combinedEventsManager31.getEventTime();
        double double46 = combinedEventsManager31.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean49 = combinedEventsManager48.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager48.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = combinedEventsManager48.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager54 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean55 = combinedEventsManager54.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection56 = combinedEventsManager54.getEventsStates();
        double[] doubleArray59 = new double[] { 1L };
        boolean boolean60 = combinedEventsManager54.reset((double) (byte) 0, doubleArray59);
        combinedEventsManager48.stepAccepted(0.0d, doubleArray59);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager63 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean64 = combinedEventsManager63.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = combinedEventsManager63.evaluateStep(stepInterpolator65);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection67 = combinedEventsManager63.getEventsHandlers();
        double[] doubleArray74 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean75 = combinedEventsManager63.reset(0.0d, doubleArray74);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager77 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator78 = null;
        boolean boolean79 = combinedEventsManager77.evaluateStep(stepInterpolator78);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection80 = combinedEventsManager77.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager82 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean83 = combinedEventsManager82.stop();
        double double84 = combinedEventsManager82.getEventTime();
        double double85 = combinedEventsManager82.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection86 = combinedEventsManager82.getEventsStates();
        double[] doubleArray89 = new double[] { (-1.0f) };
        boolean boolean90 = combinedEventsManager82.reset((double) (short) 100, doubleArray89);
        combinedEventsManager77.stepAccepted((double) 10, doubleArray89);
        combinedEventsManager63.stepAccepted((double) (byte) 10, doubleArray89);
        combinedEventsManager48.stepAccepted((double) 0L, doubleArray89);
        combinedEventsManager31.stepAccepted((double) (-1L), doubleArray89);
        boolean boolean95 = combinedEventsManager9.reset((double) 'a', doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) 0.0f, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(eventStateCollection56);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection67);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(eventStateCollection86);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        boolean boolean20 = combinedEventsManager8.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager8.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager23.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager28.getEventsStates();
        double[] doubleArray33 = new double[] { 1L };
        boolean boolean34 = combinedEventsManager28.reset((double) (byte) 0, doubleArray33);
        combinedEventsManager23.stepAccepted((double) (byte) 1, doubleArray33);
        combinedEventsManager8.stepAccepted((double) (byte) 100, doubleArray33);
        combinedEventsManager0.stepAccepted((double) 1, doubleArray33);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager0.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = combinedEventsManager0.evaluateStep(stepInterpolator41);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager18.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager18.stepAccepted((double) (byte) 1, doubleArray28);
        boolean boolean31 = combinedEventsManager0.reset((double) '4', doubleArray28);
        combinedEventsManager0.clearEventsHandlers();
        double double33 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        boolean boolean13 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        double double17 = combinedEventsManager15.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager15.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = combinedEventsManager20.evaluateStep(stepInterpolator22);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection24 = combinedEventsManager20.getEventsHandlers();
        double[] doubleArray31 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean32 = combinedEventsManager20.reset(0.0d, doubleArray31);
        combinedEventsManager15.stepAccepted((double) 0, doubleArray31);
        combinedEventsManager0.stepAccepted((double) (short) -1, doubleArray31);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection24);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager13.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        double[] doubleArray23 = new double[] { 1L };
        boolean boolean24 = combinedEventsManager18.reset((double) (byte) 0, doubleArray23);
        boolean boolean25 = combinedEventsManager13.reset((double) (short) -1, doubleArray23);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = combinedEventsManager27.evaluateStep(stepInterpolator29);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection31 = combinedEventsManager27.getEventsHandlers();
        double[] doubleArray37 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean38 = combinedEventsManager27.reset((double) (byte) 1, doubleArray37);
        boolean boolean39 = combinedEventsManager27.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager41 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean42 = combinedEventsManager41.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = combinedEventsManager41.evaluateStep(stepInterpolator43);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager41.getEventsHandlers();
        double[] doubleArray52 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean53 = combinedEventsManager41.reset(0.0d, doubleArray52);
        combinedEventsManager27.stepAccepted(0.0d, doubleArray52);
        boolean boolean55 = combinedEventsManager13.reset((double) (short) 1, doubleArray52);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray52);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = combinedEventsManager58.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = combinedEventsManager58.evaluateStep(stepInterpolator62);
        combinedEventsManager58.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        double double68 = combinedEventsManager66.getEventTime();
        double double69 = combinedEventsManager66.getEventTime();
        boolean boolean70 = combinedEventsManager66.stop();
        double[] doubleArray74 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean75 = combinedEventsManager66.reset(1.0d, doubleArray74);
        boolean boolean76 = combinedEventsManager58.reset((double) (short) 0, doubleArray74);
        boolean boolean77 = combinedEventsManager0.reset((double) (byte) 10, doubleArray74);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection78 = combinedEventsManager0.getEventsStates();
        boolean boolean79 = combinedEventsManager0.isEmpty();
        boolean boolean80 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator81 = null;
        boolean boolean82 = combinedEventsManager0.evaluateStep(stepInterpolator81);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection83 = combinedEventsManager0.getEventsStates();
        double double84 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(eventStateCollection78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(eventStateCollection83);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) 100L, 100.0d, 10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager8.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager8.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager14.getEventsStates();
        double[] doubleArray19 = new double[] { 1L };
        boolean boolean20 = combinedEventsManager14.reset((double) (byte) 0, doubleArray19);
        combinedEventsManager8.stepAccepted(0.0d, doubleArray19);
        boolean boolean22 = combinedEventsManager8.stop();
        combinedEventsManager8.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager25 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean26 = combinedEventsManager25.stop();
        double double27 = combinedEventsManager25.getEventTime();
        double double28 = combinedEventsManager25.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection29 = combinedEventsManager25.getEventsStates();
        double[] doubleArray32 = new double[] { (-1.0f) };
        boolean boolean33 = combinedEventsManager25.reset((double) (short) 100, doubleArray32);
        boolean boolean34 = combinedEventsManager8.reset((double) (short) 0, doubleArray32);
        boolean boolean35 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        double double39 = combinedEventsManager37.getEventTime();
        double double40 = combinedEventsManager37.getEventTime();
        double double41 = combinedEventsManager37.getEventTime();
        boolean boolean42 = combinedEventsManager37.stop();
        boolean boolean43 = combinedEventsManager37.stop();
        combinedEventsManager37.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager46.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection49 = combinedEventsManager46.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection53 = combinedEventsManager51.getEventsStates();
        double[] doubleArray56 = new double[] { 1L };
        boolean boolean57 = combinedEventsManager51.reset((double) (byte) 0, doubleArray56);
        combinedEventsManager46.stepAccepted((double) (byte) 1, doubleArray56);
        combinedEventsManager37.stepAccepted((double) (short) 100, doubleArray56);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        double double63 = combinedEventsManager61.getEventTime();
        double double64 = combinedEventsManager61.getEventTime();
        double double65 = combinedEventsManager61.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager67 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean68 = combinedEventsManager67.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = combinedEventsManager67.evaluateStep(stepInterpolator69);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection71 = combinedEventsManager67.getEventsHandlers();
        double[] doubleArray78 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean79 = combinedEventsManager67.reset(0.0d, doubleArray78);
        combinedEventsManager61.stepAccepted((double) (short) 10, doubleArray78);
        combinedEventsManager37.stepAccepted((double) (-1L), doubleArray78);
        boolean boolean82 = combinedEventsManager8.reset(1.0d, doubleArray78);
        boolean boolean83 = combinedEventsManager0.reset((double) (short) 100, doubleArray78);
        java.lang.Class<?> wildcardClass84 = doubleArray78.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(eventStateCollection29);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(eventStateCollection49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(eventStateCollection53);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection71);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        double double13 = combinedEventsManager11.getEventTime();
        double double14 = combinedEventsManager11.getEventTime();
        boolean boolean15 = combinedEventsManager11.stop();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean20 = combinedEventsManager11.reset(1.0d, doubleArray19);
        boolean boolean21 = combinedEventsManager5.reset((double) (short) 1, doubleArray19);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray19);
        boolean boolean23 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler14 = null;
        combinedEventsManager0.addEventHandler(eventHandler14, (double) (byte) 0, (double) '#', (int) (byte) 0);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertNotNull(eventStateCollection13);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        double double15 = combinedEventsManager12.getEventTime();
        boolean boolean16 = combinedEventsManager12.stop();
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean21 = combinedEventsManager12.reset(1.0d, doubleArray20);
        boolean boolean22 = combinedEventsManager6.reset((double) (short) 1, doubleArray20);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        double double27 = combinedEventsManager24.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager24.getEventsStates();
        double[] doubleArray31 = new double[] { (-1.0f) };
        boolean boolean32 = combinedEventsManager24.reset((double) (short) 100, doubleArray31);
        combinedEventsManager6.stepAccepted((double) 0.0f, doubleArray31);
        combinedEventsManager0.stepAccepted((double) 1L, doubleArray31);
        boolean boolean35 = combinedEventsManager0.stop();
        java.lang.Class<?> wildcardClass36 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        boolean boolean6 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean8 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean10 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler11 = null;
        combinedEventsManager0.addEventHandler(eventHandler11, (double) (short) -1, 0.0d, (-1));
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = combinedEventsManager0.evaluateStep(stepInterpolator23);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        boolean boolean7 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        double double13 = combinedEventsManager11.getEventTime();
        double double14 = combinedEventsManager11.getEventTime();
        double double15 = combinedEventsManager11.getEventTime();
        boolean boolean16 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager18.evaluateStep(stepInterpolator19);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager18.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        double double25 = combinedEventsManager23.getEventTime();
        double double26 = combinedEventsManager23.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager23.getEventsStates();
        double[] doubleArray30 = new double[] { (-1.0f) };
        boolean boolean31 = combinedEventsManager23.reset((double) (short) 100, doubleArray30);
        combinedEventsManager18.stepAccepted((double) 10, doubleArray30);
        combinedEventsManager11.stepAccepted((double) 100.0f, doubleArray30);
        combinedEventsManager0.stepAccepted((double) 0L, doubleArray30);
        boolean boolean35 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        boolean boolean6 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean8 = combinedEventsManager0.isEmpty();
        boolean boolean9 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) '#', (double) (byte) 0, (int) ' ');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager4 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean5 = combinedEventsManager4.stop();
        boolean boolean6 = combinedEventsManager4.stop();
        combinedEventsManager4.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager9 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean10 = combinedEventsManager9.stop();
        double double11 = combinedEventsManager9.getEventTime();
        double double12 = combinedEventsManager9.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager9.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        double double17 = combinedEventsManager15.getEventTime();
        double double18 = combinedEventsManager15.getEventTime();
        boolean boolean19 = combinedEventsManager15.stop();
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean24 = combinedEventsManager15.reset(1.0d, doubleArray23);
        boolean boolean25 = combinedEventsManager9.reset((double) (short) 1, doubleArray23);
        combinedEventsManager4.stepAccepted((double) (byte) 1, doubleArray23);
        boolean boolean27 = combinedEventsManager0.reset((double) 10L, doubleArray23);
        java.lang.Class<?> wildcardClass28 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = combinedEventsManager0.evaluateStep(stepInterpolator6);
        boolean boolean8 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) (-1L), (double) (short) -1, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        double double12 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray24 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean25 = combinedEventsManager14.reset((double) (byte) 1, doubleArray24);
        org.apache.commons.math.ode.events.EventHandler eventHandler26 = null;
        combinedEventsManager14.addEventHandler(eventHandler26, (double) '#', (double) 100L, 10);
        boolean boolean31 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager33.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager33.getEventsHandlers();
        double[] doubleArray44 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean45 = combinedEventsManager33.reset(0.0d, doubleArray44);
        boolean boolean46 = combinedEventsManager14.reset((double) 10, doubleArray44);
        org.apache.commons.math.ode.events.EventHandler eventHandler47 = null;
        combinedEventsManager14.addEventHandler(eventHandler47, 10.0d, (double) (short) -1, (int) (byte) 1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        double double55 = combinedEventsManager53.getEventTime();
        double double56 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection57 = combinedEventsManager53.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = combinedEventsManager53.evaluateStep(stepInterpolator58);
        boolean boolean60 = combinedEventsManager53.stop();
        combinedEventsManager53.clearEventsHandlers();
        combinedEventsManager53.clearEventsHandlers();
        double double63 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection64 = combinedEventsManager53.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        double double68 = combinedEventsManager66.getEventTime();
        double double69 = combinedEventsManager66.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager66.getEventsStates();
        double[] doubleArray73 = new double[] { (-1.0f) };
        boolean boolean74 = combinedEventsManager66.reset((double) (short) 100, doubleArray73);
        boolean boolean75 = combinedEventsManager53.reset((double) 0L, doubleArray73);
        boolean boolean76 = combinedEventsManager14.reset((double) 100, doubleArray73);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray73);
        double double78 = combinedEventsManager0.getEventTime();
        double[] doubleArray80 = null;
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray80);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(eventHandlerCollection57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(eventHandlerCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(eventStateCollection70);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) '4', (double) 10.0f, 10);
        combinedEventsManager0.clearEventsHandlers();
        double double50 = combinedEventsManager0.getEventTime();
        double double51 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        double double3 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        double double15 = combinedEventsManager12.getEventTime();
        boolean boolean16 = combinedEventsManager12.stop();
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean21 = combinedEventsManager12.reset(1.0d, doubleArray20);
        boolean boolean22 = combinedEventsManager6.reset((double) (short) 1, doubleArray20);
        boolean boolean23 = combinedEventsManager0.reset((double) 10L, doubleArray20);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager25 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean26 = combinedEventsManager25.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager25.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager25.getEventsStates();
        combinedEventsManager25.clearEventsHandlers();
        combinedEventsManager25.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager32.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager32.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = combinedEventsManager38.evaluateStep(stepInterpolator40);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection42 = combinedEventsManager38.getEventsHandlers();
        double[] doubleArray48 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean49 = combinedEventsManager38.reset((double) (byte) 1, doubleArray48);
        org.apache.commons.math.ode.events.EventHandler eventHandler50 = null;
        combinedEventsManager38.addEventHandler(eventHandler50, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager56 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean57 = combinedEventsManager56.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager56.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager56.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager61.getEventsStates();
        double[] doubleArray66 = new double[] { 1L };
        boolean boolean67 = combinedEventsManager61.reset((double) (byte) 0, doubleArray66);
        combinedEventsManager56.stepAccepted((double) (byte) 1, doubleArray66);
        boolean boolean69 = combinedEventsManager38.reset((double) '4', doubleArray66);
        boolean boolean70 = combinedEventsManager32.reset((double) (-1), doubleArray66);
        boolean boolean71 = combinedEventsManager25.reset((double) (byte) -1, doubleArray66);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager73 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean74 = combinedEventsManager73.stop();
        double double75 = combinedEventsManager73.getEventTime();
        double double76 = combinedEventsManager73.getEventTime();
        double double77 = combinedEventsManager73.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager79 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean80 = combinedEventsManager79.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator81 = null;
        boolean boolean82 = combinedEventsManager79.evaluateStep(stepInterpolator81);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection83 = combinedEventsManager79.getEventsHandlers();
        double[] doubleArray90 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean91 = combinedEventsManager79.reset(0.0d, doubleArray90);
        combinedEventsManager73.stepAccepted((double) (short) 10, doubleArray90);
        combinedEventsManager25.stepAccepted(0.0d, doubleArray90);
        combinedEventsManager0.stepAccepted((double) 1, doubleArray90);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection95 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventStateCollection63);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection83);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(eventStateCollection95);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        double double6 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean8 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.events.EventHandler eventHandler15 = null;
        combinedEventsManager0.addEventHandler(eventHandler15, (double) 1L, (double) 100L, 1);
        double double20 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = combinedEventsManager29.evaluateStep(stepInterpolator31);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection33 = combinedEventsManager29.getEventsHandlers();
        double[] doubleArray39 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean40 = combinedEventsManager29.reset((double) (byte) 1, doubleArray39);
        org.apache.commons.math.ode.events.EventHandler eventHandler41 = null;
        combinedEventsManager29.addEventHandler(eventHandler41, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager47 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean48 = combinedEventsManager47.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection49 = combinedEventsManager47.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager47.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection54 = combinedEventsManager52.getEventsStates();
        double[] doubleArray57 = new double[] { 1L };
        boolean boolean58 = combinedEventsManager52.reset((double) (byte) 0, doubleArray57);
        combinedEventsManager47.stepAccepted((double) (byte) 1, doubleArray57);
        boolean boolean60 = combinedEventsManager29.reset((double) '4', doubleArray57);
        combinedEventsManager0.stepAccepted((double) 1, doubleArray57);
        org.apache.commons.math.ode.events.EventHandler eventHandler62 = null;
        combinedEventsManager0.addEventHandler(eventHandler62, (double) (byte) 0, (double) (short) 1, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(eventStateCollection49);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventStateCollection54);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager12.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager12.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        double[] doubleArray22 = new double[] { 1L };
        boolean boolean23 = combinedEventsManager17.reset((double) (byte) 0, doubleArray22);
        combinedEventsManager12.stepAccepted((double) (byte) 1, doubleArray22);
        combinedEventsManager7.stepAccepted(1.0d, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        org.apache.commons.math.ode.events.EventHandler eventHandler27 = null;
        combinedEventsManager0.addEventHandler(eventHandler27, (double) 0, (double) 1.0f, (int) (short) -1);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager0.getEventsStates();
        double double34 = combinedEventsManager0.getEventTime();
        double double35 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        boolean boolean17 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler18 = null;
        combinedEventsManager0.addEventHandler(eventHandler18, (double) 10, (double) 100L, (int) (short) 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler24 = null;
        combinedEventsManager0.addEventHandler(eventHandler24, (-1.0d), (double) 0, (int) (byte) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection29 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(eventHandlerCollection29);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (-1), doubleArray40);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        double double47 = combinedEventsManager45.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager45.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager50.getEventsStates();
        double[] doubleArray55 = new double[] { 1L };
        boolean boolean56 = combinedEventsManager50.reset((double) (byte) 0, doubleArray55);
        boolean boolean57 = combinedEventsManager45.reset((double) (short) -1, doubleArray55);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager59 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean60 = combinedEventsManager59.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = combinedEventsManager59.evaluateStep(stepInterpolator61);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection63 = combinedEventsManager59.getEventsHandlers();
        double[] doubleArray69 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean70 = combinedEventsManager59.reset((double) (byte) 1, doubleArray69);
        boolean boolean71 = combinedEventsManager59.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager73 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean74 = combinedEventsManager73.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = combinedEventsManager73.evaluateStep(stepInterpolator75);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection77 = combinedEventsManager73.getEventsHandlers();
        double[] doubleArray84 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean85 = combinedEventsManager73.reset(0.0d, doubleArray84);
        combinedEventsManager59.stepAccepted(0.0d, doubleArray84);
        boolean boolean87 = combinedEventsManager45.reset((double) (short) 1, doubleArray84);
        boolean boolean88 = combinedEventsManager0.reset((double) 0L, doubleArray84);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection89 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator90 = null;
        boolean boolean91 = combinedEventsManager0.evaluateStep(stepInterpolator90);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection63);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection77);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(eventStateCollection89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager15.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager15.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager20.getEventsStates();
        double[] doubleArray25 = new double[] { 1L };
        boolean boolean26 = combinedEventsManager20.reset((double) (byte) 0, doubleArray25);
        combinedEventsManager15.stepAccepted((double) (byte) 1, doubleArray25);
        combinedEventsManager0.stepAccepted((double) (byte) 100, doubleArray25);
        double double29 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean31 = combinedEventsManager0.isEmpty();
        double double32 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        double[] doubleArray18 = null;
        boolean boolean19 = combinedEventsManager0.reset((double) 10, doubleArray18);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        boolean boolean23 = combinedEventsManager21.stop();
        combinedEventsManager21.clearEventsHandlers();
        boolean boolean25 = combinedEventsManager21.isEmpty();
        boolean boolean26 = combinedEventsManager21.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        double double32 = combinedEventsManager28.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = combinedEventsManager34.evaluateStep(stepInterpolator36);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection38 = combinedEventsManager34.getEventsHandlers();
        double[] doubleArray45 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean46 = combinedEventsManager34.reset(0.0d, doubleArray45);
        combinedEventsManager28.stepAccepted((double) (short) 10, doubleArray45);
        combinedEventsManager21.stepAccepted((double) 10.0f, doubleArray45);
        boolean boolean49 = combinedEventsManager0.reset((double) (byte) 1, doubleArray45);
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler52 = null;
        combinedEventsManager0.addEventHandler(eventHandler52, (double) 1, Double.NaN, (-1));
        boolean boolean57 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection38);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(eventStateCollection58);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler3 = null;
        combinedEventsManager0.addEventHandler(eventHandler3, (double) (short) 100, (double) 10.0f, (int) (byte) 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection8 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) (-1L), (double) ' ', 10);
        java.lang.Class<?> wildcardClass14 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection8);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        double double14 = combinedEventsManager12.getEventTime();
        double double15 = combinedEventsManager12.getEventTime();
        boolean boolean16 = combinedEventsManager12.stop();
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean21 = combinedEventsManager12.reset(1.0d, doubleArray20);
        boolean boolean22 = combinedEventsManager6.reset((double) (short) 1, doubleArray20);
        combinedEventsManager0.stepAccepted((double) 1, doubleArray20);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection25 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(eventHandlerCollection25);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager15.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager15.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager20.getEventsStates();
        double[] doubleArray25 = new double[] { 1L };
        boolean boolean26 = combinedEventsManager20.reset((double) (byte) 0, doubleArray25);
        combinedEventsManager15.stepAccepted((double) (byte) 1, doubleArray25);
        combinedEventsManager0.stepAccepted((double) (byte) 100, doubleArray25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler42 = null;
        combinedEventsManager30.addEventHandler(eventHandler42, (double) '#', (double) 100L, 10);
        boolean boolean47 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager30.getEventsStates();
        double[] doubleArray51 = new double[] { '4' };
        boolean boolean52 = combinedEventsManager30.reset((double) (byte) 0, doubleArray51);
        boolean boolean53 = combinedEventsManager0.reset((double) (byte) 100, doubleArray51);
        boolean boolean54 = combinedEventsManager0.stop();
        double double55 = combinedEventsManager0.getEventTime();
        boolean boolean56 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        double double6 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        double double10 = combinedEventsManager8.getEventTime();
        double double11 = combinedEventsManager8.getEventTime();
        double double12 = combinedEventsManager8.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager8.stepAccepted((double) (short) 10, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager8.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        double double33 = combinedEventsManager30.getEventTime();
        double double34 = combinedEventsManager30.getEventTime();
        boolean boolean35 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager30.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = combinedEventsManager38.evaluateStep(stepInterpolator40);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection42 = combinedEventsManager38.getEventsHandlers();
        double[] doubleArray48 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean49 = combinedEventsManager38.reset((double) (byte) 1, doubleArray48);
        boolean boolean50 = combinedEventsManager38.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection51 = combinedEventsManager38.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager53.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection56 = combinedEventsManager53.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection60 = combinedEventsManager58.getEventsStates();
        double[] doubleArray63 = new double[] { 1L };
        boolean boolean64 = combinedEventsManager58.reset((double) (byte) 0, doubleArray63);
        combinedEventsManager53.stepAccepted((double) (byte) 1, doubleArray63);
        combinedEventsManager38.stepAccepted((double) (byte) 100, doubleArray63);
        combinedEventsManager30.stepAccepted((double) 1, doubleArray63);
        boolean boolean68 = combinedEventsManager8.reset((-1.0d), doubleArray63);
        boolean boolean69 = combinedEventsManager0.reset((double) 0L, doubleArray63);
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection73 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertNotNull(eventStateCollection56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(eventStateCollection60);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(eventStateCollection73);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) '4', (double) 10.0f, 10);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection50 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection51 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = combinedEventsManager0.evaluateStep(stepInterpolator52);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection50);
        org.junit.Assert.assertNotNull(eventStateCollection51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager13.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager18.getEventsStates();
        double[] doubleArray23 = new double[] { 1L };
        boolean boolean24 = combinedEventsManager18.reset((double) (byte) 0, doubleArray23);
        boolean boolean25 = combinedEventsManager13.reset((double) (short) -1, doubleArray23);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = combinedEventsManager27.evaluateStep(stepInterpolator29);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection31 = combinedEventsManager27.getEventsHandlers();
        double[] doubleArray37 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean38 = combinedEventsManager27.reset((double) (byte) 1, doubleArray37);
        boolean boolean39 = combinedEventsManager27.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager41 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean42 = combinedEventsManager41.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = combinedEventsManager41.evaluateStep(stepInterpolator43);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager41.getEventsHandlers();
        double[] doubleArray52 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean53 = combinedEventsManager41.reset(0.0d, doubleArray52);
        combinedEventsManager27.stepAccepted(0.0d, doubleArray52);
        boolean boolean55 = combinedEventsManager13.reset((double) (short) 1, doubleArray52);
        combinedEventsManager0.stepAccepted((double) 10.0f, doubleArray52);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = combinedEventsManager0.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.events.EventHandler eventHandler60 = null;
        combinedEventsManager0.addEventHandler(eventHandler60, 10.0d, (double) 10L, 1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection65 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection65);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        boolean boolean9 = combinedEventsManager7.stop();
        combinedEventsManager7.clearEventsHandlers();
        boolean boolean11 = combinedEventsManager7.isEmpty();
        boolean boolean12 = combinedEventsManager7.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        double double16 = combinedEventsManager14.getEventTime();
        double double17 = combinedEventsManager14.getEventTime();
        double double18 = combinedEventsManager14.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = combinedEventsManager20.evaluateStep(stepInterpolator22);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection24 = combinedEventsManager20.getEventsHandlers();
        double[] doubleArray31 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean32 = combinedEventsManager20.reset(0.0d, doubleArray31);
        combinedEventsManager14.stepAccepted((double) (short) 10, doubleArray31);
        combinedEventsManager7.stepAccepted((double) 10.0f, doubleArray31);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray31);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = combinedEventsManager0.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.events.EventHandler eventHandler38 = null;
        combinedEventsManager0.addEventHandler(eventHandler38, 10.0d, 100.0d, (int) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection24);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        double double13 = combinedEventsManager11.getEventTime();
        double double14 = combinedEventsManager11.getEventTime();
        boolean boolean15 = combinedEventsManager11.stop();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean20 = combinedEventsManager11.reset(1.0d, doubleArray19);
        boolean boolean21 = combinedEventsManager5.reset((double) (short) 1, doubleArray19);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray19);
        boolean boolean23 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        double double28 = combinedEventsManager26.getEventTime();
        double double29 = combinedEventsManager26.getEventTime();
        double double30 = combinedEventsManager26.getEventTime();
        boolean boolean31 = combinedEventsManager26.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager26.getEventsHandlers();
        boolean boolean33 = combinedEventsManager26.isEmpty();
        double double34 = combinedEventsManager26.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler35 = null;
        combinedEventsManager26.addEventHandler(eventHandler35, (double) (byte) 0, (double) 0, (int) (byte) 1);
        combinedEventsManager26.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager26.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager43 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean44 = combinedEventsManager43.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager43.getEventsStates();
        combinedEventsManager43.clearEventsHandlers();
        combinedEventsManager43.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager49 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean50 = combinedEventsManager49.stop();
        boolean boolean51 = combinedEventsManager49.isEmpty();
        double double52 = combinedEventsManager49.getEventTime();
        combinedEventsManager49.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        double double57 = combinedEventsManager55.getEventTime();
        double double58 = combinedEventsManager55.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager55.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        double double63 = combinedEventsManager61.getEventTime();
        double double64 = combinedEventsManager61.getEventTime();
        boolean boolean65 = combinedEventsManager61.stop();
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean70 = combinedEventsManager61.reset(1.0d, doubleArray69);
        boolean boolean71 = combinedEventsManager55.reset((double) (short) 1, doubleArray69);
        boolean boolean72 = combinedEventsManager49.reset((double) 10L, doubleArray69);
        boolean boolean73 = combinedEventsManager43.reset(0.0d, doubleArray69);
        boolean boolean74 = combinedEventsManager26.reset((double) 10.0f, doubleArray69);
        combinedEventsManager0.stepAccepted((double) (byte) 0, doubleArray69);
        org.apache.commons.math.ode.events.EventHandler eventHandler76 = null;
        combinedEventsManager0.addEventHandler(eventHandler76, (double) (byte) 1, (-1.0d), (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(eventStateCollection45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        double double14 = combinedEventsManager0.getEventTime();
        double double15 = combinedEventsManager0.getEventTime();
        double double16 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = combinedEventsManager0.evaluateStep(stepInterpolator17);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection19 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection19);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = new double[] { (-1.0f) };
        boolean boolean8 = combinedEventsManager0.reset((double) (short) 100, doubleArray7);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        double double8 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) (byte) 0, (double) 0, (int) (byte) 1);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = combinedEventsManager0.evaluateStep(stepInterpolator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager8.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager8.getEventsStates();
        combinedEventsManager8.clearEventsHandlers();
        double double13 = combinedEventsManager8.getEventTime();
        boolean boolean14 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        double double18 = combinedEventsManager16.getEventTime();
        double double19 = combinedEventsManager16.getEventTime();
        double double20 = combinedEventsManager16.getEventTime();
        boolean boolean21 = combinedEventsManager16.stop();
        boolean boolean22 = combinedEventsManager16.stop();
        combinedEventsManager16.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager25 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean26 = combinedEventsManager25.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager25.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager25.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager30.getEventsStates();
        double[] doubleArray35 = new double[] { 1L };
        boolean boolean36 = combinedEventsManager30.reset((double) (byte) 0, doubleArray35);
        combinedEventsManager25.stepAccepted((double) (byte) 1, doubleArray35);
        combinedEventsManager16.stepAccepted((double) (short) 100, doubleArray35);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        double double42 = combinedEventsManager40.getEventTime();
        double double43 = combinedEventsManager40.getEventTime();
        double double44 = combinedEventsManager40.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = combinedEventsManager46.evaluateStep(stepInterpolator48);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection50 = combinedEventsManager46.getEventsHandlers();
        double[] doubleArray57 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean58 = combinedEventsManager46.reset(0.0d, doubleArray57);
        combinedEventsManager40.stepAccepted((double) (short) 10, doubleArray57);
        combinedEventsManager16.stepAccepted((double) (-1L), doubleArray57);
        boolean boolean61 = combinedEventsManager8.reset((double) (-1), doubleArray57);
        boolean boolean62 = combinedEventsManager0.reset((-1.0d), doubleArray57);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler64 = null;
        combinedEventsManager0.addEventHandler(eventHandler64, (double) 100.0f, (double) 'a', (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection50);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventStateCollection63);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = combinedEventsManager0.evaluateStep(stepInterpolator12);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertNotNull(eventStateCollection17);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        double[] doubleArray21 = new double[] { '4' };
        boolean boolean22 = combinedEventsManager0.reset((double) (byte) 0, doubleArray21);
        boolean boolean23 = combinedEventsManager0.isEmpty();
        java.lang.Class<?> wildcardClass24 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean4 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        boolean boolean7 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        double[] doubleArray11 = null;
        combinedEventsManager0.stepAccepted(0.0d, doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        double double6 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray10);
        boolean boolean13 = combinedEventsManager0.isEmpty();
        boolean boolean14 = combinedEventsManager0.stop();
        double double15 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        boolean boolean16 = combinedEventsManager14.stop();
        combinedEventsManager14.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager14.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        double double23 = combinedEventsManager21.getEventTime();
        double double24 = combinedEventsManager21.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager21.getEventsStates();
        double[] doubleArray28 = new double[] { (-1.0f) };
        boolean boolean29 = combinedEventsManager21.reset((double) (short) 100, doubleArray28);
        boolean boolean30 = combinedEventsManager14.reset((double) 0, doubleArray28);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection31 = combinedEventsManager14.getEventsHandlers();
        boolean boolean32 = combinedEventsManager14.stop();
        combinedEventsManager14.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = combinedEventsManager14.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection39 = combinedEventsManager37.getEventsStates();
        double[] doubleArray42 = new double[] { 1L };
        boolean boolean43 = combinedEventsManager37.reset((double) (byte) 0, doubleArray42);
        boolean boolean44 = combinedEventsManager14.reset((double) 1L, doubleArray42);
        boolean boolean45 = combinedEventsManager0.reset((double) 1L, doubleArray42);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventStateCollection39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = null;
        boolean boolean8 = combinedEventsManager0.reset((double) 1.0f, doubleArray7);
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) (byte) 1, (double) 0.0f, 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager16.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection19 = combinedEventsManager16.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager16.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager16.getEventsStates();
        double[] doubleArray23 = null;
        boolean boolean24 = combinedEventsManager16.reset((double) 1.0f, doubleArray23);
        boolean boolean25 = combinedEventsManager16.isEmpty();
        double[] doubleArray27 = null;
        boolean boolean28 = combinedEventsManager16.reset((double) (byte) 10, doubleArray27);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = combinedEventsManager16.evaluateStep(stepInterpolator29);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager32.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection39 = combinedEventsManager37.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager37.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager42.getEventsStates();
        double[] doubleArray47 = new double[] { 1L };
        boolean boolean48 = combinedEventsManager42.reset((double) (byte) 0, doubleArray47);
        combinedEventsManager37.stepAccepted((double) (byte) 1, doubleArray47);
        combinedEventsManager32.stepAccepted(1.0d, doubleArray47);
        combinedEventsManager16.stepAccepted((double) 100, doubleArray47);
        boolean boolean52 = combinedEventsManager0.reset((double) (short) 1, doubleArray47);
        double double53 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(eventHandlerCollection19);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventStateCollection39);
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager0.evaluateStep(stepInterpolator7);
        double double9 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) 'a', (double) 0, (int) '4');
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) (byte) 1, (double) (byte) 10, 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection5 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) (short) 10, 0.0d, (-1));
        double double11 = combinedEventsManager0.getEventTime();
        boolean boolean12 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection5);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        double double13 = combinedEventsManager11.getEventTime();
        double double14 = combinedEventsManager11.getEventTime();
        boolean boolean15 = combinedEventsManager11.stop();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean20 = combinedEventsManager11.reset(1.0d, doubleArray19);
        boolean boolean21 = combinedEventsManager5.reset((double) (short) 1, doubleArray19);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray19);
        double[] doubleArray24 = null;
        combinedEventsManager0.stepAccepted((double) 100, doubleArray24);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = combinedEventsManager16.evaluateStep(stepInterpolator18);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager16.getEventsHandlers();
        double[] doubleArray26 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean27 = combinedEventsManager16.reset((double) (byte) 1, doubleArray26);
        boolean boolean28 = combinedEventsManager16.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray41 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean42 = combinedEventsManager30.reset(0.0d, doubleArray41);
        combinedEventsManager16.stepAccepted(0.0d, doubleArray41);
        combinedEventsManager0.stepAccepted((double) (short) 1, doubleArray41);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = combinedEventsManager0.evaluateStep(stepInterpolator45);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager6.getEventsStates();
        double[] doubleArray11 = new double[] { 1L };
        boolean boolean12 = combinedEventsManager6.reset((double) (byte) 0, doubleArray11);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray11);
        boolean boolean14 = combinedEventsManager0.stop();
        boolean boolean15 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager0.getEventsHandlers();
        java.lang.Class<?> wildcardClass17 = eventHandlerCollection16.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray16 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean17 = combinedEventsManager6.reset((double) (byte) 1, doubleArray16);
        org.apache.commons.math.ode.events.EventHandler eventHandler18 = null;
        combinedEventsManager6.addEventHandler(eventHandler18, (double) '#', (double) 100L, 10);
        boolean boolean23 = combinedEventsManager6.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager6.getEventsStates();
        double[] doubleArray27 = new double[] { '4' };
        boolean boolean28 = combinedEventsManager6.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) ' ', doubleArray27);
        double[] doubleArray31 = null;
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray31);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean34 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        double double11 = combinedEventsManager7.getEventTime();
        boolean boolean12 = combinedEventsManager7.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager7.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = combinedEventsManager15.evaluateStep(stepInterpolator17);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection19 = combinedEventsManager15.getEventsHandlers();
        double[] doubleArray25 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean26 = combinedEventsManager15.reset((double) (byte) 1, doubleArray25);
        boolean boolean27 = combinedEventsManager15.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager15.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager30.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        combinedEventsManager30.stepAccepted((double) (byte) 1, doubleArray40);
        combinedEventsManager15.stepAccepted((double) (byte) 100, doubleArray40);
        combinedEventsManager7.stepAccepted((double) 1, doubleArray40);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = combinedEventsManager7.evaluateStep(stepInterpolator45);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = combinedEventsManager48.evaluateStep(stepInterpolator49);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection51 = combinedEventsManager48.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        double double55 = combinedEventsManager53.getEventTime();
        double double56 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager53.getEventsStates();
        double[] doubleArray60 = new double[] { (-1.0f) };
        boolean boolean61 = combinedEventsManager53.reset((double) (short) 100, doubleArray60);
        combinedEventsManager48.stepAccepted((double) 10, doubleArray60);
        combinedEventsManager7.stepAccepted(100.0d, doubleArray60);
        boolean boolean64 = combinedEventsManager0.reset((double) (byte) -1, doubleArray60);
        boolean boolean65 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, (double) '4', (double) 10.0f, 10);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = combinedEventsManager0.evaluateStep(stepInterpolator50);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection52 = combinedEventsManager0.getEventsHandlers();
        double double53 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection54 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(eventHandlerCollection54);
        org.junit.Assert.assertNotNull(eventStateCollection55);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean2 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        boolean boolean32 = combinedEventsManager0.reset((double) 10, doubleArray30);
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, 10.0d, (double) (short) -1, (int) (byte) 1);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler39 = null;
        combinedEventsManager0.addEventHandler(eventHandler39, (double) ' ', (double) 10L, 10);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, 0.0d, (double) 10.0f, (int) (byte) 10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection49 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler50 = null;
        combinedEventsManager0.addEventHandler(eventHandler50, (double) (byte) -1, (double) 0L, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection49);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray5 = null;
        boolean boolean6 = combinedEventsManager0.reset((double) '#', doubleArray5);
        double double7 = combinedEventsManager0.getEventTime();
        double double8 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        boolean boolean32 = combinedEventsManager0.reset((double) 10, doubleArray30);
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, 10.0d, (double) (short) -1, (int) (byte) 1);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler39 = null;
        combinedEventsManager0.addEventHandler(eventHandler39, (double) ' ', (double) 10L, 10);
        double double44 = combinedEventsManager0.getEventTime();
        boolean boolean45 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection46 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection46);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        double[] doubleArray18 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean19 = combinedEventsManager8.reset((double) (byte) 1, doubleArray18);
        boolean boolean20 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = combinedEventsManager22.evaluateStep(stepInterpolator24);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager22.getEventsHandlers();
        double[] doubleArray33 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean34 = combinedEventsManager22.reset(0.0d, doubleArray33);
        combinedEventsManager8.stepAccepted(0.0d, doubleArray33);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager8.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager38.getEventsStates();
        double[] doubleArray43 = new double[] { 1L };
        boolean boolean44 = combinedEventsManager38.reset((double) (byte) 0, doubleArray43);
        combinedEventsManager8.stepAccepted((double) 10.0f, doubleArray43);
        combinedEventsManager0.stepAccepted((double) '#', doubleArray43);
        boolean boolean47 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = combinedEventsManager0.evaluateStep(stepInterpolator48);
        double double50 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection51 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(eventHandlerCollection51);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler2 = null;
        combinedEventsManager0.addEventHandler(eventHandler2, (double) 10, (double) 0, (int) (short) 0);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        boolean boolean10 = combinedEventsManager8.stop();
        combinedEventsManager8.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager8.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager8.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager8.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = combinedEventsManager17.evaluateStep(stepInterpolator18);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager17.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = combinedEventsManager22.evaluateStep(stepInterpolator24);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager22.getEventsHandlers();
        double[] doubleArray32 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean33 = combinedEventsManager22.reset((double) (byte) 1, doubleArray32);
        boolean boolean34 = combinedEventsManager22.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray47 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean48 = combinedEventsManager36.reset(0.0d, doubleArray47);
        combinedEventsManager22.stepAccepted(0.0d, doubleArray47);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection50 = combinedEventsManager22.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager52.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager57.getEventsStates();
        double[] doubleArray62 = new double[] { 1L };
        boolean boolean63 = combinedEventsManager57.reset((double) (byte) 0, doubleArray62);
        boolean boolean64 = combinedEventsManager52.reset((double) (short) -1, doubleArray62);
        boolean boolean65 = combinedEventsManager22.reset((double) (short) 0, doubleArray62);
        boolean boolean66 = combinedEventsManager17.reset((double) (byte) 0, doubleArray62);
        combinedEventsManager8.stepAccepted((double) (-1L), doubleArray62);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) (byte) -1, doubleArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler9 = null;
        combinedEventsManager0.addEventHandler(eventHandler9, (double) 0, (double) (short) 10, (int) 'a');
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager15.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray29 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean30 = combinedEventsManager19.reset((double) (byte) 1, doubleArray29);
        boolean boolean31 = combinedEventsManager19.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager19.getEventsHandlers();
        double double33 = combinedEventsManager19.getEventTime();
        double double34 = combinedEventsManager19.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager36.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager36.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager42.getEventsStates();
        double[] doubleArray47 = new double[] { 1L };
        boolean boolean48 = combinedEventsManager42.reset((double) (byte) 0, doubleArray47);
        combinedEventsManager36.stepAccepted(0.0d, doubleArray47);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = combinedEventsManager51.evaluateStep(stepInterpolator53);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection55 = combinedEventsManager51.getEventsHandlers();
        double[] doubleArray62 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean63 = combinedEventsManager51.reset(0.0d, doubleArray62);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager65 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = combinedEventsManager65.evaluateStep(stepInterpolator66);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection68 = combinedEventsManager65.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        double double72 = combinedEventsManager70.getEventTime();
        double double73 = combinedEventsManager70.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection74 = combinedEventsManager70.getEventsStates();
        double[] doubleArray77 = new double[] { (-1.0f) };
        boolean boolean78 = combinedEventsManager70.reset((double) (short) 100, doubleArray77);
        combinedEventsManager65.stepAccepted((double) 10, doubleArray77);
        combinedEventsManager51.stepAccepted((double) (byte) 10, doubleArray77);
        combinedEventsManager36.stepAccepted((double) 0L, doubleArray77);
        combinedEventsManager19.stepAccepted((double) (-1L), doubleArray77);
        combinedEventsManager15.stepAccepted((double) (short) 1, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) ' ', doubleArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(eventStateCollection74);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        double double12 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray24 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean25 = combinedEventsManager14.reset((double) (byte) 1, doubleArray24);
        org.apache.commons.math.ode.events.EventHandler eventHandler26 = null;
        combinedEventsManager14.addEventHandler(eventHandler26, (double) '#', (double) 100L, 10);
        boolean boolean31 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager33.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager33.getEventsHandlers();
        double[] doubleArray44 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean45 = combinedEventsManager33.reset(0.0d, doubleArray44);
        boolean boolean46 = combinedEventsManager14.reset((double) 10, doubleArray44);
        org.apache.commons.math.ode.events.EventHandler eventHandler47 = null;
        combinedEventsManager14.addEventHandler(eventHandler47, 10.0d, (double) (short) -1, (int) (byte) 1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        double double55 = combinedEventsManager53.getEventTime();
        double double56 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection57 = combinedEventsManager53.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = combinedEventsManager53.evaluateStep(stepInterpolator58);
        boolean boolean60 = combinedEventsManager53.stop();
        combinedEventsManager53.clearEventsHandlers();
        combinedEventsManager53.clearEventsHandlers();
        double double63 = combinedEventsManager53.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection64 = combinedEventsManager53.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        double double68 = combinedEventsManager66.getEventTime();
        double double69 = combinedEventsManager66.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager66.getEventsStates();
        double[] doubleArray73 = new double[] { (-1.0f) };
        boolean boolean74 = combinedEventsManager66.reset((double) (short) 100, doubleArray73);
        boolean boolean75 = combinedEventsManager53.reset((double) 0L, doubleArray73);
        boolean boolean76 = combinedEventsManager14.reset((double) 100, doubleArray73);
        combinedEventsManager0.stepAccepted((double) (byte) 10, doubleArray73);
        double double78 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        java.lang.Class<?> wildcardClass80 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(eventHandlerCollection57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(eventHandlerCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(eventStateCollection70);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler19 = null;
        combinedEventsManager0.addEventHandler(eventHandler19, 0.0d, (double) (short) 1, 1);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean25 = combinedEventsManager0.isEmpty();
        double double26 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection27 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(eventHandlerCollection27);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, 1.0d, (double) 0, (int) (byte) 0);
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) (-1.0f), (double) (-1), (int) (short) 1);
        boolean boolean18 = combinedEventsManager0.stop();
        boolean boolean19 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager0.getEventsHandlers();
        java.lang.Class<?> wildcardClass21 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler11 = null;
        combinedEventsManager0.addEventHandler(eventHandler11, (double) (short) -1, (double) 100.0f, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(eventStateCollection10);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) '#', 0.0d, 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventStateCollection11);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) (byte) 100, doubleArray27);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler31 = null;
        combinedEventsManager0.addEventHandler(eventHandler31, (double) 100, 0.0d, 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        double double6 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager5.evaluateStep(stepInterpolator7);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager5.getEventsHandlers();
        double[] doubleArray16 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean17 = combinedEventsManager5.reset(0.0d, doubleArray16);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray16);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean20 = combinedEventsManager0.stop();
        double double21 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager23.evaluateStep(stepInterpolator25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection27 = combinedEventsManager23.getEventsHandlers();
        double[] doubleArray33 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean34 = combinedEventsManager23.reset((double) (byte) 1, doubleArray33);
        boolean boolean35 = combinedEventsManager23.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager23.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager23.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler38 = null;
        combinedEventsManager23.addEventHandler(eventHandler38, (double) 0.0f, 100.0d, (int) (short) 1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager44 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean45 = combinedEventsManager44.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = combinedEventsManager44.evaluateStep(stepInterpolator46);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection48 = combinedEventsManager44.getEventsHandlers();
        double[] doubleArray54 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean55 = combinedEventsManager44.reset((double) (byte) 1, doubleArray54);
        org.apache.commons.math.ode.events.EventHandler eventHandler56 = null;
        combinedEventsManager44.addEventHandler(eventHandler56, (double) '#', (double) 100L, 10);
        boolean boolean61 = combinedEventsManager44.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager44.getEventsStates();
        double[] doubleArray65 = new double[] { '4' };
        boolean boolean66 = combinedEventsManager44.reset((double) (byte) 0, doubleArray65);
        boolean boolean67 = combinedEventsManager23.reset((double) 0.0f, doubleArray65);
        boolean boolean68 = combinedEventsManager0.reset((double) '4', doubleArray65);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager6.addEventHandler(eventHandler8, 0.0d, (double) 100.0f, (int) (short) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        double double16 = combinedEventsManager14.getEventTime();
        double double17 = combinedEventsManager14.getEventTime();
        double double18 = combinedEventsManager14.getEventTime();
        boolean boolean19 = combinedEventsManager14.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager14.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager14.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager14.getEventsStates();
        boolean boolean23 = combinedEventsManager14.stop();
        boolean boolean24 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager14.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager28.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        double double36 = combinedEventsManager34.getEventTime();
        double double37 = combinedEventsManager34.getEventTime();
        boolean boolean38 = combinedEventsManager34.stop();
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean43 = combinedEventsManager34.reset(1.0d, doubleArray42);
        boolean boolean44 = combinedEventsManager28.reset((double) (short) 1, doubleArray42);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager46.getEventsStates();
        double[] doubleArray53 = new double[] { (-1.0f) };
        boolean boolean54 = combinedEventsManager46.reset((double) (short) 100, doubleArray53);
        combinedEventsManager28.stepAccepted((double) 0.0f, doubleArray53);
        boolean boolean56 = combinedEventsManager14.reset((double) 0, doubleArray53);
        boolean boolean57 = combinedEventsManager6.reset((double) 'a', doubleArray53);
        boolean boolean58 = combinedEventsManager0.reset((double) 100, doubleArray53);
        boolean boolean59 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection60 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = combinedEventsManager0.evaluateStep(stepInterpolator61);
        boolean boolean63 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        boolean boolean20 = combinedEventsManager0.stop();
        double double21 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(eventStateCollection22);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler19 = null;
        combinedEventsManager0.addEventHandler(eventHandler19, 0.0d, (double) (short) 1, 1);
        double double24 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler25 = null;
        combinedEventsManager0.addEventHandler(eventHandler25, (double) (byte) -1, (double) 100.0f, (-1));
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler31 = null;
        combinedEventsManager0.addEventHandler(eventHandler31, (double) 'a', (double) 1L, 10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator36 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = combinedEventsManager0.evaluateStep(stepInterpolator36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(eventStateCollection30);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        double[] doubleArray30 = null;
        combinedEventsManager0.stepAccepted((double) (-1.0f), doubleArray30);
        double[] doubleArray33 = null;
        combinedEventsManager0.stepAccepted(10.0d, doubleArray33);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray46 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean47 = combinedEventsManager36.reset((double) (byte) 1, doubleArray46);
        boolean boolean48 = combinedEventsManager36.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection49 = combinedEventsManager36.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager36.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler51 = null;
        combinedEventsManager36.addEventHandler(eventHandler51, (double) 0.0f, 100.0d, (int) (short) 1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = combinedEventsManager57.evaluateStep(stepInterpolator59);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection61 = combinedEventsManager57.getEventsHandlers();
        double[] doubleArray67 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean68 = combinedEventsManager57.reset((double) (byte) 1, doubleArray67);
        org.apache.commons.math.ode.events.EventHandler eventHandler69 = null;
        combinedEventsManager57.addEventHandler(eventHandler69, (double) '#', (double) 100L, 10);
        boolean boolean74 = combinedEventsManager57.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection75 = combinedEventsManager57.getEventsStates();
        double[] doubleArray78 = new double[] { '4' };
        boolean boolean79 = combinedEventsManager57.reset((double) (byte) 0, doubleArray78);
        boolean boolean80 = combinedEventsManager36.reset((double) 0.0f, doubleArray78);
        boolean boolean81 = combinedEventsManager0.reset((double) (short) 1, doubleArray78);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection49);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(eventStateCollection75);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
        boolean boolean15 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventStateCollection16);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager0.getEventsHandlers();
        boolean boolean19 = combinedEventsManager0.stop();
        double double20 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(eventStateCollection21);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        double double6 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager5.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager10.getEventsStates();
        double[] doubleArray15 = new double[] { 1L };
        boolean boolean16 = combinedEventsManager10.reset((double) (byte) 0, doubleArray15);
        combinedEventsManager5.stepAccepted((double) (byte) 1, doubleArray15);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray15);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        boolean boolean29 = combinedEventsManager0.reset((double) (byte) 100, doubleArray27);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager0.getEventsStates();
        boolean boolean31 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection33 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertNotNull(eventHandlerCollection33);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        boolean boolean7 = combinedEventsManager0.stop();
        double double8 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager10 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean11 = combinedEventsManager10.stop();
        boolean boolean12 = combinedEventsManager10.stop();
        combinedEventsManager10.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager10.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager10.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        double double19 = combinedEventsManager17.getEventTime();
        double double20 = combinedEventsManager17.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection21 = combinedEventsManager17.getEventsStates();
        double[] doubleArray24 = new double[] { (-1.0f) };
        boolean boolean25 = combinedEventsManager17.reset((double) (short) 100, doubleArray24);
        boolean boolean26 = combinedEventsManager10.reset((double) 0, doubleArray24);
        boolean boolean27 = combinedEventsManager10.stop();
        boolean boolean28 = combinedEventsManager10.isEmpty();
        double double29 = combinedEventsManager10.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager31.evaluateStep(stepInterpolator33);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection35 = combinedEventsManager31.getEventsHandlers();
        double[] doubleArray41 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean42 = combinedEventsManager31.reset((double) (byte) 1, doubleArray41);
        boolean boolean43 = combinedEventsManager31.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager31.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager46.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection49 = combinedEventsManager46.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection53 = combinedEventsManager51.getEventsStates();
        double[] doubleArray56 = new double[] { 1L };
        boolean boolean57 = combinedEventsManager51.reset((double) (byte) 0, doubleArray56);
        combinedEventsManager46.stepAccepted((double) (byte) 1, doubleArray56);
        combinedEventsManager31.stepAccepted((double) (byte) 100, doubleArray56);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = combinedEventsManager61.evaluateStep(stepInterpolator63);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection65 = combinedEventsManager61.getEventsHandlers();
        double[] doubleArray71 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean72 = combinedEventsManager61.reset((double) (byte) 1, doubleArray71);
        org.apache.commons.math.ode.events.EventHandler eventHandler73 = null;
        combinedEventsManager61.addEventHandler(eventHandler73, (double) '#', (double) 100L, 10);
        boolean boolean78 = combinedEventsManager61.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection79 = combinedEventsManager61.getEventsStates();
        double[] doubleArray82 = new double[] { '4' };
        boolean boolean83 = combinedEventsManager61.reset((double) (byte) 0, doubleArray82);
        boolean boolean84 = combinedEventsManager31.reset((double) (byte) 100, doubleArray82);
        combinedEventsManager10.stepAccepted((double) 100L, doubleArray82);
        combinedEventsManager0.stepAccepted((double) (short) 1, doubleArray82);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(eventStateCollection21);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(eventStateCollection49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(eventStateCollection53);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection65);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(eventStateCollection79);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager6.getEventsStates();
        double[] doubleArray11 = new double[] { 1L };
        boolean boolean12 = combinedEventsManager6.reset((double) (byte) 0, doubleArray11);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray11);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager0.getEventsStates();
        boolean boolean17 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertNotNull(eventStateCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventStateCollection7);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) 10L, (double) 100.0f, (int) 'a');
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, 0.0d, (double) (byte) 10, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        boolean boolean7 = combinedEventsManager0.stop();
        double[] doubleArray9 = null;
        boolean boolean10 = combinedEventsManager0.reset((double) (short) 10, doubleArray9);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        double double13 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager15.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray29 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean30 = combinedEventsManager19.reset((double) (byte) 1, doubleArray29);
        boolean boolean31 = combinedEventsManager19.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection32 = combinedEventsManager19.getEventsHandlers();
        double double33 = combinedEventsManager19.getEventTime();
        double double34 = combinedEventsManager19.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager36.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager36.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager42 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean43 = combinedEventsManager42.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager42.getEventsStates();
        double[] doubleArray47 = new double[] { 1L };
        boolean boolean48 = combinedEventsManager42.reset((double) (byte) 0, doubleArray47);
        combinedEventsManager36.stepAccepted(0.0d, doubleArray47);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = combinedEventsManager51.evaluateStep(stepInterpolator53);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection55 = combinedEventsManager51.getEventsHandlers();
        double[] doubleArray62 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean63 = combinedEventsManager51.reset(0.0d, doubleArray62);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager65 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = combinedEventsManager65.evaluateStep(stepInterpolator66);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection68 = combinedEventsManager65.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        double double72 = combinedEventsManager70.getEventTime();
        double double73 = combinedEventsManager70.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection74 = combinedEventsManager70.getEventsStates();
        double[] doubleArray77 = new double[] { (-1.0f) };
        boolean boolean78 = combinedEventsManager70.reset((double) (short) 100, doubleArray77);
        combinedEventsManager65.stepAccepted((double) 10, doubleArray77);
        combinedEventsManager51.stepAccepted((double) (byte) 10, doubleArray77);
        combinedEventsManager36.stepAccepted((double) 0L, doubleArray77);
        combinedEventsManager19.stepAccepted((double) (-1L), doubleArray77);
        combinedEventsManager15.stepAccepted((double) (short) 1, doubleArray77);
        boolean boolean84 = combinedEventsManager0.reset((double) '#', doubleArray77);
        boolean boolean85 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection32);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(eventStateCollection74);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager7.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray23 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean24 = combinedEventsManager13.reset((double) (byte) 1, doubleArray23);
        org.apache.commons.math.ode.events.EventHandler eventHandler25 = null;
        combinedEventsManager13.addEventHandler(eventHandler25, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager31.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection34 = combinedEventsManager31.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager36.getEventsStates();
        double[] doubleArray41 = new double[] { 1L };
        boolean boolean42 = combinedEventsManager36.reset((double) (byte) 0, doubleArray41);
        combinedEventsManager31.stepAccepted((double) (byte) 1, doubleArray41);
        boolean boolean44 = combinedEventsManager13.reset((double) '4', doubleArray41);
        boolean boolean45 = combinedEventsManager7.reset((double) (-1), doubleArray41);
        boolean boolean46 = combinedEventsManager0.reset((double) (byte) -1, doubleArray41);
        java.lang.Class<?> wildcardClass47 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertNotNull(eventStateCollection34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler3 = null;
        combinedEventsManager0.addEventHandler(eventHandler3, (double) (short) 100, (double) 10.0f, (int) (byte) 100);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection8 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler11 = null;
        combinedEventsManager0.addEventHandler(eventHandler11, (double) 1, 0.0d, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection8);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (double) 100, 0.0d, (int) (short) 1);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        boolean boolean10 = combinedEventsManager6.stop();
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean15 = combinedEventsManager6.reset(1.0d, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) (short) 1, doubleArray14);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        double double20 = combinedEventsManager18.getEventTime();
        double double21 = combinedEventsManager18.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager18.getEventsStates();
        double[] doubleArray25 = new double[] { (-1.0f) };
        boolean boolean26 = combinedEventsManager18.reset((double) (short) 100, doubleArray25);
        combinedEventsManager0.stepAccepted((double) 0.0f, doubleArray25);
        java.lang.Class<?> wildcardClass28 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = combinedEventsManager0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) (-1.0f), 1.0d, (int) (byte) 10);
        boolean boolean13 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = combinedEventsManager0.evaluateStep(stepInterpolator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection5 = combinedEventsManager0.getEventsHandlers();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager12.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager12.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        double[] doubleArray22 = new double[] { 1L };
        boolean boolean23 = combinedEventsManager17.reset((double) (byte) 0, doubleArray22);
        combinedEventsManager12.stepAccepted((double) (byte) 1, doubleArray22);
        combinedEventsManager7.stepAccepted(1.0d, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        org.apache.commons.math.ode.events.EventHandler eventHandler27 = null;
        combinedEventsManager0.addEventHandler(eventHandler27, (double) 0, (double) 1.0f, (int) (short) -1);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = combinedEventsManager16.evaluateStep(stepInterpolator18);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager16.getEventsHandlers();
        double[] doubleArray26 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean27 = combinedEventsManager16.reset((double) (byte) 1, doubleArray26);
        boolean boolean28 = combinedEventsManager16.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray41 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean42 = combinedEventsManager30.reset(0.0d, doubleArray41);
        combinedEventsManager16.stepAccepted(0.0d, doubleArray41);
        combinedEventsManager0.stepAccepted((double) (short) 1, doubleArray41);
        double double45 = combinedEventsManager0.getEventTime();
        boolean boolean46 = combinedEventsManager0.isEmpty();
        double double47 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        boolean boolean32 = combinedEventsManager0.reset((double) 10, doubleArray30);
        org.apache.commons.math.ode.events.EventHandler eventHandler33 = null;
        combinedEventsManager0.addEventHandler(eventHandler33, 10.0d, (double) (short) -1, (int) (byte) 1);
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler39 = null;
        combinedEventsManager0.addEventHandler(eventHandler39, (double) ' ', (double) 10L, 10);
        org.apache.commons.math.ode.events.EventHandler eventHandler44 = null;
        combinedEventsManager0.addEventHandler(eventHandler44, 0.0d, (double) 10.0f, (int) (byte) 10);
        org.apache.commons.math.ode.events.EventHandler eventHandler49 = null;
        combinedEventsManager0.addEventHandler(eventHandler49, (double) 1.0f, 0.0d, (int) (byte) 10);
        org.apache.commons.math.ode.events.EventHandler eventHandler54 = null;
        combinedEventsManager0.addEventHandler(eventHandler54, (double) (byte) 0, (double) (byte) 0, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler14 = null;
        combinedEventsManager0.addEventHandler(eventHandler14, (double) (byte) 0, (double) '#', (int) (byte) 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection19 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertNotNull(eventHandlerCollection19);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection27 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        double double31 = combinedEventsManager29.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager29.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection36 = combinedEventsManager34.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager34.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager39.getEventsStates();
        double[] doubleArray44 = new double[] { 1L };
        boolean boolean45 = combinedEventsManager39.reset((double) (byte) 0, doubleArray44);
        combinedEventsManager34.stepAccepted((double) (byte) 1, doubleArray44);
        combinedEventsManager29.stepAccepted(1.0d, doubleArray44);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = combinedEventsManager29.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection53 = combinedEventsManager51.getEventsStates();
        double[] doubleArray56 = new double[] { 1L };
        boolean boolean57 = combinedEventsManager51.reset((double) (byte) 0, doubleArray56);
        boolean boolean58 = combinedEventsManager29.reset((double) (byte) 100, doubleArray56);
        boolean boolean59 = combinedEventsManager0.reset(0.0d, doubleArray56);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection60 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventStateCollection36);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(eventStateCollection53);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection60);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager5.evaluateStep(stepInterpolator7);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager5.getEventsHandlers();
        double[] doubleArray16 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean17 = combinedEventsManager5.reset(0.0d, doubleArray16);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray16);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        double double22 = combinedEventsManager20.getEventTime();
        double double23 = combinedEventsManager20.getEventTime();
        double double24 = combinedEventsManager20.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager26 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean27 = combinedEventsManager26.stop();
        double double28 = combinedEventsManager26.getEventTime();
        double double29 = combinedEventsManager26.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager26.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        boolean boolean36 = combinedEventsManager32.stop();
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean41 = combinedEventsManager32.reset(1.0d, doubleArray40);
        boolean boolean42 = combinedEventsManager26.reset((double) (short) 1, doubleArray40);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager44 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean45 = combinedEventsManager44.stop();
        double double46 = combinedEventsManager44.getEventTime();
        double double47 = combinedEventsManager44.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager44.getEventsStates();
        double[] doubleArray51 = new double[] { (-1.0f) };
        boolean boolean52 = combinedEventsManager44.reset((double) (short) 100, doubleArray51);
        combinedEventsManager26.stepAccepted((double) 0.0f, doubleArray51);
        combinedEventsManager20.stepAccepted((double) 1L, doubleArray51);
        combinedEventsManager0.stepAccepted((double) ' ', doubleArray51);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = combinedEventsManager0.evaluateStep(stepInterpolator56);
        boolean boolean58 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler59 = null;
        combinedEventsManager0.addEventHandler(eventHandler59, (double) 10.0f, (double) 0L, (int) ' ');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        double[] doubleArray5 = new double[] { 1L };
        boolean boolean6 = combinedEventsManager0.reset((double) (byte) 0, doubleArray5);
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) (byte) 10, 1.0d, (int) (byte) 1);
        double double12 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager0.getEventsStates();
        boolean boolean29 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(eventStateCollection30);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler7 = null;
        combinedEventsManager0.addEventHandler(eventHandler7, (double) (short) 10, (double) (-1.0f), (int) '#');
        java.lang.Class<?> wildcardClass12 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler14 = null;
        combinedEventsManager0.addEventHandler(eventHandler14, (double) 10.0f, (double) (short) 10, (int) (short) -1);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager20 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean21 = combinedEventsManager20.stop();
        boolean boolean22 = combinedEventsManager20.stop();
        combinedEventsManager20.clearEventsHandlers();
        boolean boolean24 = combinedEventsManager20.isEmpty();
        boolean boolean25 = combinedEventsManager20.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        double double29 = combinedEventsManager27.getEventTime();
        double double30 = combinedEventsManager27.getEventTime();
        double double31 = combinedEventsManager27.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager33.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager33.getEventsHandlers();
        double[] doubleArray44 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean45 = combinedEventsManager33.reset(0.0d, doubleArray44);
        combinedEventsManager27.stepAccepted((double) (short) 10, doubleArray44);
        combinedEventsManager20.stepAccepted((double) 10.0f, doubleArray44);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager49 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean50 = combinedEventsManager49.stop();
        double double51 = combinedEventsManager49.getEventTime();
        double double52 = combinedEventsManager49.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection53 = combinedEventsManager49.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        double double57 = combinedEventsManager55.getEventTime();
        double double58 = combinedEventsManager55.getEventTime();
        boolean boolean59 = combinedEventsManager55.stop();
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean64 = combinedEventsManager55.reset(1.0d, doubleArray63);
        boolean boolean65 = combinedEventsManager49.reset((double) (short) 1, doubleArray63);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager67 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean68 = combinedEventsManager67.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = combinedEventsManager67.evaluateStep(stepInterpolator69);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection71 = combinedEventsManager67.getEventsHandlers();
        double[] doubleArray78 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean79 = combinedEventsManager67.reset(0.0d, doubleArray78);
        combinedEventsManager49.stepAccepted((double) (short) -1, doubleArray78);
        boolean boolean81 = combinedEventsManager20.reset(0.0d, doubleArray78);
        boolean boolean82 = combinedEventsManager0.reset((double) (byte) 10, doubleArray78);
        org.apache.commons.math.ode.events.EventHandler eventHandler83 = null;
        combinedEventsManager0.addEventHandler(eventHandler83, (double) '4', 10.0d, 0);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = combinedEventsManager0.evaluateStep(stepInterpolator88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(eventStateCollection53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection71);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray10);
        boolean boolean13 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean21 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = combinedEventsManager0.evaluateStep(stepInterpolator22);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection24 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler25 = null;
        combinedEventsManager0.addEventHandler(eventHandler25, (double) 10L, (double) 1, (int) (short) 10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection30 = combinedEventsManager0.getEventsHandlers();
        boolean boolean31 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection24);
        org.junit.Assert.assertNotNull(eventHandlerCollection30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (double) 0L, Double.NaN, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        boolean boolean4 = combinedEventsManager0.stop();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        boolean boolean6 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        boolean boolean8 = combinedEventsManager0.isEmpty();
        boolean boolean9 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager6.stepAccepted((double) 0, doubleArray22);
        combinedEventsManager6.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        double double29 = combinedEventsManager27.getEventTime();
        double double30 = combinedEventsManager27.getEventTime();
        double double31 = combinedEventsManager27.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager33 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean34 = combinedEventsManager33.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager33.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager33.getEventsHandlers();
        double[] doubleArray44 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean45 = combinedEventsManager33.reset(0.0d, doubleArray44);
        combinedEventsManager27.stepAccepted((double) (short) 10, doubleArray44);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager27.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager49 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean50 = combinedEventsManager49.stop();
        double double51 = combinedEventsManager49.getEventTime();
        double double52 = combinedEventsManager49.getEventTime();
        double double53 = combinedEventsManager49.getEventTime();
        boolean boolean54 = combinedEventsManager49.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection55 = combinedEventsManager49.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = combinedEventsManager57.evaluateStep(stepInterpolator59);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection61 = combinedEventsManager57.getEventsHandlers();
        double[] doubleArray67 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean68 = combinedEventsManager57.reset((double) (byte) 1, doubleArray67);
        boolean boolean69 = combinedEventsManager57.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection70 = combinedEventsManager57.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager72 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean73 = combinedEventsManager72.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection74 = combinedEventsManager72.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection75 = combinedEventsManager72.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager77 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean78 = combinedEventsManager77.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection79 = combinedEventsManager77.getEventsStates();
        double[] doubleArray82 = new double[] { 1L };
        boolean boolean83 = combinedEventsManager77.reset((double) (byte) 0, doubleArray82);
        combinedEventsManager72.stepAccepted((double) (byte) 1, doubleArray82);
        combinedEventsManager57.stepAccepted((double) (byte) 100, doubleArray82);
        combinedEventsManager49.stepAccepted((double) 1, doubleArray82);
        boolean boolean87 = combinedEventsManager27.reset((-1.0d), doubleArray82);
        combinedEventsManager6.stepAccepted((double) (short) 0, doubleArray82);
        combinedEventsManager0.stepAccepted((double) 0.0f, doubleArray82);
        org.apache.commons.math.ode.events.EventHandler eventHandler90 = null;
        combinedEventsManager0.addEventHandler(eventHandler90, 1.0d, (double) 100.0f, 100);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = combinedEventsManager0.evaluateStep(stepInterpolator95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(eventStateCollection74);
        org.junit.Assert.assertNotNull(eventStateCollection75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(eventStateCollection79);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        double double25 = combinedEventsManager22.getEventTime();
        double double26 = combinedEventsManager22.getEventTime();
        boolean boolean27 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager22.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        boolean boolean42 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection43 = combinedEventsManager30.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager45.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager45.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager50.getEventsStates();
        double[] doubleArray55 = new double[] { 1L };
        boolean boolean56 = combinedEventsManager50.reset((double) (byte) 0, doubleArray55);
        combinedEventsManager45.stepAccepted((double) (byte) 1, doubleArray55);
        combinedEventsManager30.stepAccepted((double) (byte) 100, doubleArray55);
        combinedEventsManager22.stepAccepted((double) 1, doubleArray55);
        boolean boolean60 = combinedEventsManager0.reset((-1.0d), doubleArray55);
        boolean boolean61 = combinedEventsManager0.isEmpty();
        boolean boolean62 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection63 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager0.getEventsStates();
        double double65 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection63);
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager4 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean5 = combinedEventsManager4.stop();
        boolean boolean6 = combinedEventsManager4.stop();
        combinedEventsManager4.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager9 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean10 = combinedEventsManager9.stop();
        double double11 = combinedEventsManager9.getEventTime();
        double double12 = combinedEventsManager9.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager9.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        double double17 = combinedEventsManager15.getEventTime();
        double double18 = combinedEventsManager15.getEventTime();
        boolean boolean19 = combinedEventsManager15.stop();
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean24 = combinedEventsManager15.reset(1.0d, doubleArray23);
        boolean boolean25 = combinedEventsManager9.reset((double) (short) 1, doubleArray23);
        combinedEventsManager4.stepAccepted((double) (byte) 1, doubleArray23);
        boolean boolean27 = combinedEventsManager0.reset((double) 10L, doubleArray23);
        boolean boolean28 = combinedEventsManager0.isEmpty();
        double double29 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager11.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager11.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager16.getEventsStates();
        double[] doubleArray21 = new double[] { 1L };
        boolean boolean22 = combinedEventsManager16.reset((double) (byte) 0, doubleArray21);
        combinedEventsManager11.stepAccepted((double) (byte) 1, doubleArray21);
        boolean boolean24 = combinedEventsManager11.isEmpty();
        boolean boolean25 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = combinedEventsManager11.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        double double31 = combinedEventsManager29.getEventTime();
        double double32 = combinedEventsManager29.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager29.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        double double37 = combinedEventsManager35.getEventTime();
        double double38 = combinedEventsManager35.getEventTime();
        boolean boolean39 = combinedEventsManager35.stop();
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean44 = combinedEventsManager35.reset(1.0d, doubleArray43);
        boolean boolean45 = combinedEventsManager29.reset((double) (short) 1, doubleArray43);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager47 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean48 = combinedEventsManager47.stop();
        double double49 = combinedEventsManager47.getEventTime();
        double double50 = combinedEventsManager47.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection51 = combinedEventsManager47.getEventsStates();
        double[] doubleArray54 = new double[] { (-1.0f) };
        boolean boolean55 = combinedEventsManager47.reset((double) (short) 100, doubleArray54);
        combinedEventsManager29.stepAccepted((double) 0.0f, doubleArray54);
        boolean boolean57 = combinedEventsManager11.reset((double) (byte) 0, doubleArray54);
        boolean boolean58 = combinedEventsManager0.reset((double) (-1), doubleArray54);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass60 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(eventStateCollection51);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        double double7 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = combinedEventsManager0.evaluateStep(stepInterpolator9);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager0.getEventsStates();
        boolean boolean13 = combinedEventsManager0.isEmpty();
        boolean boolean14 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        double double7 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection8 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(eventHandlerCollection8);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager6.addEventHandler(eventHandler8, 0.0d, (double) 100.0f, (int) (short) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        double double16 = combinedEventsManager14.getEventTime();
        double double17 = combinedEventsManager14.getEventTime();
        double double18 = combinedEventsManager14.getEventTime();
        boolean boolean19 = combinedEventsManager14.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager14.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager14.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager14.getEventsStates();
        boolean boolean23 = combinedEventsManager14.stop();
        boolean boolean24 = combinedEventsManager14.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager14.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager28.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        double double36 = combinedEventsManager34.getEventTime();
        double double37 = combinedEventsManager34.getEventTime();
        boolean boolean38 = combinedEventsManager34.stop();
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean43 = combinedEventsManager34.reset(1.0d, doubleArray42);
        boolean boolean44 = combinedEventsManager28.reset((double) (short) 1, doubleArray42);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        double double49 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager46.getEventsStates();
        double[] doubleArray53 = new double[] { (-1.0f) };
        boolean boolean54 = combinedEventsManager46.reset((double) (short) 100, doubleArray53);
        combinedEventsManager28.stepAccepted((double) 0.0f, doubleArray53);
        boolean boolean56 = combinedEventsManager14.reset((double) 0, doubleArray53);
        boolean boolean57 = combinedEventsManager6.reset((double) 'a', doubleArray53);
        boolean boolean58 = combinedEventsManager0.reset((double) 100, doubleArray53);
        double double59 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager61.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager61.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        double[] doubleArray71 = new double[] { 1L };
        boolean boolean72 = combinedEventsManager66.reset((double) (byte) 0, doubleArray71);
        combinedEventsManager61.stepAccepted((double) (byte) 1, doubleArray71);
        combinedEventsManager0.stepAccepted((double) (short) 1, doubleArray71);
        org.apache.commons.math.ode.events.EventHandler eventHandler75 = null;
        combinedEventsManager0.addEventHandler(eventHandler75, 100.0d, 1.0d, (int) (short) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager81 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = combinedEventsManager81.evaluateStep(stepInterpolator82);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection84 = combinedEventsManager81.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager86 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean87 = combinedEventsManager86.stop();
        double double88 = combinedEventsManager86.getEventTime();
        double double89 = combinedEventsManager86.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection90 = combinedEventsManager86.getEventsStates();
        double[] doubleArray93 = new double[] { (-1.0f) };
        boolean boolean94 = combinedEventsManager86.reset((double) (short) 100, doubleArray93);
        combinedEventsManager81.stepAccepted((double) 10, doubleArray93);
        boolean boolean96 = combinedEventsManager0.reset((double) 'a', doubleArray93);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventStateCollection63);
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(eventStateCollection90);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection5 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection5);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        boolean boolean10 = combinedEventsManager6.stop();
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean15 = combinedEventsManager6.reset(1.0d, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) (short) 1, doubleArray14);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        double double20 = combinedEventsManager18.getEventTime();
        double double21 = combinedEventsManager18.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager18.getEventsStates();
        double[] doubleArray25 = new double[] { (-1.0f) };
        boolean boolean26 = combinedEventsManager18.reset((double) (short) 100, doubleArray25);
        combinedEventsManager0.stepAccepted((double) 0.0f, doubleArray25);
        org.apache.commons.math.ode.events.EventHandler eventHandler28 = null;
        combinedEventsManager0.addEventHandler(eventHandler28, 0.0d, (double) '4', (int) (byte) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager34.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager34.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        double double41 = combinedEventsManager39.getEventTime();
        double double42 = combinedEventsManager39.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection43 = combinedEventsManager39.getEventsStates();
        double[] doubleArray46 = new double[] { (-1.0f) };
        boolean boolean47 = combinedEventsManager39.reset((double) (short) 100, doubleArray46);
        combinedEventsManager34.stepAccepted((double) 10, doubleArray46);
        boolean boolean49 = combinedEventsManager0.reset((double) (-1L), doubleArray46);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager0.getEventsStates();
        double double51 = combinedEventsManager0.getEventTime();
        boolean boolean52 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(eventStateCollection43);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean21 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager0.getEventsStates();
        boolean boolean23 = combinedEventsManager0.stop();
        double double24 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler25 = null;
        combinedEventsManager0.addEventHandler(eventHandler25, (double) (-1L), (-1.0d), (int) (short) 1);
        boolean boolean30 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler27 = null;
        combinedEventsManager0.addEventHandler(eventHandler27, (double) (short) 10, (double) 1, 0);
        boolean boolean32 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection33 = combinedEventsManager0.getEventsHandlers();
        double double34 = combinedEventsManager0.getEventTime();
        double double35 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection33);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        double double18 = combinedEventsManager16.getEventTime();
        double double19 = combinedEventsManager16.getEventTime();
        double double20 = combinedEventsManager16.getEventTime();
        boolean boolean21 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection22 = combinedEventsManager16.getEventsHandlers();
        boolean boolean23 = combinedEventsManager16.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager16.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager16.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager16.getEventsHandlers();
        boolean boolean27 = combinedEventsManager16.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        double double31 = combinedEventsManager29.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection32 = combinedEventsManager29.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection33 = combinedEventsManager29.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = combinedEventsManager35.evaluateStep(stepInterpolator37);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection39 = combinedEventsManager35.getEventsHandlers();
        double[] doubleArray45 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean46 = combinedEventsManager35.reset((double) (byte) 1, doubleArray45);
        org.apache.commons.math.ode.events.EventHandler eventHandler47 = null;
        combinedEventsManager35.addEventHandler(eventHandler47, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager53.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection56 = combinedEventsManager53.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection60 = combinedEventsManager58.getEventsStates();
        double[] doubleArray63 = new double[] { 1L };
        boolean boolean64 = combinedEventsManager58.reset((double) (byte) 0, doubleArray63);
        combinedEventsManager53.stepAccepted((double) (byte) 1, doubleArray63);
        boolean boolean66 = combinedEventsManager35.reset((double) '4', doubleArray63);
        boolean boolean67 = combinedEventsManager29.reset((double) (-1), doubleArray63);
        combinedEventsManager16.stepAccepted(0.0d, doubleArray63);
        combinedEventsManager0.stepAccepted((double) (-1.0f), doubleArray63);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection70 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(eventStateCollection32);
        org.junit.Assert.assertNotNull(eventHandlerCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertNotNull(eventStateCollection56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(eventStateCollection60);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection70);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        double double14 = combinedEventsManager0.getEventTime();
        double double15 = combinedEventsManager0.getEventTime();
        boolean boolean16 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager0.getEventsHandlers();
        boolean boolean18 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager0.getEventsStates();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) 100, (double) 100L, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        boolean boolean6 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean8 = combinedEventsManager0.isEmpty();
        boolean boolean9 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler10 = null;
        combinedEventsManager0.addEventHandler(eventHandler10, (double) '4', (double) 10.0f, (int) (short) 1);
        boolean boolean15 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        boolean boolean19 = combinedEventsManager17.stop();
        combinedEventsManager17.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager17.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager17.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        double double26 = combinedEventsManager24.getEventTime();
        double double27 = combinedEventsManager24.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection28 = combinedEventsManager24.getEventsStates();
        double[] doubleArray31 = new double[] { (-1.0f) };
        boolean boolean32 = combinedEventsManager24.reset((double) (short) 100, doubleArray31);
        boolean boolean33 = combinedEventsManager17.reset((double) 0, doubleArray31);
        boolean boolean34 = combinedEventsManager17.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager17.getEventsStates();
        boolean boolean36 = combinedEventsManager17.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection40 = combinedEventsManager38.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager38.getEventsStates();
        boolean boolean42 = combinedEventsManager38.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager44 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean45 = combinedEventsManager44.stop();
        double double46 = combinedEventsManager44.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager44.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager49 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean50 = combinedEventsManager49.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection51 = combinedEventsManager49.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager49.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager54 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean55 = combinedEventsManager54.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection56 = combinedEventsManager54.getEventsStates();
        double[] doubleArray59 = new double[] { 1L };
        boolean boolean60 = combinedEventsManager54.reset((double) (byte) 0, doubleArray59);
        combinedEventsManager49.stepAccepted((double) (byte) 1, doubleArray59);
        combinedEventsManager44.stepAccepted(1.0d, doubleArray59);
        combinedEventsManager38.stepAccepted((double) 10.0f, doubleArray59);
        combinedEventsManager17.stepAccepted((double) (short) 1, doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) 1L, doubleArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(eventStateCollection28);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventStateCollection40);
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(eventStateCollection51);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(eventStateCollection56);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection46 = combinedEventsManager0.getEventsHandlers();
        boolean boolean47 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = combinedEventsManager0.evaluateStep(stepInterpolator48);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
        org.junit.Assert.assertNotNull(eventHandlerCollection46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        boolean boolean17 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = combinedEventsManager0.evaluateStep(stepInterpolator18);
        boolean boolean20 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        double double25 = combinedEventsManager22.getEventTime();
        double double26 = combinedEventsManager22.getEventTime();
        boolean boolean27 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager22.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = combinedEventsManager30.evaluateStep(stepInterpolator32);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection34 = combinedEventsManager30.getEventsHandlers();
        double[] doubleArray40 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean41 = combinedEventsManager30.reset((double) (byte) 1, doubleArray40);
        boolean boolean42 = combinedEventsManager30.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection43 = combinedEventsManager30.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager45.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager45.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager50.getEventsStates();
        double[] doubleArray55 = new double[] { 1L };
        boolean boolean56 = combinedEventsManager50.reset((double) (byte) 0, doubleArray55);
        combinedEventsManager45.stepAccepted((double) (byte) 1, doubleArray55);
        combinedEventsManager30.stepAccepted((double) (byte) 100, doubleArray55);
        combinedEventsManager22.stepAccepted((double) 1, doubleArray55);
        boolean boolean60 = combinedEventsManager0.reset((-1.0d), doubleArray55);
        org.apache.commons.math.ode.events.EventHandler eventHandler61 = null;
        combinedEventsManager0.addEventHandler(eventHandler61, (double) (short) 10, (double) '#', (-1));
        java.lang.Class<?> wildcardClass66 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = combinedEventsManager0.evaluateStep(stepInterpolator7);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass10 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        double double14 = combinedEventsManager0.getEventTime();
        double double15 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = combinedEventsManager17.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager23.getEventsStates();
        double[] doubleArray28 = new double[] { 1L };
        boolean boolean29 = combinedEventsManager23.reset((double) (byte) 0, doubleArray28);
        combinedEventsManager17.stepAccepted(0.0d, doubleArray28);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = combinedEventsManager32.evaluateStep(stepInterpolator34);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection36 = combinedEventsManager32.getEventsHandlers();
        double[] doubleArray43 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean44 = combinedEventsManager32.reset(0.0d, doubleArray43);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = combinedEventsManager46.evaluateStep(stepInterpolator47);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection49 = combinedEventsManager46.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        double double53 = combinedEventsManager51.getEventTime();
        double double54 = combinedEventsManager51.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager51.getEventsStates();
        double[] doubleArray58 = new double[] { (-1.0f) };
        boolean boolean59 = combinedEventsManager51.reset((double) (short) 100, doubleArray58);
        combinedEventsManager46.stepAccepted((double) 10, doubleArray58);
        combinedEventsManager32.stepAccepted((double) (byte) 10, doubleArray58);
        combinedEventsManager17.stepAccepted((double) 0L, doubleArray58);
        combinedEventsManager0.stepAccepted((double) (-1L), doubleArray58);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection64 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection36);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection64);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = combinedEventsManager0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        double double7 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager9 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean10 = combinedEventsManager9.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager9.evaluateStep(stepInterpolator11);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager9.getEventsHandlers();
        double[] doubleArray19 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean20 = combinedEventsManager9.reset((double) (byte) 1, doubleArray19);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        double double24 = combinedEventsManager22.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection25 = combinedEventsManager22.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection29 = combinedEventsManager27.getEventsStates();
        double[] doubleArray32 = new double[] { 1L };
        boolean boolean33 = combinedEventsManager27.reset((double) (byte) 0, doubleArray32);
        boolean boolean34 = combinedEventsManager22.reset((double) (short) -1, doubleArray32);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = combinedEventsManager36.evaluateStep(stepInterpolator38);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection40 = combinedEventsManager36.getEventsHandlers();
        double[] doubleArray46 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean47 = combinedEventsManager36.reset((double) (byte) 1, doubleArray46);
        boolean boolean48 = combinedEventsManager36.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = combinedEventsManager50.evaluateStep(stepInterpolator52);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection54 = combinedEventsManager50.getEventsHandlers();
        double[] doubleArray61 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean62 = combinedEventsManager50.reset(0.0d, doubleArray61);
        combinedEventsManager36.stepAccepted(0.0d, doubleArray61);
        boolean boolean64 = combinedEventsManager22.reset((double) (short) 1, doubleArray61);
        combinedEventsManager9.stepAccepted((double) 10.0f, doubleArray61);
        boolean boolean66 = combinedEventsManager0.reset((double) 10.0f, doubleArray61);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection67 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(eventStateCollection25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(eventStateCollection29);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection54);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection67);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        double double13 = combinedEventsManager0.getEventTime();
        double double14 = combinedEventsManager0.getEventTime();
        double double15 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager17.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection20 = combinedEventsManager17.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager22.getEventsStates();
        double[] doubleArray27 = new double[] { 1L };
        boolean boolean28 = combinedEventsManager22.reset((double) (byte) 0, doubleArray27);
        combinedEventsManager17.stepAccepted((double) (byte) 1, doubleArray27);
        boolean boolean30 = combinedEventsManager0.reset((double) 0.0f, doubleArray27);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = combinedEventsManager0.evaluateStep(stepInterpolator31);
        double double33 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(eventStateCollection20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler2 = null;
        combinedEventsManager0.addEventHandler(eventHandler2, 0.0d, (double) (byte) 10, (int) (byte) 0);
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager9 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean10 = combinedEventsManager9.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager9.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection12 = combinedEventsManager9.getEventsStates();
        combinedEventsManager9.clearEventsHandlers();
        combinedEventsManager9.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        double double18 = combinedEventsManager16.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager16.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection20 = combinedEventsManager16.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager22 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean23 = combinedEventsManager22.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = combinedEventsManager22.evaluateStep(stepInterpolator24);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection26 = combinedEventsManager22.getEventsHandlers();
        double[] doubleArray32 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean33 = combinedEventsManager22.reset((double) (byte) 1, doubleArray32);
        org.apache.commons.math.ode.events.EventHandler eventHandler34 = null;
        combinedEventsManager22.addEventHandler(eventHandler34, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection42 = combinedEventsManager40.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection43 = combinedEventsManager40.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection47 = combinedEventsManager45.getEventsStates();
        double[] doubleArray50 = new double[] { 1L };
        boolean boolean51 = combinedEventsManager45.reset((double) (byte) 0, doubleArray50);
        combinedEventsManager40.stepAccepted((double) (byte) 1, doubleArray50);
        boolean boolean53 = combinedEventsManager22.reset((double) '4', doubleArray50);
        boolean boolean54 = combinedEventsManager16.reset((double) (-1), doubleArray50);
        boolean boolean55 = combinedEventsManager9.reset((double) (byte) -1, doubleArray50);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager57 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean58 = combinedEventsManager57.stop();
        double double59 = combinedEventsManager57.getEventTime();
        double double60 = combinedEventsManager57.getEventTime();
        double double61 = combinedEventsManager57.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager63 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean64 = combinedEventsManager63.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = combinedEventsManager63.evaluateStep(stepInterpolator65);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection67 = combinedEventsManager63.getEventsHandlers();
        double[] doubleArray74 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean75 = combinedEventsManager63.reset(0.0d, doubleArray74);
        combinedEventsManager57.stepAccepted((double) (short) 10, doubleArray74);
        combinedEventsManager9.stepAccepted(0.0d, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) (-1L), doubleArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(eventStateCollection12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(eventHandlerCollection20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection26);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventStateCollection42);
        org.junit.Assert.assertNotNull(eventStateCollection43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(eventStateCollection47);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection67);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        double[] doubleArray10 = new double[] { 1L };
        boolean boolean11 = combinedEventsManager5.reset((double) (byte) 0, doubleArray10);
        combinedEventsManager0.stepAccepted((double) (byte) 1, doubleArray10);
        boolean boolean13 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        double double6 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        double[] doubleArray11 = null;
        combinedEventsManager0.stepAccepted((double) (short) 1, doubleArray11);
        combinedEventsManager0.clearEventsHandlers();
        double double14 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray11 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean12 = combinedEventsManager0.reset(0.0d, doubleArray11);
        double[] doubleArray14 = null;
        boolean boolean15 = combinedEventsManager0.reset((double) (short) -1, doubleArray14);
        boolean boolean16 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = combinedEventsManager0.evaluateStep(stepInterpolator1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        double double13 = combinedEventsManager11.getEventTime();
        double double14 = combinedEventsManager11.getEventTime();
        double double15 = combinedEventsManager11.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager17.evaluateStep(stepInterpolator19);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager17.getEventsHandlers();
        double[] doubleArray28 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean29 = combinedEventsManager17.reset(0.0d, doubleArray28);
        combinedEventsManager11.stepAccepted((double) (short) 10, doubleArray28);
        combinedEventsManager6.stepAccepted(10.0d, doubleArray28);
        boolean boolean32 = combinedEventsManager6.stop();
        boolean boolean33 = combinedEventsManager6.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = combinedEventsManager35.evaluateStep(stepInterpolator37);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection39 = combinedEventsManager35.getEventsHandlers();
        double[] doubleArray45 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean46 = combinedEventsManager35.reset((double) (byte) 1, doubleArray45);
        org.apache.commons.math.ode.events.EventHandler eventHandler47 = null;
        combinedEventsManager35.addEventHandler(eventHandler47, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager53 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean54 = combinedEventsManager53.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection55 = combinedEventsManager53.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection56 = combinedEventsManager53.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager58 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean59 = combinedEventsManager58.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection60 = combinedEventsManager58.getEventsStates();
        double[] doubleArray63 = new double[] { 1L };
        boolean boolean64 = combinedEventsManager58.reset((double) (byte) 0, doubleArray63);
        combinedEventsManager53.stepAccepted((double) (byte) 1, doubleArray63);
        boolean boolean66 = combinedEventsManager35.reset((double) '4', doubleArray63);
        combinedEventsManager6.stepAccepted((double) 1, doubleArray63);
        boolean boolean68 = combinedEventsManager0.reset((double) (byte) 0, doubleArray63);
        java.lang.Class<?> wildcardClass69 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventStateCollection55);
        org.junit.Assert.assertNotNull(eventStateCollection56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(eventStateCollection60);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (-1), doubleArray40);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager45 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean46 = combinedEventsManager45.stop();
        double double47 = combinedEventsManager45.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection48 = combinedEventsManager45.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager50 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean51 = combinedEventsManager50.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection52 = combinedEventsManager50.getEventsStates();
        double[] doubleArray55 = new double[] { 1L };
        boolean boolean56 = combinedEventsManager50.reset((double) (byte) 0, doubleArray55);
        boolean boolean57 = combinedEventsManager45.reset((double) (short) -1, doubleArray55);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager59 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean60 = combinedEventsManager59.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = combinedEventsManager59.evaluateStep(stepInterpolator61);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection63 = combinedEventsManager59.getEventsHandlers();
        double[] doubleArray69 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean70 = combinedEventsManager59.reset((double) (byte) 1, doubleArray69);
        boolean boolean71 = combinedEventsManager59.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager73 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean74 = combinedEventsManager73.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = combinedEventsManager73.evaluateStep(stepInterpolator75);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection77 = combinedEventsManager73.getEventsHandlers();
        double[] doubleArray84 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean85 = combinedEventsManager73.reset(0.0d, doubleArray84);
        combinedEventsManager59.stepAccepted(0.0d, doubleArray84);
        boolean boolean87 = combinedEventsManager45.reset((double) (short) 1, doubleArray84);
        boolean boolean88 = combinedEventsManager0.reset((double) 0L, doubleArray84);
        double double89 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection90 = combinedEventsManager0.getEventsStates();
        double double91 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(eventStateCollection48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(eventStateCollection52);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection63);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection77);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertNotNull(eventStateCollection90);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        double double6 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        double double8 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection9 = combinedEventsManager0.getEventsHandlers();
        boolean boolean10 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection13 = combinedEventsManager0.getEventsHandlers();
        boolean boolean14 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        double double17 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventHandlerCollection9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        boolean boolean19 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection23 = combinedEventsManager21.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager21.getEventsStates();
        boolean boolean25 = combinedEventsManager21.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        double double29 = combinedEventsManager27.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager27.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection34 = combinedEventsManager32.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection35 = combinedEventsManager32.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection39 = combinedEventsManager37.getEventsStates();
        double[] doubleArray42 = new double[] { 1L };
        boolean boolean43 = combinedEventsManager37.reset((double) (byte) 0, doubleArray42);
        combinedEventsManager32.stepAccepted((double) (byte) 1, doubleArray42);
        combinedEventsManager27.stepAccepted(1.0d, doubleArray42);
        combinedEventsManager21.stepAccepted((double) 10.0f, doubleArray42);
        combinedEventsManager0.stepAccepted((double) (short) 1, doubleArray42);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = combinedEventsManager0.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager51 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean52 = combinedEventsManager51.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = combinedEventsManager51.evaluateStep(stepInterpolator53);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection55 = combinedEventsManager51.getEventsHandlers();
        double[] doubleArray62 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean63 = combinedEventsManager51.reset(0.0d, doubleArray62);
        combinedEventsManager0.stepAccepted((double) (byte) -1, doubleArray62);
        org.apache.commons.math.ode.events.EventHandler eventHandler65 = null;
        combinedEventsManager0.addEventHandler(eventHandler65, (double) '4', (double) 10L, (-1));
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager71 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean72 = combinedEventsManager71.stop();
        boolean boolean73 = combinedEventsManager71.stop();
        boolean boolean74 = combinedEventsManager71.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager76 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean77 = combinedEventsManager76.stop();
        boolean boolean78 = combinedEventsManager76.stop();
        combinedEventsManager76.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection80 = combinedEventsManager76.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection81 = combinedEventsManager76.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager83 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean84 = combinedEventsManager83.stop();
        double double85 = combinedEventsManager83.getEventTime();
        double double86 = combinedEventsManager83.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection87 = combinedEventsManager83.getEventsStates();
        double[] doubleArray90 = new double[] { (-1.0f) };
        boolean boolean91 = combinedEventsManager83.reset((double) (short) 100, doubleArray90);
        boolean boolean92 = combinedEventsManager76.reset((double) 0, doubleArray90);
        boolean boolean93 = combinedEventsManager71.reset((double) (byte) 1, doubleArray90);
        boolean boolean94 = combinedEventsManager0.reset((double) 0, doubleArray90);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventStateCollection23);
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(eventStateCollection34);
        org.junit.Assert.assertNotNull(eventStateCollection35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventStateCollection39);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection80);
        org.junit.Assert.assertNotNull(eventStateCollection81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertNotNull(eventStateCollection87);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = combinedEventsManager0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.events.EventHandler eventHandler8 = null;
        combinedEventsManager0.addEventHandler(eventHandler8, (double) (-1.0f), 1.0d, (int) (byte) 10);
        boolean boolean13 = combinedEventsManager0.stop();
        boolean boolean14 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = combinedEventsManager0.evaluateStep(stepInterpolator12);
        double double14 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager0.getEventsStates();
        boolean boolean16 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = combinedEventsManager18.evaluateStep(stepInterpolator20);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection22 = combinedEventsManager18.getEventsHandlers();
        double[] doubleArray29 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean30 = combinedEventsManager18.reset(0.0d, doubleArray29);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = combinedEventsManager32.evaluateStep(stepInterpolator33);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection35 = combinedEventsManager32.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        double double39 = combinedEventsManager37.getEventTime();
        double double40 = combinedEventsManager37.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection41 = combinedEventsManager37.getEventsStates();
        double[] doubleArray44 = new double[] { (-1.0f) };
        boolean boolean45 = combinedEventsManager37.reset((double) (short) 100, doubleArray44);
        combinedEventsManager32.stepAccepted((double) 10, doubleArray44);
        combinedEventsManager18.stepAccepted((double) (byte) 10, doubleArray44);
        boolean boolean48 = combinedEventsManager0.reset((double) 0, doubleArray44);
        double double49 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(eventStateCollection41);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection10 = combinedEventsManager7.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager7.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        double[] doubleArray23 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean24 = combinedEventsManager13.reset((double) (byte) 1, doubleArray23);
        org.apache.commons.math.ode.events.EventHandler eventHandler25 = null;
        combinedEventsManager13.addEventHandler(eventHandler25, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager31 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean32 = combinedEventsManager31.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager31.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection34 = combinedEventsManager31.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager36 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean37 = combinedEventsManager36.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager36.getEventsStates();
        double[] doubleArray41 = new double[] { 1L };
        boolean boolean42 = combinedEventsManager36.reset((double) (byte) 0, doubleArray41);
        combinedEventsManager31.stepAccepted((double) (byte) 1, doubleArray41);
        boolean boolean44 = combinedEventsManager13.reset((double) '4', doubleArray41);
        boolean boolean45 = combinedEventsManager7.reset((double) (-1), doubleArray41);
        boolean boolean46 = combinedEventsManager0.reset((double) (byte) -1, doubleArray41);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager48 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean49 = combinedEventsManager48.stop();
        double double50 = combinedEventsManager48.getEventTime();
        double double51 = combinedEventsManager48.getEventTime();
        double double52 = combinedEventsManager48.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager54 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean55 = combinedEventsManager54.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = combinedEventsManager54.evaluateStep(stepInterpolator56);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection58 = combinedEventsManager54.getEventsHandlers();
        double[] doubleArray65 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean66 = combinedEventsManager54.reset(0.0d, doubleArray65);
        combinedEventsManager48.stepAccepted((double) (short) 10, doubleArray65);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray65);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection69 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventStateCollection10);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertNotNull(eventStateCollection34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection58);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection69);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        boolean boolean6 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection6 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager8.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        double double15 = combinedEventsManager13.getEventTime();
        double double16 = combinedEventsManager13.getEventTime();
        double double17 = combinedEventsManager13.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager19 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean20 = combinedEventsManager19.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = combinedEventsManager19.evaluateStep(stepInterpolator21);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection23 = combinedEventsManager19.getEventsHandlers();
        double[] doubleArray30 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean31 = combinedEventsManager19.reset(0.0d, doubleArray30);
        combinedEventsManager13.stepAccepted((double) (short) 10, doubleArray30);
        combinedEventsManager8.stepAccepted(10.0d, doubleArray30);
        boolean boolean34 = combinedEventsManager8.stop();
        boolean boolean35 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager37 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean38 = combinedEventsManager37.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = combinedEventsManager37.evaluateStep(stepInterpolator39);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection41 = combinedEventsManager37.getEventsHandlers();
        double[] doubleArray47 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean48 = combinedEventsManager37.reset((double) (byte) 1, doubleArray47);
        org.apache.commons.math.ode.events.EventHandler eventHandler49 = null;
        combinedEventsManager37.addEventHandler(eventHandler49, (double) '#', (double) 100L, 10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager55 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean56 = combinedEventsManager55.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection57 = combinedEventsManager55.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection58 = combinedEventsManager55.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager60 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean61 = combinedEventsManager60.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection62 = combinedEventsManager60.getEventsStates();
        double[] doubleArray65 = new double[] { 1L };
        boolean boolean66 = combinedEventsManager60.reset((double) (byte) 0, doubleArray65);
        combinedEventsManager55.stepAccepted((double) (byte) 1, doubleArray65);
        boolean boolean68 = combinedEventsManager37.reset((double) '4', doubleArray65);
        combinedEventsManager8.stepAccepted((double) 1, doubleArray65);
        boolean boolean70 = combinedEventsManager0.reset((double) 100.0f, doubleArray65);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator71 = null;
        boolean boolean72 = combinedEventsManager0.evaluateStep(stepInterpolator71);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection73 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection74 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(eventStateCollection6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(eventStateCollection57);
        org.junit.Assert.assertNotNull(eventStateCollection58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(eventStateCollection62);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection73);
        org.junit.Assert.assertNotNull(eventStateCollection74);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        boolean boolean6 = combinedEventsManager0.isEmpty();
        boolean boolean7 = combinedEventsManager0.stop();
        double[] doubleArray9 = null;
        boolean boolean10 = combinedEventsManager0.reset((double) (short) 10, doubleArray9);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = combinedEventsManager0.evaluateStep(stepInterpolator12);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = combinedEventsManager0.evaluateStep(stepInterpolator12);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection14 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection15 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection16 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection14);
        org.junit.Assert.assertNotNull(eventStateCollection15);
        org.junit.Assert.assertNotNull(eventStateCollection16);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager12 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean13 = combinedEventsManager12.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = combinedEventsManager12.evaluateStep(stepInterpolator14);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection16 = combinedEventsManager12.getEventsHandlers();
        double[] doubleArray22 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean23 = combinedEventsManager12.reset((double) (byte) 1, doubleArray22);
        org.apache.commons.math.ode.events.EventHandler eventHandler24 = null;
        combinedEventsManager12.addEventHandler(eventHandler24, (double) '#', (double) 100L, 10);
        boolean boolean29 = combinedEventsManager12.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager12.getEventsStates();
        double[] doubleArray33 = new double[] { '4' };
        boolean boolean34 = combinedEventsManager12.reset((double) (byte) 0, doubleArray33);
        boolean boolean35 = combinedEventsManager6.reset((double) ' ', doubleArray33);
        boolean boolean36 = combinedEventsManager0.reset((double) (byte) 1, doubleArray33);
        org.apache.commons.math.ode.events.EventHandler eventHandler37 = null;
        combinedEventsManager0.addEventHandler(eventHandler37, 0.0d, (double) ' ', (int) 'a');
        double double42 = combinedEventsManager0.getEventTime();
        boolean boolean43 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection16);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = combinedEventsManager0.evaluateStep(stepInterpolator1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        double[] doubleArray12 = new double[] { (-1.0f) };
        boolean boolean13 = combinedEventsManager5.reset((double) (short) 100, doubleArray12);
        combinedEventsManager0.stepAccepted((double) 10, doubleArray12);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        double double19 = combinedEventsManager17.getEventTime();
        double double20 = combinedEventsManager17.getEventTime();
        double double21 = combinedEventsManager17.getEventTime();
        boolean boolean22 = combinedEventsManager17.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = combinedEventsManager17.evaluateStep(stepInterpolator23);
        boolean boolean25 = combinedEventsManager17.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = combinedEventsManager27.evaluateStep(stepInterpolator29);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        double double36 = combinedEventsManager32.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = combinedEventsManager38.evaluateStep(stepInterpolator40);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection42 = combinedEventsManager38.getEventsHandlers();
        double[] doubleArray49 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean50 = combinedEventsManager38.reset(0.0d, doubleArray49);
        combinedEventsManager32.stepAccepted((double) (short) 10, doubleArray49);
        combinedEventsManager27.stepAccepted(10.0d, doubleArray49);
        boolean boolean53 = combinedEventsManager27.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection54 = combinedEventsManager27.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager56 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean57 = combinedEventsManager56.stop();
        double double58 = combinedEventsManager56.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager56.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager61.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager61.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        double[] doubleArray71 = new double[] { 1L };
        boolean boolean72 = combinedEventsManager66.reset((double) (byte) 0, doubleArray71);
        combinedEventsManager61.stepAccepted((double) (byte) 1, doubleArray71);
        combinedEventsManager56.stepAccepted(1.0d, doubleArray71);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = combinedEventsManager56.evaluateStep(stepInterpolator75);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager78 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean79 = combinedEventsManager78.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection80 = combinedEventsManager78.getEventsStates();
        double[] doubleArray83 = new double[] { 1L };
        boolean boolean84 = combinedEventsManager78.reset((double) (byte) 0, doubleArray83);
        boolean boolean85 = combinedEventsManager56.reset((double) (byte) 100, doubleArray83);
        boolean boolean86 = combinedEventsManager27.reset(0.0d, doubleArray83);
        boolean boolean87 = combinedEventsManager17.reset((double) '4', doubleArray83);
        boolean boolean88 = combinedEventsManager0.reset((double) (-1), doubleArray83);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection89 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler90 = null;
        combinedEventsManager0.addEventHandler(eventHandler90, (double) 1L, (double) 10, (int) '#');
        boolean boolean95 = combinedEventsManager0.stop();
        boolean boolean96 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection42);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventStateCollection63);
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(eventStateCollection80);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(eventStateCollection89);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        boolean boolean17 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager0.getEventsStates();
        java.lang.Class<?> wildcardClass19 = eventStateCollection18.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (double) 10L, (double) 100, (int) '#');
        boolean boolean10 = combinedEventsManager0.isEmpty();
        double double11 = combinedEventsManager0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        boolean boolean5 = combinedEventsManager0.isEmpty();
        boolean boolean6 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager8 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean9 = combinedEventsManager8.stop();
        boolean boolean10 = combinedEventsManager8.stop();
        combinedEventsManager8.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection12 = combinedEventsManager8.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager8.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = combinedEventsManager8.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.events.EventHandler eventHandler16 = null;
        combinedEventsManager8.addEventHandler(eventHandler16, (double) '4', 1.0d, (int) (byte) 1);
        boolean boolean21 = combinedEventsManager8.stop();
        boolean boolean22 = combinedEventsManager8.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager24 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean25 = combinedEventsManager24.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection26 = combinedEventsManager24.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager24.getEventsStates();
        boolean boolean28 = combinedEventsManager24.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection38 = combinedEventsManager35.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager40 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean41 = combinedEventsManager40.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection42 = combinedEventsManager40.getEventsStates();
        double[] doubleArray45 = new double[] { 1L };
        boolean boolean46 = combinedEventsManager40.reset((double) (byte) 0, doubleArray45);
        combinedEventsManager35.stepAccepted((double) (byte) 1, doubleArray45);
        combinedEventsManager30.stepAccepted(1.0d, doubleArray45);
        combinedEventsManager24.stepAccepted((double) 10.0f, doubleArray45);
        boolean boolean50 = combinedEventsManager8.reset((double) (short) 100, doubleArray45);
        boolean boolean51 = combinedEventsManager0.reset(100.0d, doubleArray45);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection12);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(eventStateCollection26);
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(eventStateCollection38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventStateCollection42);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = null;
        boolean boolean8 = combinedEventsManager0.reset((double) 1.0f, doubleArray7);
        boolean boolean9 = combinedEventsManager0.isEmpty();
        double[] doubleArray11 = null;
        boolean boolean12 = combinedEventsManager0.reset((double) (byte) 10, doubleArray11);
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, (double) (byte) -1, (double) (-1.0f), (int) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        double double5 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager9 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean10 = combinedEventsManager9.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager9.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = combinedEventsManager9.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager15 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean16 = combinedEventsManager15.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection17 = combinedEventsManager15.getEventsStates();
        double[] doubleArray20 = new double[] { 1L };
        boolean boolean21 = combinedEventsManager15.reset((double) (byte) 0, doubleArray20);
        combinedEventsManager9.stepAccepted(0.0d, doubleArray20);
        boolean boolean23 = combinedEventsManager0.reset((double) (byte) 100, doubleArray20);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventStateCollection17);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager7 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean8 = combinedEventsManager7.stop();
        double double9 = combinedEventsManager7.getEventTime();
        double double10 = combinedEventsManager7.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager7.getEventsStates();
        double[] doubleArray14 = new double[] { (-1.0f) };
        boolean boolean15 = combinedEventsManager7.reset((double) (short) 100, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) 0, doubleArray14);
        boolean boolean17 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager0.getEventsHandlers();
        java.lang.Class<?> wildcardClass19 = eventHandlerCollection18.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        double[] doubleArray7 = new double[] { (-1.0f) };
        boolean boolean8 = combinedEventsManager0.reset((double) (short) 100, doubleArray7);
        boolean boolean9 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager13 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean14 = combinedEventsManager13.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager13.evaluateStep(stepInterpolator15);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection17 = combinedEventsManager13.getEventsHandlers();
        boolean boolean18 = combinedEventsManager13.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection19 = combinedEventsManager13.getEventsStates();
        org.apache.commons.math.ode.events.EventHandler eventHandler20 = null;
        combinedEventsManager13.addEventHandler(eventHandler20, (double) 1.0f, (double) '#', (int) (short) -1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection25 = combinedEventsManager13.getEventsHandlers();
        combinedEventsManager13.clearEventsHandlers();
        boolean boolean27 = combinedEventsManager13.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection31 = combinedEventsManager29.getEventsStates();
        combinedEventsManager29.clearEventsHandlers();
        boolean boolean33 = combinedEventsManager29.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = combinedEventsManager35.evaluateStep(stepInterpolator37);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection39 = combinedEventsManager35.getEventsHandlers();
        double[] doubleArray45 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean46 = combinedEventsManager35.reset((double) (byte) 1, doubleArray45);
        boolean boolean47 = combinedEventsManager35.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager49 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean50 = combinedEventsManager49.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = combinedEventsManager49.evaluateStep(stepInterpolator51);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection53 = combinedEventsManager49.getEventsHandlers();
        double[] doubleArray60 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean61 = combinedEventsManager49.reset(0.0d, doubleArray60);
        combinedEventsManager35.stepAccepted(0.0d, doubleArray60);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection63 = combinedEventsManager35.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager65 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean66 = combinedEventsManager65.stop();
        double double67 = combinedEventsManager65.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager65.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager70 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean71 = combinedEventsManager70.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection72 = combinedEventsManager70.getEventsStates();
        double[] doubleArray75 = new double[] { 1L };
        boolean boolean76 = combinedEventsManager70.reset((double) (byte) 0, doubleArray75);
        boolean boolean77 = combinedEventsManager65.reset((double) (short) -1, doubleArray75);
        boolean boolean78 = combinedEventsManager35.reset((double) (-1), doubleArray75);
        boolean boolean79 = combinedEventsManager29.reset((double) '4', doubleArray75);
        boolean boolean80 = combinedEventsManager13.reset(10.0d, doubleArray75);
        combinedEventsManager0.stepAccepted(1.0d, doubleArray75);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eventStateCollection19);
        org.junit.Assert.assertNotNull(eventHandlerCollection25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(eventStateCollection31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(eventStateCollection72);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        org.apache.commons.math.ode.events.EventHandler eventHandler20 = null;
        combinedEventsManager0.addEventHandler(eventHandler20, (double) 1, (double) 'a', (int) '#');
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean27 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = combinedEventsManager0.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = combinedEventsManager0.evaluateStep(stepInterpolator30);
        double[] doubleArray33 = null;
        boolean boolean34 = combinedEventsManager0.reset((double) 1.0f, doubleArray33);
        org.apache.commons.math.ode.events.EventHandler eventHandler35 = null;
        combinedEventsManager0.addEventHandler(eventHandler35, (double) 10L, (double) (-1L), (int) 'a');
        double double40 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (double) (short) 1, 10.0d, (int) (short) 10);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler13 = null;
        combinedEventsManager0.addEventHandler(eventHandler13, 1.0d, (double) (-1L), (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = combinedEventsManager0.evaluateStep(stepInterpolator1);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection3 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager5.getEventsStates();
        double[] doubleArray12 = new double[] { (-1.0f) };
        boolean boolean13 = combinedEventsManager5.reset((double) (short) 100, doubleArray12);
        combinedEventsManager0.stepAccepted((double) 10, doubleArray12);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        double double19 = combinedEventsManager17.getEventTime();
        double double20 = combinedEventsManager17.getEventTime();
        double double21 = combinedEventsManager17.getEventTime();
        boolean boolean22 = combinedEventsManager17.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = combinedEventsManager17.evaluateStep(stepInterpolator23);
        boolean boolean25 = combinedEventsManager17.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager27 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean28 = combinedEventsManager27.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = combinedEventsManager27.evaluateStep(stepInterpolator29);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager32 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean33 = combinedEventsManager32.stop();
        double double34 = combinedEventsManager32.getEventTime();
        double double35 = combinedEventsManager32.getEventTime();
        double double36 = combinedEventsManager32.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager38 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean39 = combinedEventsManager38.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = combinedEventsManager38.evaluateStep(stepInterpolator40);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection42 = combinedEventsManager38.getEventsHandlers();
        double[] doubleArray49 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean50 = combinedEventsManager38.reset(0.0d, doubleArray49);
        combinedEventsManager32.stepAccepted((double) (short) 10, doubleArray49);
        combinedEventsManager27.stepAccepted(10.0d, doubleArray49);
        boolean boolean53 = combinedEventsManager27.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection54 = combinedEventsManager27.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager56 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean57 = combinedEventsManager56.stop();
        double double58 = combinedEventsManager56.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection59 = combinedEventsManager56.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection63 = combinedEventsManager61.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager61.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        double[] doubleArray71 = new double[] { 1L };
        boolean boolean72 = combinedEventsManager66.reset((double) (byte) 0, doubleArray71);
        combinedEventsManager61.stepAccepted((double) (byte) 1, doubleArray71);
        combinedEventsManager56.stepAccepted(1.0d, doubleArray71);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = combinedEventsManager56.evaluateStep(stepInterpolator75);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager78 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean79 = combinedEventsManager78.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection80 = combinedEventsManager78.getEventsStates();
        double[] doubleArray83 = new double[] { 1L };
        boolean boolean84 = combinedEventsManager78.reset((double) (byte) 0, doubleArray83);
        boolean boolean85 = combinedEventsManager56.reset((double) (byte) 100, doubleArray83);
        boolean boolean86 = combinedEventsManager27.reset(0.0d, doubleArray83);
        boolean boolean87 = combinedEventsManager17.reset((double) '4', doubleArray83);
        boolean boolean88 = combinedEventsManager0.reset((double) (-1), doubleArray83);
        java.lang.Class<?> wildcardClass89 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection42);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(eventStateCollection59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(eventStateCollection63);
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(eventStateCollection80);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (-1), doubleArray40);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection44 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection45 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection44);
        org.junit.Assert.assertNotNull(eventStateCollection45);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        combinedEventsManager0.clearEventsHandlers();
        boolean boolean5 = combinedEventsManager0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        double double7 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = combinedEventsManager0.evaluateStep(stepInterpolator9);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection11 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection11);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, 1.0d, (double) (byte) 1, (int) (byte) 100);
        org.apache.commons.math.ode.events.EventHandler eventHandler10 = null;
        combinedEventsManager0.addEventHandler(eventHandler10, (double) (byte) 100, (double) 0, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        boolean boolean44 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager46 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean47 = combinedEventsManager46.stop();
        double double48 = combinedEventsManager46.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection49 = combinedEventsManager46.getEventsHandlers();
        boolean boolean50 = combinedEventsManager46.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager52.evaluateStep(stepInterpolator54);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection56 = combinedEventsManager52.getEventsHandlers();
        double[] doubleArray62 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean63 = combinedEventsManager52.reset((double) (byte) 1, doubleArray62);
        boolean boolean64 = combinedEventsManager52.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = combinedEventsManager66.evaluateStep(stepInterpolator68);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection70 = combinedEventsManager66.getEventsHandlers();
        double[] doubleArray76 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean77 = combinedEventsManager66.reset((double) (byte) 1, doubleArray76);
        org.apache.commons.math.ode.events.EventHandler eventHandler78 = null;
        combinedEventsManager66.addEventHandler(eventHandler78, (double) '#', (double) 100L, 10);
        boolean boolean83 = combinedEventsManager66.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection84 = combinedEventsManager66.getEventsStates();
        double[] doubleArray87 = new double[] { '4' };
        boolean boolean88 = combinedEventsManager66.reset((double) (byte) 0, doubleArray87);
        boolean boolean89 = combinedEventsManager52.reset(Double.NaN, doubleArray87);
        boolean boolean90 = combinedEventsManager46.reset((double) 100.0f, doubleArray87);
        boolean boolean91 = combinedEventsManager0.reset((double) (byte) -1, doubleArray87);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection92 = combinedEventsManager0.getEventsStates();
        boolean boolean93 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection94 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(eventHandlerCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection70);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(eventStateCollection84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(eventStateCollection92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(eventHandlerCollection94);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager6.evaluateStep(stepInterpolator8);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection10 = combinedEventsManager6.getEventsHandlers();
        double[] doubleArray17 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean18 = combinedEventsManager6.reset(0.0d, doubleArray17);
        combinedEventsManager0.stepAccepted((double) (short) 10, doubleArray17);
        boolean boolean20 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection21 = combinedEventsManager0.getEventsHandlers();
        boolean boolean22 = combinedEventsManager0.stop();
        double double23 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection24 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager0.evaluateStep(stepInterpolator25);
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(eventStateCollection24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = combinedEventsManager0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.events.EventHandler eventHandler6 = null;
        combinedEventsManager0.addEventHandler(eventHandler6, (double) '#', 0.0d, 0);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection11 = combinedEventsManager0.getEventsStates();
        boolean boolean12 = combinedEventsManager0.isEmpty();
        double double13 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        double double15 = combinedEventsManager0.getEventTime();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventStateCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(eventStateCollection4);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection5 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        boolean boolean7 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = combinedEventsManager0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = combinedEventsManager0.evaluateStep(stepInterpolator10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(eventStateCollection5);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = combinedEventsManager0.evaluateStep(stepInterpolator15);
        boolean boolean17 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = combinedEventsManager0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.events.EventHandler eventHandler21 = null;
        combinedEventsManager0.addEventHandler(eventHandler21, (double) 10.0f, (double) (-1), (int) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        org.apache.commons.math.ode.events.EventHandler eventHandler12 = null;
        combinedEventsManager0.addEventHandler(eventHandler12, (double) '#', (double) 100L, 10);
        double[] doubleArray18 = null;
        boolean boolean19 = combinedEventsManager0.reset((double) 10, doubleArray18);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager21 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean22 = combinedEventsManager21.stop();
        boolean boolean23 = combinedEventsManager21.stop();
        combinedEventsManager21.clearEventsHandlers();
        boolean boolean25 = combinedEventsManager21.isEmpty();
        boolean boolean26 = combinedEventsManager21.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        double double30 = combinedEventsManager28.getEventTime();
        double double31 = combinedEventsManager28.getEventTime();
        double double32 = combinedEventsManager28.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean35 = combinedEventsManager34.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = combinedEventsManager34.evaluateStep(stepInterpolator36);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection38 = combinedEventsManager34.getEventsHandlers();
        double[] doubleArray45 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean46 = combinedEventsManager34.reset(0.0d, doubleArray45);
        combinedEventsManager28.stepAccepted((double) (short) 10, doubleArray45);
        combinedEventsManager21.stepAccepted((double) 10.0f, doubleArray45);
        boolean boolean49 = combinedEventsManager0.reset((double) (byte) 1, doubleArray45);
        boolean boolean50 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = combinedEventsManager52.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = combinedEventsManager52.evaluateStep(stepInterpolator56);
        combinedEventsManager52.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager60 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean61 = combinedEventsManager60.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager63 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean64 = combinedEventsManager63.stop();
        double double65 = combinedEventsManager63.getEventTime();
        double double66 = combinedEventsManager63.getEventTime();
        double double67 = combinedEventsManager63.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager69 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean70 = combinedEventsManager69.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator71 = null;
        boolean boolean72 = combinedEventsManager69.evaluateStep(stepInterpolator71);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection73 = combinedEventsManager69.getEventsHandlers();
        double[] doubleArray80 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean81 = combinedEventsManager69.reset(0.0d, doubleArray80);
        combinedEventsManager63.stepAccepted((double) (short) 10, doubleArray80);
        boolean boolean83 = combinedEventsManager60.reset((double) (short) -1, doubleArray80);
        boolean boolean84 = combinedEventsManager52.reset((double) (byte) 0, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            combinedEventsManager0.stepAccepted((double) (byte) -1, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection38);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection73);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = combinedEventsManager0.evaluateStep(stepInterpolator5);
        boolean boolean7 = combinedEventsManager0.stop();
        combinedEventsManager0.clearEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        double double10 = combinedEventsManager0.getEventTime();
        boolean boolean11 = combinedEventsManager0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection2 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        boolean boolean4 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection9 = combinedEventsManager6.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager11.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection14 = combinedEventsManager11.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager16 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean17 = combinedEventsManager16.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection18 = combinedEventsManager16.getEventsStates();
        double[] doubleArray21 = new double[] { 1L };
        boolean boolean22 = combinedEventsManager16.reset((double) (byte) 0, doubleArray21);
        combinedEventsManager11.stepAccepted((double) (byte) 1, doubleArray21);
        combinedEventsManager6.stepAccepted(1.0d, doubleArray21);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = combinedEventsManager6.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager28 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean29 = combinedEventsManager28.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection30 = combinedEventsManager28.getEventsStates();
        double[] doubleArray33 = new double[] { 1L };
        boolean boolean34 = combinedEventsManager28.reset((double) (byte) 0, doubleArray33);
        boolean boolean35 = combinedEventsManager6.reset((double) (byte) 100, doubleArray33);
        boolean boolean36 = combinedEventsManager0.reset((double) (byte) 100, doubleArray33);
        boolean boolean37 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler38 = null;
        combinedEventsManager0.addEventHandler(eventHandler38, (double) (-1), Double.NaN, (int) 'a');
        boolean boolean43 = combinedEventsManager0.isEmpty();
        java.lang.Class<?> wildcardClass44 = combinedEventsManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(eventStateCollection2);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(eventStateCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertNotNull(eventStateCollection14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventStateCollection18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(eventStateCollection30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        boolean boolean3 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection7 = combinedEventsManager5.getEventsStates();
        combinedEventsManager5.clearEventsHandlers();
        boolean boolean9 = combinedEventsManager5.stop();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection13 = combinedEventsManager11.getEventsStates();
        combinedEventsManager11.clearEventsHandlers();
        combinedEventsManager11.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager17 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean18 = combinedEventsManager17.stop();
        boolean boolean19 = combinedEventsManager17.isEmpty();
        double double20 = combinedEventsManager17.getEventTime();
        combinedEventsManager17.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager23 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean24 = combinedEventsManager23.stop();
        double double25 = combinedEventsManager23.getEventTime();
        double double26 = combinedEventsManager23.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection27 = combinedEventsManager23.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager29 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean30 = combinedEventsManager29.stop();
        double double31 = combinedEventsManager29.getEventTime();
        double double32 = combinedEventsManager29.getEventTime();
        boolean boolean33 = combinedEventsManager29.stop();
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean38 = combinedEventsManager29.reset(1.0d, doubleArray37);
        boolean boolean39 = combinedEventsManager23.reset((double) (short) 1, doubleArray37);
        boolean boolean40 = combinedEventsManager17.reset((double) 10L, doubleArray37);
        boolean boolean41 = combinedEventsManager11.reset(0.0d, doubleArray37);
        combinedEventsManager5.stepAccepted(1.0d, doubleArray37);
        combinedEventsManager0.stepAccepted((double) 0, doubleArray37);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection44 = combinedEventsManager0.getEventsStates();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(eventStateCollection7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(eventStateCollection13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(eventStateCollection27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(eventStateCollection44);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection4 = combinedEventsManager0.getEventsHandlers();
        double[] doubleArray10 = new double[] { 0.0f, 100, 100.0f, 10 };
        boolean boolean11 = combinedEventsManager0.reset((double) (byte) 1, doubleArray10);
        boolean boolean12 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager14 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean15 = combinedEventsManager14.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = combinedEventsManager14.evaluateStep(stepInterpolator16);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection18 = combinedEventsManager14.getEventsHandlers();
        double[] doubleArray25 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean26 = combinedEventsManager14.reset(0.0d, doubleArray25);
        combinedEventsManager0.stepAccepted(0.0d, doubleArray25);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection28 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager30 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean31 = combinedEventsManager30.stop();
        double double32 = combinedEventsManager30.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection33 = combinedEventsManager30.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager35 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean36 = combinedEventsManager35.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection37 = combinedEventsManager35.getEventsStates();
        double[] doubleArray40 = new double[] { 1L };
        boolean boolean41 = combinedEventsManager35.reset((double) (byte) 0, doubleArray40);
        boolean boolean42 = combinedEventsManager30.reset((double) (short) -1, doubleArray40);
        boolean boolean43 = combinedEventsManager0.reset((double) (short) 0, doubleArray40);
        combinedEventsManager0.clearEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection45 = combinedEventsManager0.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager47 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean48 = combinedEventsManager47.stop();
        boolean boolean49 = combinedEventsManager47.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection50 = combinedEventsManager47.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager52 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean53 = combinedEventsManager52.stop();
        double double54 = combinedEventsManager52.getEventTime();
        double double55 = combinedEventsManager52.getEventTime();
        double double56 = combinedEventsManager52.getEventTime();
        boolean boolean57 = combinedEventsManager52.stop();
        boolean boolean58 = combinedEventsManager52.stop();
        combinedEventsManager52.clearEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager61 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean62 = combinedEventsManager61.stop();
        double double63 = combinedEventsManager61.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection64 = combinedEventsManager61.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager66 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean67 = combinedEventsManager66.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection68 = combinedEventsManager66.getEventsStates();
        double[] doubleArray71 = new double[] { 1L };
        boolean boolean72 = combinedEventsManager66.reset((double) (byte) 0, doubleArray71);
        boolean boolean73 = combinedEventsManager61.reset((double) (short) -1, doubleArray71);
        combinedEventsManager52.stepAccepted((double) (byte) 0, doubleArray71);
        boolean boolean75 = combinedEventsManager47.reset((double) (short) 0, doubleArray71);
        combinedEventsManager0.stepAccepted((double) 10, doubleArray71);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator77 = null;
        boolean boolean78 = combinedEventsManager0.evaluateStep(stepInterpolator77);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection4);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 100.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(eventStateCollection33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventStateCollection37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(eventStateCollection64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(eventStateCollection68);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = combinedEventsManager0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager5 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean6 = combinedEventsManager5.stop();
        double double7 = combinedEventsManager5.getEventTime();
        double double8 = combinedEventsManager5.getEventTime();
        double double9 = combinedEventsManager5.getEventTime();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager11 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean12 = combinedEventsManager11.stop();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager11.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager11.getEventsHandlers();
        double[] doubleArray22 = new double[] { 1, 10, 100.0d, (byte) 10, 100.0f };
        boolean boolean23 = combinedEventsManager11.reset(0.0d, doubleArray22);
        combinedEventsManager5.stepAccepted((double) (short) 10, doubleArray22);
        combinedEventsManager0.stepAccepted(10.0d, doubleArray22);
        boolean boolean26 = combinedEventsManager0.stop();
        org.apache.commons.math.ode.events.EventHandler eventHandler27 = null;
        combinedEventsManager0.addEventHandler(eventHandler27, (double) (short) 10, (double) 1, 0);
        boolean boolean32 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection33 = combinedEventsManager0.getEventsHandlers();
        combinedEventsManager0.clearEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 10.0, 100.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection33);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        boolean boolean2 = combinedEventsManager0.isEmpty();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection3 = combinedEventsManager0.getEventsStates();
        double double4 = combinedEventsManager0.getEventTime();
        org.apache.commons.math.ode.events.EventHandler eventHandler5 = null;
        combinedEventsManager0.addEventHandler(eventHandler5, (double) 0.0f, (double) (-1.0f), (int) (byte) 1);
        org.apache.commons.math.ode.events.EventHandler eventHandler10 = null;
        combinedEventsManager0.addEventHandler(eventHandler10, (double) ' ', (double) (byte) 0, 0);
        org.apache.commons.math.ode.events.EventHandler eventHandler15 = null;
        combinedEventsManager0.addEventHandler(eventHandler15, (double) (short) 0, (double) (short) -1, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(eventStateCollection3);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        double double4 = combinedEventsManager0.getEventTime();
        boolean boolean5 = combinedEventsManager0.stop();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection6 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection7 = combinedEventsManager0.getEventsHandlers();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection8 = combinedEventsManager0.getEventsStates();
        boolean boolean9 = combinedEventsManager0.stop();
        boolean boolean10 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = combinedEventsManager0.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = combinedEventsManager0.evaluateStep(stepInterpolator13);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection15 = combinedEventsManager0.getEventsHandlers();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection6);
        org.junit.Assert.assertNotNull(eventHandlerCollection7);
        org.junit.Assert.assertNotNull(eventStateCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection15);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager0 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean1 = combinedEventsManager0.stop();
        double double2 = combinedEventsManager0.getEventTime();
        double double3 = combinedEventsManager0.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection4 = combinedEventsManager0.getEventsStates();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager6 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean7 = combinedEventsManager6.stop();
        double double8 = combinedEventsManager6.getEventTime();
        double double9 = combinedEventsManager6.getEventTime();
        boolean boolean10 = combinedEventsManager6.stop();
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 0 };
        boolean boolean15 = combinedEventsManager6.reset(1.0d, doubleArray14);
        boolean boolean16 = combinedEventsManager0.reset((double) (short) 1, doubleArray14);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager18 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean19 = combinedEventsManager18.stop();
        double double20 = combinedEventsManager18.getEventTime();
        double double21 = combinedEventsManager18.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection22 = combinedEventsManager18.getEventsStates();
        double[] doubleArray25 = new double[] { (-1.0f) };
        boolean boolean26 = combinedEventsManager18.reset((double) (short) 100, doubleArray25);
        combinedEventsManager0.stepAccepted((double) 0.0f, doubleArray25);
        org.apache.commons.math.ode.events.EventHandler eventHandler28 = null;
        combinedEventsManager0.addEventHandler(eventHandler28, 0.0d, (double) '4', (int) (byte) 100);
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager34 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        org.apache.commons.math.ode.sampling.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = combinedEventsManager34.evaluateStep(stepInterpolator35);
        java.util.Collection<org.apache.commons.math.ode.events.EventHandler> eventHandlerCollection37 = combinedEventsManager34.getEventsHandlers();
        org.apache.commons.math.ode.events.CombinedEventsManager combinedEventsManager39 = new org.apache.commons.math.ode.events.CombinedEventsManager();
        boolean boolean40 = combinedEventsManager39.stop();
        double double41 = combinedEventsManager39.getEventTime();
        double double42 = combinedEventsManager39.getEventTime();
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection43 = combinedEventsManager39.getEventsStates();
        double[] doubleArray46 = new double[] { (-1.0f) };
        boolean boolean47 = combinedEventsManager39.reset((double) (short) 100, doubleArray46);
        combinedEventsManager34.stepAccepted((double) 10, doubleArray46);
        boolean boolean49 = combinedEventsManager0.reset((double) (-1L), doubleArray46);
        java.util.Collection<org.apache.commons.math.ode.events.EventState> eventStateCollection50 = combinedEventsManager0.getEventsStates();
        double double51 = combinedEventsManager0.getEventTime();
        boolean boolean52 = combinedEventsManager0.isEmpty();
        org.apache.commons.math.ode.events.EventHandler eventHandler53 = null;
        combinedEventsManager0.addEventHandler(eventHandler53, (double) 1, (double) 0, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(eventStateCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(eventStateCollection22);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(eventHandlerCollection37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(eventStateCollection43);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(eventStateCollection50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }
}

