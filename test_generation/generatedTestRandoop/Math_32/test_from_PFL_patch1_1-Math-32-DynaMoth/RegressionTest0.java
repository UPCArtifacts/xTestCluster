import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet1.applyTransform(euclidean2DTransform2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Region.Location location3 = polygonsSet1.checkPoint(euclidean2DVector2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side3 = polygonsSet1.side(euclidean2DHyperplane2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane3 = polygonsSet1.intersection(euclidean2DSubHyperplane2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = polygonsSet1.isEmpty(euclidean2DBSPTree2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet1.getBarycenter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion2 = polygonsSet1.copySelf();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree2);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        java.lang.Class<?> wildcardClass4 = polygonsSet1.getClass();
        org.junit.Assert.assertNotNull(polygonsSet3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        java.lang.Class<?> wildcardClass1 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = polygonsSet1.isEmpty();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet3.getTree(true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = polygonsSet1.isEmpty();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        // The following exception was thrown during execution in test generation
        try {
            double double2 = polygonsSet1.getSize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
        org.junit.Assert.assertNotNull(polygonsSet7);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = polygonsSet3.isEmpty(euclidean2DBSPTree4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = polygonsSet3.getBoundarySize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane2 = polygonsSet0.intersection(euclidean2DSubHyperplane1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        java.lang.Class<?> wildcardClass3 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet1.copySelf();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList2 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList2);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane4 = polygonsSet2.intersection(euclidean2DSubHyperplane3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        java.lang.Class<?> wildcardClass2 = polygonsSet1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        java.lang.Class<?> wildcardClass2 = polygonsSet0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 0.0f, (double) (byte) 100, (double) 0.0f);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet7);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = polygonsSet2.isEmpty();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane15 = euclidean2DAbstractRegion13.intersection(euclidean2DSubHyperplane14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane7 = polygonsSet0.intersection(euclidean2DSubHyperplane6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side32 = polygonsSet30.side(euclidean2DHyperplane31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = polygonsSet1.isEmpty();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane14 = euclidean2DAbstractRegion12.intersection(euclidean2DSubHyperplane13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane9 = polygonsSet0.intersection(euclidean2DSubHyperplane8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane41 = polygonsSet1.intersection(euclidean2DSubHyperplane40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane4 = polygonsSet0.intersection(euclidean2DSubHyperplane3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane41 = polygonsSet39.intersection(euclidean2DSubHyperplane40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side13 = polygonsSet0.side(euclidean2DHyperplane12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side3 = polygonsSet0.side(euclidean2DHyperplane2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet32.getTree(false);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = polygonsSet14.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNull(euclidean2DBSPTree34);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = polygonsSet1.getBoundarySize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        java.lang.Class<?> wildcardClass14 = euclidean2DBSPTree10.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet5.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        boolean boolean22 = euclidean2DAbstractRegion18.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet19);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet4.checkPoint(euclidean2DVector23);
        java.lang.Class<?> wildcardClass25 = location24.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet12.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        boolean boolean29 = euclidean2DAbstractRegion25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet26);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet11.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet4.checkPoint(euclidean2DVector30);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet3.checkPoint(euclidean2DVector30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = polygonsSet3.isEmpty();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        boolean boolean5 = polygonsSet4.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side7 = polygonsSet4.side(euclidean2DHyperplane6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane10 = polygonsSet8.intersection(euclidean2DSubHyperplane9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane16 = polygonsSet0.intersection(euclidean2DSubHyperplane15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        java.lang.Class<?> wildcardClass4 = euclidean2DSubHyperplaneList0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = polygonsSet1.getBoundarySize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet42.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet46.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet42.buildNew(euclidean2DBSPTree57);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = polygonsSet8.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNull(euclidean2DBSPTree44);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(polygonsSet60);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet18.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location23 = polygonsSet18.checkPoint(euclidean2DVector22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = polygonsSet18.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet32.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location37 = polygonsSet32.checkPoint(euclidean2DVector36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet32.getTree(true);
        boolean boolean40 = polygonsSet29.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet28.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet41.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet26.buildNew(euclidean2DBSPTree54);
        boolean boolean59 = polygonsSet14.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side61 = polygonsSet14.side(euclidean2DHyperplane60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + location23 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location23.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + location37 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location37.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        boolean boolean4 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side6 = polygonsSet1.side(euclidean2DHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side9 = polygonsSet0.side(euclidean2DHyperplane8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane32 = polygonsSet29.intersection(euclidean2DSubHyperplane31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet39.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side45 = polygonsSet39.side(euclidean2DHyperplane44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = euclidean2DAbstractRegion14.applyTransform(euclidean2DTransform15);
        java.lang.Class<?> wildcardClass17 = euclidean2DAbstractRegion14.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        double double6 = polygonsSet0.getBoundarySize();
        java.lang.Class<?> wildcardClass7 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = euclidean2DAbstractRegion19.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane24 = polygonsSet20.intersection(euclidean2DSubHyperplane23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane22 = polygonsSet20.intersection(euclidean2DSubHyperplane21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet30.copySelf();
        java.lang.Class<?> wildcardClass33 = polygonsSet30.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        double double40 = polygonsSet1.getSize();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane5 = polygonsSet0.intersection(euclidean2DSubHyperplane4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet44.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        boolean boolean61 = euclidean2DAbstractRegion57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet58);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet43.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion38.checkPoint(euclidean2DVector62);
        java.lang.Class<?> wildcardClass65 = euclidean2DAbstractRegion38.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side6 = polygonsSet0.side(euclidean2DHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side6 = euclidean2DAbstractRegion4.side(euclidean2DHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane15 = euclidean2DAbstractRegion12.intersection(euclidean2DSubHyperplane14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet3.applyTransform(euclidean2DTransform4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet33.applyTransform(euclidean2DTransform45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        boolean boolean63 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        boolean boolean64 = polygonsSet31.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean65 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane67 = polygonsSet33.intersection(euclidean2DSubHyperplane66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        // The following exception was thrown during execution in test generation
        try {
            double double2 = polygonsSet1.getBoundarySize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        double double21 = euclidean2DAbstractRegion20.getBoundarySize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet4.applyTransform(euclidean2DTransform5);
        java.lang.Class<?> wildcardClass7 = euclidean2DAbstractRegion6.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane52 = polygonsSet50.intersection(euclidean2DSubHyperplane51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane11 = euclidean2DAbstractRegion9.intersection(euclidean2DSubHyperplane10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneCollection0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DSubHyperplaneCollection0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        boolean boolean5 = polygonsSet4.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet4.applyTransform(euclidean2DTransform6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        java.lang.Class<?> wildcardClass32 = polygonsSet30.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        boolean boolean81 = polygonsSet80.isEmpty();
        boolean boolean82 = polygonsSet40.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side84 = polygonsSet80.side(euclidean2DHyperplane83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet8.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        boolean boolean25 = euclidean2DAbstractRegion21.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet7.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet0.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side30 = polygonsSet0.side(euclidean2DHyperplane29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane47 = polygonsSet45.intersection(euclidean2DSubHyperplane46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet1.applyTransform(euclidean2DTransform20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        java.lang.Class<?> wildcardClass5 = polygonsSet0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet17.getVertices();
        java.lang.Class<?> wildcardClass20 = vector2DArray19.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        java.lang.Class<?> wildcardClass21 = polygonsSet19.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        java.lang.Class<?> wildcardClass10 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = polygonsSet2.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet5.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet5.getBarycenter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet2.checkPoint(euclidean2DVector9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNull(euclidean2DBSPTree4);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.lang.Class<?> wildcardClass4 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane6 = polygonsSet0.intersection(euclidean2DSubHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side51 = polygonsSet0.side(euclidean2DHyperplane50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet39.checkPoint(euclidean2DVector42);
        java.lang.Class<?> wildcardClass44 = location43.getClass();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        double double5 = polygonsSet0.getBoundarySize();
        java.lang.Class<?> wildcardClass6 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = euclidean2DAbstractRegion14.applyTransform(euclidean2DTransform15);
        double double17 = euclidean2DAbstractRegion14.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = euclidean2DAbstractRegion14.isEmpty(euclidean2DBSPTree18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        java.lang.Class<?> wildcardClass7 = vector2DArray6.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        java.lang.Class<?> wildcardClass29 = euclidean2DBSPTree27.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet8.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        boolean boolean25 = euclidean2DAbstractRegion21.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet7.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet0.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane30 = polygonsSet0.intersection(euclidean2DSubHyperplane29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet1.getVertices();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet1.getBarycenter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = polygonsSet2.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNull(euclidean2DBSPTree4);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.lang.Class<?> wildcardClass4 = euclidean2DBSPTree3.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        java.lang.Class<?> wildcardClass51 = euclidean2DVector50.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane6 = polygonsSet4.intersection(euclidean2DSubHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        java.lang.Class<?> wildcardClass41 = polygonsSet1.getClass();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        boolean boolean15 = polygonsSet4.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet3.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet16.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet16.getTree(true);
        boolean boolean20 = polygonsSet1.isEmpty(euclidean2DBSPTree19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet1.copySelf();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        double double71 = polygonsSet69.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet72.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet72.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = polygonsSet72.getTree(true);
        boolean boolean80 = polygonsSet69.isEmpty(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        boolean boolean82 = polygonsSet68.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet81.getTree(false);
        boolean boolean85 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean87 = polygonsSet86.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform88 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion89 = polygonsSet86.applyTransform(euclidean2DTransform88);
        double double90 = euclidean2DAbstractRegion89.getBoundarySize();
        boolean boolean91 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion89);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side93 = euclidean2DAbstractRegion89.side(euclidean2DHyperplane92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray37 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side39 = polygonsSet0.side(euclidean2DHyperplane38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(vector2DArray37);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side27 = polygonsSet20.side(euclidean2DHyperplane26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet20.applyTransform(euclidean2DTransform68);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane71 = polygonsSet20.intersection(euclidean2DSubHyperplane70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet0.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane17 = euclidean2DAbstractRegion15.intersection(euclidean2DSubHyperplane16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side23 = polygonsSet1.side(euclidean2DHyperplane22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNull(euclidean2DBSPTree21);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        double double5 = polygonsSet0.getSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side8 = polygonsSet0.side(euclidean2DHyperplane7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet40.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray74 = polygonsSet40.getVertices();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side76 = polygonsSet40.side(euclidean2DHyperplane75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray74);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        boolean boolean50 = polygonsSet20.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet5.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        boolean boolean22 = euclidean2DAbstractRegion18.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet19);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet4.checkPoint(euclidean2DVector23);
        double double25 = polygonsSet4.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.0d + "'", double25 == 2.0d);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        boolean boolean15 = polygonsSet4.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet3.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet16.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet16.getTree(true);
        boolean boolean20 = polygonsSet1.isEmpty(euclidean2DBSPTree19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet1.getBarycenter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet19.getVertices();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane23 = polygonsSet19.intersection(euclidean2DSubHyperplane22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(vector2DArray21);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        boolean boolean43 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray44 = polygonsSet0.getVertices();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(vector2DArray44);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        boolean boolean39 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion38);
        double double40 = polygonsSet33.getBoundarySize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        java.lang.Class<?> wildcardClass4 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        boolean boolean14 = polygonsSet0.isEmpty();
        java.lang.Class<?> wildcardClass15 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet33.applyTransform(euclidean2DTransform45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        boolean boolean63 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        boolean boolean64 = polygonsSet31.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean65 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet29.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = euclidean2DAbstractRegion66.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane16 = euclidean2DAbstractRegion14.intersection(euclidean2DSubHyperplane15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet44.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        boolean boolean61 = euclidean2DAbstractRegion57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet58);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet43.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion38.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side66 = euclidean2DAbstractRegion38.side(euclidean2DHyperplane65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        double double10 = euclidean2DAbstractRegion9.getSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = polygonsSet2.getTree(false);
        java.lang.Class<?> wildcardClass5 = polygonsSet2.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNull(euclidean2DBSPTree4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = euclidean2DAbstractRegion14.applyTransform(euclidean2DTransform15);
        double double17 = euclidean2DAbstractRegion14.getSize();
        java.lang.Class<?> wildcardClass18 = euclidean2DAbstractRegion14.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane34 = polygonsSet30.intersection(euclidean2DSubHyperplane33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        java.lang.Class<?> wildcardClass5 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(euclidean2DBSPTree2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet12.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        boolean boolean29 = euclidean2DAbstractRegion25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet26);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet11.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet4.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet1.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet44.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        double double62 = polygonsSet60.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet63.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = polygonsSet63.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet63.getTree(true);
        boolean boolean71 = polygonsSet60.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet59.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet57.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet42.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet1.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side77 = polygonsSet1.side(euclidean2DHyperplane76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(polygonsSet75);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DRegion15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = polygonsSet0.contains(euclidean2DRegion15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane20 = polygonsSet17.intersection(euclidean2DSubHyperplane19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane7 = polygonsSet5.intersection(euclidean2DSubHyperplane6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet3.copySelf();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet19.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        boolean boolean36 = euclidean2DAbstractRegion32.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = euclidean2DAbstractRegion32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet14.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side40 = polygonsSet14.side(euclidean2DHyperplane39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        double double6 = polygonsSet0.getBoundarySize();
        double double7 = polygonsSet0.getBoundarySize();
        double double8 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane10 = polygonsSet0.intersection(euclidean2DSubHyperplane9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 100, 2.0d, (double) 100L, (double) (-1L));
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side6 = polygonsSet4.side(euclidean2DHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet9.applyTransform(euclidean2DTransform12);
        boolean boolean14 = polygonsSet8.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion13);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray15 = polygonsSet8.getVertices();
        java.lang.Class<?> wildcardClass16 = polygonsSet8.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(vector2DArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        double double71 = polygonsSet69.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet72.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet72.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = polygonsSet72.getTree(true);
        boolean boolean80 = polygonsSet69.isEmpty(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        boolean boolean82 = polygonsSet68.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet81.getTree(false);
        boolean boolean85 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray86 = polygonsSet81.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(vector2DArray86);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform10 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion11 = polygonsSet0.applyTransform(euclidean2DTransform10);
        boolean boolean12 = euclidean2DAbstractRegion11.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet33.applyTransform(euclidean2DTransform45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        boolean boolean63 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        boolean boolean64 = polygonsSet31.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean65 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side67 = polygonsSet33.side(euclidean2DHyperplane66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet40.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet40.getBarycenter();
        boolean boolean45 = polygonsSet39.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet46.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet46.checkPoint(euclidean2DVector50);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray52 = polygonsSet46.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = polygonsSet53.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList57 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform62 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion63 = polygonsSet59.applyTransform(euclidean2DTransform62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector82 = polygonsSet81.getBarycenter();
        double double83 = polygonsSet81.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree85 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet84.buildNew(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector88 = polygonsSet87.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location89 = polygonsSet84.checkPoint(euclidean2DVector88);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree91 = polygonsSet84.getTree(true);
        boolean boolean92 = polygonsSet81.isEmpty(euclidean2DBSPTree91);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet93 = polygonsSet80.buildNew(euclidean2DBSPTree91);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = polygonsSet78.buildNew(euclidean2DBSPTree91);
        boolean boolean95 = polygonsSet59.isEmpty(euclidean2DBSPTree91);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet96 = polygonsSet58.buildNew(euclidean2DBSPTree91);
        boolean boolean97 = polygonsSet53.isEmpty(euclidean2DBSPTree91);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet98 = polygonsSet46.buildNew(euclidean2DBSPTree91);
        boolean boolean99 = polygonsSet40.isEmpty(euclidean2DBSPTree91);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree56);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertNotNull(euclidean2DVector88);
        org.junit.Assert.assertTrue("'" + location89 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location89.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(polygonsSet93);
        org.junit.Assert.assertNotNull(polygonsSet94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(polygonsSet96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(polygonsSet98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side86 = polygonsSet84.side(euclidean2DHyperplane85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet40.copySelf();
        boolean boolean70 = euclidean2DAbstractRegion69.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet31.getTree(false);
        boolean boolean35 = polygonsSet30.isEmpty(euclidean2DBSPTree34);
        double double36 = polygonsSet30.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet30.applyTransform(euclidean2DTransform37);
        double double39 = polygonsSet30.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet51.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList55 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform60 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = polygonsSet57.applyTransform(euclidean2DTransform60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        double double66 = polygonsSet64.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet67.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location72 = polygonsSet67.checkPoint(euclidean2DVector71);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet67.getTree(true);
        boolean boolean75 = polygonsSet64.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet63.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        double double81 = polygonsSet79.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet82.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = polygonsSet85.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location87 = polygonsSet82.checkPoint(euclidean2DVector86);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = polygonsSet82.getTree(true);
        boolean boolean90 = polygonsSet79.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet78.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet76.buildNew(euclidean2DBSPTree89);
        boolean boolean93 = polygonsSet57.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = polygonsSet56.buildNew(euclidean2DBSPTree89);
        boolean boolean95 = polygonsSet51.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet96 = polygonsSet20.buildNew(euclidean2DBSPTree89);
        java.lang.Class<?> wildcardClass97 = polygonsSet96.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + location72 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location72.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
        org.junit.Assert.assertTrue("'" + location87 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location87.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(polygonsSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(polygonsSet94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(polygonsSet96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion31 = polygonsSet29.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = polygonsSet29.isEmpty(euclidean2DBSPTree32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion31);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        double double21 = euclidean2DAbstractRegion20.getSize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform10 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion11 = polygonsSet0.applyTransform(euclidean2DTransform10);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side13 = euclidean2DAbstractRegion11.side(euclidean2DHyperplane12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion11);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = euclidean2DAbstractRegion13.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        boolean boolean15 = polygonsSet4.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet3.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet16.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet16.getTree(true);
        boolean boolean20 = polygonsSet1.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 100, 2.0d, (double) 100L, (double) (-1L));
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet27.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet27.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet45.copySelf();
        boolean boolean47 = euclidean2DAbstractRegion46.isEmpty();
        boolean boolean48 = polygonsSet25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion46);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform40 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet39.applyTransform(euclidean2DTransform40);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = euclidean2DAbstractRegion41.copySelf();
        java.lang.Class<?> wildcardClass43 = euclidean2DAbstractRegion41.getClass();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        boolean boolean4 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet1.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet21.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        double double45 = polygonsSet43.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet46.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet46.checkPoint(euclidean2DVector50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = polygonsSet46.getTree(true);
        boolean boolean54 = polygonsSet43.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet42.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet40.buildNew(euclidean2DBSPTree53);
        boolean boolean57 = polygonsSet21.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform58 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = polygonsSet21.applyTransform(euclidean2DTransform58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        double double67 = polygonsSet65.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = polygonsSet68.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet71.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet68.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = polygonsSet68.getTree(true);
        boolean boolean76 = polygonsSet65.isEmpty(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform77 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion78 = polygonsSet65.applyTransform(euclidean2DTransform77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        double double81 = polygonsSet79.getSize();
        boolean boolean82 = euclidean2DAbstractRegion78.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet79);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector83 = polygonsSet79.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location84 = polygonsSet64.checkPoint(euclidean2DVector83);
        org.apache.commons.math3.geometry.partitioning.Region.Location location85 = euclidean2DAbstractRegion59.checkPoint(euclidean2DVector83);
        org.apache.commons.math3.geometry.partitioning.Region.Location location86 = polygonsSet1.checkPoint(euclidean2DVector83);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet70);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion78);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector83);
        org.junit.Assert.assertTrue("'" + location84 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location84.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location85 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location85.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location86 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location86.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet40.copySelf();
        double double70 = polygonsSet40.getBoundarySize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        double double23 = polygonsSet21.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        boolean boolean32 = polygonsSet21.isEmpty(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform33 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion34 = polygonsSet21.applyTransform(euclidean2DTransform33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        boolean boolean38 = euclidean2DAbstractRegion34.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet35);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet19.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = euclidean2DAbstractRegion4.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane43 = euclidean2DAbstractRegion4.intersection(euclidean2DSubHyperplane42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side8 = polygonsSet0.side(euclidean2DHyperplane7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(vector2DArray6);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        double double5 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet0.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DBSPTree2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet5.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        boolean boolean22 = euclidean2DAbstractRegion18.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet31.buildNew(euclidean2DBSPTree59);
        boolean boolean64 = polygonsSet19.isEmpty(euclidean2DBSPTree59);
        boolean boolean65 = euclidean2DAbstractRegion4.isEmpty(euclidean2DBSPTree59);
        boolean boolean66 = euclidean2DAbstractRegion4.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet19.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        boolean boolean36 = euclidean2DAbstractRegion32.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = euclidean2DAbstractRegion32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet14.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet14.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree40);
        java.lang.Class<?> wildcardClass42 = polygonsSet41.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        boolean boolean21 = euclidean2DAbstractRegion20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side23 = euclidean2DAbstractRegion20.side(euclidean2DHyperplane22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet0.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet40.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray74 = polygonsSet40.getVertices();
        double double75 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = polygonsSet40.getTree(true);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree77);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray5 = polygonsSet4.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean7 = polygonsSet6.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet6.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet10.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList14 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform19 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet16.applyTransform(euclidean2DTransform19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        boolean boolean34 = polygonsSet23.isEmpty(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet22.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        double double40 = polygonsSet38.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet41.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location46 = polygonsSet41.checkPoint(euclidean2DVector45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet41.getTree(true);
        boolean boolean49 = polygonsSet38.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet37.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet35.buildNew(euclidean2DBSPTree48);
        boolean boolean52 = polygonsSet16.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet15.buildNew(euclidean2DBSPTree48);
        boolean boolean54 = polygonsSet10.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet6.buildNew(euclidean2DBSPTree48);
        boolean boolean56 = polygonsSet4.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray58 = polygonsSet57.getVertices();
        org.junit.Assert.assertNotNull(vector2DArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + location46 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location46.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(vector2DArray58);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side7 = polygonsSet5.side(euclidean2DHyperplane6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet4.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = euclidean2DAbstractRegion6.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane9 = euclidean2DAbstractRegion7.intersection(euclidean2DSubHyperplane8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean65 = polygonsSet64.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet64.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet30.buildNew(euclidean2DBSPTree67);
        java.lang.Class<?> wildcardClass69 = polygonsSet30.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet5.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        boolean boolean22 = euclidean2DAbstractRegion18.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet31.buildNew(euclidean2DBSPTree59);
        boolean boolean64 = polygonsSet19.isEmpty(euclidean2DBSPTree59);
        boolean boolean65 = euclidean2DAbstractRegion4.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = euclidean2DAbstractRegion4.getTree(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet0.buildNew(euclidean2DBSPTree61);
        java.lang.Class<?> wildcardClass66 = euclidean2DBSPTree61.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.copySelf();
        boolean boolean7 = euclidean2DAbstractRegion6.isEmpty();
        java.lang.Class<?> wildcardClass8 = euclidean2DAbstractRegion6.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        double double6 = polygonsSet5.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side8 = polygonsSet5.side(euclidean2DHyperplane7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet16.applyTransform(euclidean2DTransform28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        boolean boolean33 = euclidean2DAbstractRegion29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet30);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet14.checkPoint(euclidean2DVector34);
        java.lang.Class<?> wildcardClass36 = polygonsSet14.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet12.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet18.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet31.buildNew(euclidean2DBSPTree44);
        double double48 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion49 = polygonsSet47.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean51 = polygonsSet50.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet50.applyTransform(euclidean2DTransform52);
        double double54 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet56.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        double double63 = polygonsSet61.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet64.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location69 = polygonsSet64.checkPoint(euclidean2DVector68);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet64.getTree(true);
        boolean boolean72 = polygonsSet61.isEmpty(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet60.buildNew(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet56.buildNew(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = polygonsSet75.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet50.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = polygonsSet50.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet47.buildNew(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree80);
        boolean boolean83 = polygonsSet12.isEmpty(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray84 = polygonsSet12.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree58);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + location69 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location69.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree77);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree80);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(vector2DArray84);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion31 = polygonsSet29.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet32.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList36 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform41 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = polygonsSet38.applyTransform(euclidean2DTransform41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet44.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        double double62 = polygonsSet60.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet63.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = polygonsSet63.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet63.getTree(true);
        boolean boolean71 = polygonsSet60.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet59.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet57.buildNew(euclidean2DBSPTree70);
        boolean boolean74 = polygonsSet38.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet37.buildNew(euclidean2DBSPTree70);
        boolean boolean76 = polygonsSet32.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet29.buildNew(euclidean2DBSPTree70);
        java.lang.Class<?> wildcardClass79 = polygonsSet78.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        boolean boolean13 = euclidean2DAbstractRegion12.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet16.applyTransform(euclidean2DTransform28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        boolean boolean33 = euclidean2DAbstractRegion29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet30);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet14.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane38 = polygonsSet14.intersection(euclidean2DSubHyperplane37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector36);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet12.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        boolean boolean29 = euclidean2DAbstractRegion25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet26);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet11.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet4.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet1.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet44.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        double double62 = polygonsSet60.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet63.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = polygonsSet63.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet63.getTree(true);
        boolean boolean71 = polygonsSet60.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet59.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet57.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet42.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet1.buildNew(euclidean2DBSPTree70);
        java.lang.Class<?> wildcardClass76 = polygonsSet1.getClass();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray37 = polygonsSet0.getVertices();
        double double38 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane40 = polygonsSet0.intersection(euclidean2DSubHyperplane39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(vector2DArray37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet30.getBarycenter();
        double double33 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion34 = polygonsSet30.copySelf();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side36 = euclidean2DAbstractRegion34.side(euclidean2DHyperplane35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion34);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        double double71 = polygonsSet69.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet72.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet72.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = polygonsSet72.getTree(true);
        boolean boolean80 = polygonsSet69.isEmpty(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        boolean boolean82 = polygonsSet68.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet81.getTree(false);
        boolean boolean85 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean87 = polygonsSet86.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform88 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion89 = polygonsSet86.applyTransform(euclidean2DTransform88);
        double double90 = euclidean2DAbstractRegion89.getBoundarySize();
        boolean boolean91 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion89);
        org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DRegion92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = polygonsSet30.contains(euclidean2DRegion92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet40.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion74 = polygonsSet40.copySelf();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side76 = euclidean2DAbstractRegion74.side(euclidean2DHyperplane75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion74);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet51.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList55 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform60 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = polygonsSet57.applyTransform(euclidean2DTransform60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        double double66 = polygonsSet64.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet67.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location72 = polygonsSet67.checkPoint(euclidean2DVector71);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet67.getTree(true);
        boolean boolean75 = polygonsSet64.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet63.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        double double81 = polygonsSet79.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet82.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = polygonsSet85.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location87 = polygonsSet82.checkPoint(euclidean2DVector86);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = polygonsSet82.getTree(true);
        boolean boolean90 = polygonsSet79.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet78.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet76.buildNew(euclidean2DBSPTree89);
        boolean boolean93 = polygonsSet57.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = polygonsSet56.buildNew(euclidean2DBSPTree89);
        boolean boolean95 = polygonsSet51.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet96 = polygonsSet20.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector97 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side99 = polygonsSet20.side(euclidean2DHyperplane98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + location72 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location72.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
        org.junit.Assert.assertTrue("'" + location87 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location87.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(polygonsSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(polygonsSet94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(polygonsSet96);
        org.junit.Assert.assertNotNull(euclidean2DVector97);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side69 = polygonsSet67.side(euclidean2DHyperplane68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet7.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList11 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform16 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet13.applyTransform(euclidean2DTransform16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet32.buildNew(euclidean2DBSPTree45);
        boolean boolean49 = polygonsSet13.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet12.buildNew(euclidean2DBSPTree45);
        boolean boolean51 = polygonsSet7.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet52.copySelf();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        boolean boolean4 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet1.buildNew(euclidean2DBSPTree17);
        java.lang.Class<?> wildcardClass21 = polygonsSet1.getClass();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet40.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side75 = polygonsSet40.side(euclidean2DHyperplane74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet12.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane18 = polygonsSet12.intersection(euclidean2DSubHyperplane17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        java.lang.Class<?> wildcardClass4 = polygonsSet3.getClass();
        org.junit.Assert.assertNotNull(polygonsSet3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane4 = polygonsSet0.intersection(euclidean2DSubHyperplane3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet40.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray74 = polygonsSet40.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet75.buildNew(euclidean2DBSPTree76);
        double double78 = polygonsSet75.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray79 = polygonsSet75.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform80 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion81 = polygonsSet75.applyTransform(euclidean2DTransform80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = euclidean2DAbstractRegion81.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = polygonsSet85.getBarycenter();
        double double87 = polygonsSet85.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet88 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = polygonsSet88.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector92 = polygonsSet91.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location93 = polygonsSet88.checkPoint(euclidean2DVector92);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree95 = polygonsSet88.getTree(true);
        boolean boolean96 = polygonsSet85.isEmpty(euclidean2DBSPTree95);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet97 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree95);
        boolean boolean98 = polygonsSet40.isEmpty(euclidean2DBSPTree95);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion99 = polygonsSet40.copySelf();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray74);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray79);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion81);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet90);
        org.junit.Assert.assertNotNull(euclidean2DVector92);
        org.junit.Assert.assertTrue("'" + location93 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location93.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion99);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        boolean boolean85 = polygonsSet40.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        double double6 = polygonsSet0.getBoundarySize();
        double double7 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet0.getTree(false);
        java.lang.Class<?> wildcardClass10 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet12.checkPoint(euclidean2DVector15);
        java.lang.Class<?> wildcardClass17 = euclidean2DVector15.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        double double6 = polygonsSet0.getBoundarySize();
        boolean boolean7 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane9 = polygonsSet0.intersection(euclidean2DSubHyperplane8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet0.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane69 = polygonsSet0.intersection(euclidean2DSubHyperplane68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet5.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        boolean boolean22 = euclidean2DAbstractRegion18.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet31.buildNew(euclidean2DBSPTree59);
        boolean boolean64 = polygonsSet19.isEmpty(euclidean2DBSPTree59);
        boolean boolean65 = euclidean2DAbstractRegion4.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side67 = euclidean2DAbstractRegion4.side(euclidean2DHyperplane66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet0.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane67 = polygonsSet0.intersection(euclidean2DSubHyperplane66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        java.lang.Class<?> wildcardClass25 = polygonsSet20.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet31.getTree(false);
        boolean boolean35 = polygonsSet30.isEmpty(euclidean2DBSPTree34);
        double double36 = polygonsSet30.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet30.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DRegion39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = euclidean2DAbstractRegion38.contains(euclidean2DRegion39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side5 = polygonsSet3.side(euclidean2DHyperplane4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        boolean boolean43 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane46 = polygonsSet0.intersection(euclidean2DSubHyperplane45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side8 = polygonsSet0.side(euclidean2DHyperplane7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = polygonsSet2.getTree(false);
        // The following exception was thrown during execution in test generation
        try {
            double double5 = polygonsSet2.getSize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNull(euclidean2DBSPTree4);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion13.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform15);
        double double17 = euclidean2DAbstractRegion16.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        double double15 = polygonsSet14.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = polygonsSet1.isEmpty();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane11 = polygonsSet0.intersection(euclidean2DSubHyperplane10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet12.applyTransform(euclidean2DTransform15);
        boolean boolean17 = polygonsSet11.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion16);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet11.getBarycenter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet2.checkPoint(euclidean2DVector18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray2 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side5 = polygonsSet0.side(euclidean2DHyperplane4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(vector2DArray2);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet0.getBarycenter();
        java.lang.Class<?> wildcardClass6 = euclidean2DVector5.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        double double50 = polygonsSet49.getSize();
        boolean boolean51 = polygonsSet49.isEmpty();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane53 = polygonsSet49.intersection(euclidean2DSubHyperplane52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = euclidean2DAbstractRegion6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = euclidean2DAbstractRegion6.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side13 = polygonsSet11.side(euclidean2DHyperplane12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform32 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet30.applyTransform(euclidean2DTransform32);
        boolean boolean34 = euclidean2DAbstractRegion33.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree86 = polygonsSet84.getTree(false);
        java.lang.Class<?> wildcardClass87 = euclidean2DBSPTree86.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean65 = polygonsSet64.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet64.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet30.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet68.copySelf();
        boolean boolean70 = polygonsSet68.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray3 = polygonsSet1.getVertices();
        boolean boolean4 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet1.getTree(false);
        java.lang.Class<?> wildcardClass7 = euclidean2DBSPTree6.getClass();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet12.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet18.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet31.buildNew(euclidean2DBSPTree44);
        double double48 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion49 = polygonsSet47.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean51 = polygonsSet50.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet50.applyTransform(euclidean2DTransform52);
        double double54 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet56.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        double double63 = polygonsSet61.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet64.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location69 = polygonsSet64.checkPoint(euclidean2DVector68);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet64.getTree(true);
        boolean boolean72 = polygonsSet61.isEmpty(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet60.buildNew(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet56.buildNew(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = polygonsSet75.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet50.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = polygonsSet50.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet47.buildNew(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree80);
        boolean boolean83 = polygonsSet12.isEmpty(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion84 = polygonsSet12.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree58);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + location69 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location69.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree77);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree80);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion84);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = euclidean2DAbstractRegion4.copySelf();
        java.lang.Class<?> wildcardClass8 = euclidean2DAbstractRegion4.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet28.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = null;
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = euclidean2DAbstractRegion29.checkPoint(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray8 = polygonsSet7.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean10 = polygonsSet9.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform11 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet9.applyTransform(euclidean2DTransform11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet13.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList17 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet19.applyTransform(euclidean2DTransform22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet38.buildNew(euclidean2DBSPTree51);
        boolean boolean55 = polygonsSet19.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet18.buildNew(euclidean2DBSPTree51);
        boolean boolean57 = polygonsSet13.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet9.buildNew(euclidean2DBSPTree51);
        boolean boolean59 = polygonsSet7.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet0.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane64 = polygonsSet62.intersection(euclidean2DSubHyperplane63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertNotNull(vector2DArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 'a', (double) (short) 10, (double) 1L, 0.0d);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.copySelf();
        double double7 = polygonsSet0.getSize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean51 = polygonsSet50.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet50.applyTransform(euclidean2DTransform52);
        double double54 = polygonsSet50.getBoundarySize();
        boolean boolean55 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet50);
        double double56 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet20.getBarycenter();
        double double58 = polygonsSet20.getSize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet1.getBarycenter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 0.0f, (double) (byte) 100, (double) 0.0f);
        boolean boolean5 = polygonsSet4.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet7.buildNew(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        boolean boolean34 = polygonsSet23.isEmpty(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet22.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet20.buildNew(euclidean2DBSPTree33);
        double double37 = polygonsSet36.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        double double42 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        boolean boolean51 = polygonsSet40.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet39.buildNew(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        double double57 = polygonsSet55.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet58.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet58.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = polygonsSet58.getTree(true);
        boolean boolean66 = polygonsSet55.isEmpty(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet54.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet52.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet36.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean71 = polygonsSet70.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet70.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet36.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree73);
        boolean boolean76 = polygonsSet4.isEmpty(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet30.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean34 = polygonsSet33.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform35 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet33.applyTransform(euclidean2DTransform35);
        double double37 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet39.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet39.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet58.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet33.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet33.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet30.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side66 = polygonsSet64.side(euclidean2DHyperplane65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertNotNull(polygonsSet64);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet40.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray74 = polygonsSet40.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet75.buildNew(euclidean2DBSPTree76);
        double double78 = polygonsSet75.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray79 = polygonsSet75.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform80 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion81 = polygonsSet75.applyTransform(euclidean2DTransform80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = euclidean2DAbstractRegion81.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = polygonsSet85.getBarycenter();
        double double87 = polygonsSet85.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet88 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = polygonsSet88.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector92 = polygonsSet91.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location93 = polygonsSet88.checkPoint(euclidean2DVector92);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree95 = polygonsSet88.getTree(true);
        boolean boolean96 = polygonsSet85.isEmpty(euclidean2DBSPTree95);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet97 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree95);
        boolean boolean98 = polygonsSet40.isEmpty(euclidean2DBSPTree95);
        java.lang.Class<?> wildcardClass99 = euclidean2DBSPTree95.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray74);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray79);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion81);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet90);
        org.junit.Assert.assertNotNull(euclidean2DVector92);
        org.junit.Assert.assertTrue("'" + location93 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location93.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet12.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        boolean boolean29 = euclidean2DAbstractRegion25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet26);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet11.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet4.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet1.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet44.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        double double62 = polygonsSet60.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet63.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = polygonsSet63.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet63.getTree(true);
        boolean boolean71 = polygonsSet60.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet59.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet57.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet42.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet1.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray76 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane78 = polygonsSet1.intersection(euclidean2DSubHyperplane77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(vector2DArray76);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = euclidean2DAbstractRegion19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = euclidean2DAbstractRegion19.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        double double27 = polygonsSet25.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet28.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet28.checkPoint(euclidean2DVector32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet28.getTree(true);
        boolean boolean36 = polygonsSet25.isEmpty(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet25.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion39 = polygonsSet25.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        double double44 = polygonsSet42.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet45.checkPoint(euclidean2DVector49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = polygonsSet45.getTree(true);
        boolean boolean53 = polygonsSet42.isEmpty(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet41.buildNew(euclidean2DBSPTree52);
        boolean boolean55 = polygonsSet25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet54);
        boolean boolean56 = polygonsSet23.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet25);
        boolean boolean57 = euclidean2DAbstractRegion19.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion39);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet67.applyTransform(euclidean2DTransform68);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side71 = euclidean2DAbstractRegion69.side(euclidean2DHyperplane70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet20.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet64.getTree(false);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean65 = polygonsSet64.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet64.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet30.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        double double72 = polygonsSet70.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet73.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector77 = polygonsSet76.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location78 = polygonsSet73.checkPoint(euclidean2DVector77);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = polygonsSet73.getTree(true);
        boolean boolean81 = polygonsSet70.isEmpty(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform82 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion83 = polygonsSet70.applyTransform(euclidean2DTransform82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector85 = polygonsSet84.getBarycenter();
        double double86 = polygonsSet84.getSize();
        boolean boolean87 = euclidean2DAbstractRegion83.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet84);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform88 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion89 = euclidean2DAbstractRegion83.applyTransform(euclidean2DTransform88);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector90 = euclidean2DAbstractRegion89.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location91 = polygonsSet69.checkPoint(euclidean2DVector90);
        double double92 = polygonsSet69.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(euclidean2DVector77);
        org.junit.Assert.assertTrue("'" + location78 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location78.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion83);
        org.junit.Assert.assertNotNull(euclidean2DVector85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion89);
        org.junit.Assert.assertNotNull(euclidean2DVector90);
        org.junit.Assert.assertTrue("'" + location91 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location91.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet12.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet18.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet31.buildNew(euclidean2DBSPTree44);
        double double48 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = polygonsSet47.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet12.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray82 = polygonsSet81.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet81.getTree(false);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertNotNull(polygonsSet80);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(vector2DArray82);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '4', (double) 100, (double) (byte) -1, (double) 0L);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        boolean boolean25 = polygonsSet24.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet24.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        boolean boolean42 = polygonsSet31.isEmpty(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet30.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        double double48 = polygonsSet46.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet49.buildNew(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location54 = polygonsSet49.checkPoint(euclidean2DVector53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = polygonsSet49.getTree(true);
        boolean boolean57 = polygonsSet46.isEmpty(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet45.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet43.buildNew(euclidean2DBSPTree56);
        double double60 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = polygonsSet59.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean63 = polygonsSet62.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform64 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion65 = polygonsSet62.applyTransform(euclidean2DTransform64);
        double double66 = polygonsSet62.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        double double75 = polygonsSet73.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet76.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location81 = polygonsSet76.checkPoint(euclidean2DVector80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet76.getTree(true);
        boolean boolean84 = polygonsSet73.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet72.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet68.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = polygonsSet87.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = polygonsSet62.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree92 = polygonsSet62.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet93 = polygonsSet59.buildNew(euclidean2DBSPTree92);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree92);
        boolean boolean95 = polygonsSet24.isEmpty(euclidean2DBSPTree92);
        boolean boolean96 = polygonsSet11.isEmpty(euclidean2DBSPTree92);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet97 = polygonsSet0.buildNew(euclidean2DBSPTree92);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + location54 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location54.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree70);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + location81 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location81.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree89);
        org.junit.Assert.assertNotNull(polygonsSet90);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree92);
        org.junit.Assert.assertNotNull(polygonsSet93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(polygonsSet97);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        boolean boolean39 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion38);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform40 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = euclidean2DAbstractRegion38.applyTransform(euclidean2DTransform40);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane43 = euclidean2DAbstractRegion41.intersection(euclidean2DSubHyperplane42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList32 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet53.buildNew(euclidean2DBSPTree66);
        boolean boolean70 = polygonsSet34.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet33.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion73 = polygonsSet72.copySelf();
        boolean boolean74 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet72);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet72.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane78 = polygonsSet72.intersection(euclidean2DSubHyperplane77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane69 = polygonsSet20.intersection(euclidean2DSubHyperplane68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        java.lang.Class<?> wildcardClass6 = polygonsSet5.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        double double75 = polygonsSet73.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet76.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location81 = polygonsSet76.checkPoint(euclidean2DVector80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet76.getTree(true);
        boolean boolean84 = polygonsSet73.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform85 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = polygonsSet73.applyTransform(euclidean2DTransform85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector88 = polygonsSet87.getBarycenter();
        double double89 = polygonsSet87.getSize();
        boolean boolean90 = euclidean2DAbstractRegion86.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet87);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector91 = polygonsSet87.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location92 = polygonsSet72.checkPoint(euclidean2DVector91);
        org.apache.commons.math3.geometry.partitioning.Region.Location location93 = polygonsSet67.checkPoint(euclidean2DVector91);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + location81 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location81.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
        org.junit.Assert.assertNotNull(euclidean2DVector88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector91);
        org.junit.Assert.assertTrue("'" + location92 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location92.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location93 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location93.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        double double48 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray49 = polygonsSet45.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform50 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet45.applyTransform(euclidean2DTransform50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = euclidean2DAbstractRegion51.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet0.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side57 = polygonsSet0.side(euclidean2DHyperplane56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray49);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertNotNull(polygonsSet55);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet17.getVertices();
        boolean boolean20 = polygonsSet17.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet17.getVertices();
        java.lang.Class<?> wildcardClass22 = polygonsSet17.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        boolean boolean45 = polygonsSet0.isEmpty();
        double double46 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray47 = polygonsSet0.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray47);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet18.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform32 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet20.applyTransform(euclidean2DTransform32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        boolean boolean37 = euclidean2DAbstractRegion33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet18.checkPoint(euclidean2DVector38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet1.checkPoint(euclidean2DVector38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean49 = polygonsSet48.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean65 = polygonsSet64.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet64.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet30.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet68.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = euclidean2DAbstractRegion69.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = euclidean2DAbstractRegion69.getTree(false);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform40 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet39.applyTransform(euclidean2DTransform40);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = euclidean2DAbstractRegion41.copySelf();
        boolean boolean43 = euclidean2DAbstractRegion42.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        boolean boolean34 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane36 = polygonsSet20.intersection(euclidean2DSubHyperplane35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        double double14 = euclidean2DAbstractRegion12.getSize();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side16 = euclidean2DAbstractRegion12.side(euclidean2DHyperplane15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet39.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray44 = polygonsSet39.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet39.applyTransform(euclidean2DTransform45);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray44);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray18 = polygonsSet14.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform19 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet14.applyTransform(euclidean2DTransform19);
        java.lang.Class<?> wildcardClass21 = polygonsSet14.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(vector2DArray18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        boolean boolean81 = polygonsSet80.isEmpty();
        boolean boolean82 = polygonsSet40.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray83 = polygonsSet80.getVertices();
        java.lang.Class<?> wildcardClass84 = vector2DArray83.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(vector2DArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        boolean boolean26 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray27 = polygonsSet20.getVertices();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane29 = polygonsSet20.intersection(euclidean2DSubHyperplane28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(vector2DArray27);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList51 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList51);
        double double53 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray54 = polygonsSet52.getVertices();
        boolean boolean55 = polygonsSet13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet52);
        java.lang.Class<?> wildcardClass56 = polygonsSet13.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        boolean boolean7 = euclidean2DAbstractRegion4.isEmpty();
        double double8 = euclidean2DAbstractRegion4.getSize();
        java.lang.Class<?> wildcardClass9 = euclidean2DAbstractRegion4.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = euclidean2DAbstractRegion6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = euclidean2DAbstractRegion6.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        double double12 = polygonsSet11.getBoundarySize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        boolean boolean5 = polygonsSet4.isEmpty();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane7 = polygonsSet4.intersection(euclidean2DSubHyperplane6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean65 = polygonsSet64.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet64.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet30.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet68.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = euclidean2DAbstractRegion69.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet72.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet72.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = polygonsSet72.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = polygonsSet81.buildNew(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform84 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion85 = polygonsSet81.applyTransform(euclidean2DTransform84);
        boolean boolean86 = polygonsSet80.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion85);
        boolean boolean87 = euclidean2DAbstractRegion69.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion85);
        double double88 = euclidean2DAbstractRegion69.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertNotNull(polygonsSet83);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        boolean boolean14 = polygonsSet0.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList15 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet17.buildNew(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet17.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet38.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet36.buildNew(euclidean2DBSPTree49);
        boolean boolean53 = polygonsSet17.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet16.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet0.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray58 = polygonsSet57.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(vector2DArray58);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean15 = polygonsSet14.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side17 = polygonsSet14.side(euclidean2DHyperplane16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet19.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        boolean boolean36 = euclidean2DAbstractRegion32.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = euclidean2DAbstractRegion32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet14.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane40 = polygonsSet14.intersection(euclidean2DSubHyperplane39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        boolean boolean81 = polygonsSet80.isEmpty();
        boolean boolean82 = polygonsSet40.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        double double83 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion84 = polygonsSet40.copySelf();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion84);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet19.applyTransform(euclidean2DTransform22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet38.buildNew(euclidean2DBSPTree51);
        boolean boolean55 = polygonsSet19.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet19.applyTransform(euclidean2DTransform56);
        boolean boolean58 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion57);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane60 = polygonsSet4.intersection(euclidean2DSubHyperplane59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet20.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform66 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion67 = polygonsSet65.applyTransform(euclidean2DTransform66);
        java.lang.Class<?> wildcardClass68 = polygonsSet65.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        boolean boolean4 = polygonsSet1.isEmpty();
        java.lang.Class<?> wildcardClass5 = polygonsSet1.getClass();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        double double68 = polygonsSet20.getBoundarySize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        boolean boolean21 = euclidean2DAbstractRegion20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = euclidean2DAbstractRegion20.applyTransform(euclidean2DTransform22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean25 = polygonsSet24.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform26 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion27 = polygonsSet24.applyTransform(euclidean2DTransform26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet24.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet30.applyTransform(euclidean2DTransform42);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = polygonsSet30.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet46.buildNew(euclidean2DBSPTree57);
        boolean boolean60 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        double double65 = polygonsSet63.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet66.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet66.checkPoint(euclidean2DVector70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet66.getTree(true);
        boolean boolean74 = polygonsSet63.isEmpty(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet63.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion77 = polygonsSet63.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector81 = polygonsSet80.getBarycenter();
        double double82 = polygonsSet80.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet83.buildNew(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector87 = polygonsSet86.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location88 = polygonsSet83.checkPoint(euclidean2DVector87);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree90 = polygonsSet83.getTree(true);
        boolean boolean91 = polygonsSet80.isEmpty(euclidean2DBSPTree90);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet79.buildNew(euclidean2DBSPTree90);
        boolean boolean93 = polygonsSet63.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet92);
        boolean boolean94 = polygonsSet61.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet63);
        boolean boolean95 = polygonsSet59.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet63);
        boolean boolean96 = polygonsSet24.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet63);
        boolean boolean97 = polygonsSet63.isEmpty();
        boolean boolean98 = euclidean2DAbstractRegion20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet63);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector99 = polygonsSet63.getBarycenter();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion27);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion77);
        org.junit.Assert.assertNotNull(euclidean2DVector81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertNotNull(euclidean2DVector87);
        org.junit.Assert.assertTrue("'" + location88 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location88.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(polygonsSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector99);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList18 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList18);
        double double20 = polygonsSet19.getSize();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet30.applyTransform(euclidean2DTransform42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        boolean boolean47 = euclidean2DAbstractRegion43.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet44);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet29.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet22.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet19.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet14.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        double double56 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray57 = polygonsSet53.getVertices();
        boolean boolean58 = polygonsSet53.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = polygonsSet53.copySelf();
        boolean boolean60 = euclidean2DAbstractRegion59.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = euclidean2DAbstractRegion59.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet14.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(polygonsSet63);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList32 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet53.buildNew(euclidean2DBSPTree66);
        boolean boolean70 = polygonsSet34.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet33.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion73 = polygonsSet72.copySelf();
        boolean boolean74 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet72);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet72.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector77 = polygonsSet72.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
        org.junit.Assert.assertNotNull(euclidean2DVector77);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray50 = polygonsSet49.getVertices();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(vector2DArray50);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet29.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet29.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side35 = polygonsSet29.side(euclidean2DHyperplane34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet2.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet2.getVertices();
        java.lang.Class<?> wildcardClass7 = vector2DArray6.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet8.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        boolean boolean25 = euclidean2DAbstractRegion21.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet7.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet0.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform29 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion30 = polygonsSet0.applyTransform(euclidean2DTransform29);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side32 = polygonsSet0.side(euclidean2DHyperplane31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion30);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet28.copySelf();
        java.lang.Class<?> wildcardClass30 = euclidean2DAbstractRegion29.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet12.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet18.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet31.buildNew(euclidean2DBSPTree44);
        double double48 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = polygonsSet47.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet12.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray82 = polygonsSet81.getVertices();
        double double83 = polygonsSet81.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertNotNull(polygonsSet80);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(vector2DArray82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet40.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion70 = euclidean2DAbstractRegion69.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = euclidean2DAbstractRegion69.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion70);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet51.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location56 = polygonsSet51.checkPoint(euclidean2DVector55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet51.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        double double64 = polygonsSet62.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet65.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location70 = polygonsSet65.checkPoint(euclidean2DVector69);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet65.getTree(true);
        boolean boolean73 = polygonsSet62.isEmpty(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet61.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector78 = polygonsSet77.getBarycenter();
        double double79 = polygonsSet77.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree81 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet80.buildNew(euclidean2DBSPTree81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector84 = polygonsSet83.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location85 = polygonsSet80.checkPoint(euclidean2DVector84);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree87 = polygonsSet80.getTree(true);
        boolean boolean88 = polygonsSet77.isEmpty(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet89 = polygonsSet76.buildNew(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = polygonsSet74.buildNew(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet59.buildNew(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion92 = polygonsSet91.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree94 = polygonsSet91.getTree(false);
        boolean boolean95 = polygonsSet50.isEmpty(euclidean2DBSPTree94);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + location56 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location56.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree58);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + location70 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location70.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertNotNull(euclidean2DVector84);
        org.junit.Assert.assertTrue("'" + location85 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location85.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(polygonsSet89);
        org.junit.Assert.assertNotNull(polygonsSet90);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion92);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet0.getTree(false);
        java.lang.Class<?> wildcardClass31 = euclidean2DBSPTree30.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        double double5 = euclidean2DAbstractRegion4.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location11 = polygonsSet6.checkPoint(euclidean2DVector10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet6.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet14.buildNew(euclidean2DBSPTree42);
        boolean boolean47 = euclidean2DAbstractRegion4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane49 = euclidean2DAbstractRegion4.intersection(euclidean2DSubHyperplane48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + location11 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location11.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        double double4 = polygonsSet1.getBoundarySize();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList5 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform10 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion11 = polygonsSet7.applyTransform(euclidean2DTransform10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet17.buildNew(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location22 = polygonsSet17.checkPoint(euclidean2DVector21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet17.getTree(true);
        boolean boolean25 = polygonsSet14.isEmpty(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet13.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet32.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location37 = polygonsSet32.checkPoint(euclidean2DVector36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet32.getTree(true);
        boolean boolean40 = polygonsSet29.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet28.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet26.buildNew(euclidean2DBSPTree39);
        boolean boolean43 = polygonsSet7.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet6.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet44.applyTransform(euclidean2DTransform45);
        boolean boolean47 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion46);
        double double48 = euclidean2DAbstractRegion46.getBoundarySize();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion11);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + location22 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location22.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + location37 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location37.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        boolean boolean81 = polygonsSet80.isEmpty();
        boolean boolean82 = polygonsSet40.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        java.lang.Class<?> wildcardClass83 = polygonsSet40.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet4.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet7.buildNew(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        boolean boolean34 = polygonsSet23.isEmpty(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet22.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet20.buildNew(euclidean2DBSPTree33);
        double double37 = polygonsSet36.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        double double42 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        boolean boolean51 = polygonsSet40.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet39.buildNew(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        double double57 = polygonsSet55.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet58.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet58.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = polygonsSet58.getTree(true);
        boolean boolean66 = polygonsSet55.isEmpty(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet54.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet52.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet36.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree65);
        boolean boolean71 = polygonsSet4.isEmpty(euclidean2DBSPTree65);
        boolean boolean72 = polygonsSet4.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side8 = polygonsSet0.side(euclidean2DHyperplane7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DRegion3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = polygonsSet1.contains(euclidean2DRegion3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList32 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet53.buildNew(euclidean2DBSPTree66);
        boolean boolean70 = polygonsSet34.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet33.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion73 = polygonsSet72.copySelf();
        boolean boolean74 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet72);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList75 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        boolean boolean81 = polygonsSet72.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        java.lang.Class<?> wildcardClass82 = polygonsSet72.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        double double45 = polygonsSet0.getBoundarySize();
        double double46 = polygonsSet0.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane22 = euclidean2DAbstractRegion20.intersection(euclidean2DSubHyperplane21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet12.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform29 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion30 = polygonsSet17.applyTransform(euclidean2DTransform29);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion31 = polygonsSet17.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        boolean boolean47 = polygonsSet17.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform62 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion63 = polygonsSet50.applyTransform(euclidean2DTransform62);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion64 = polygonsSet50.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        double double69 = polygonsSet67.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet70.buildNew(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location75 = polygonsSet70.checkPoint(euclidean2DVector74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = polygonsSet70.getTree(true);
        boolean boolean78 = polygonsSet67.isEmpty(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet66.buildNew(euclidean2DBSPTree77);
        boolean boolean80 = polygonsSet50.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet79);
        boolean boolean81 = polygonsSet48.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet50);
        boolean boolean82 = polygonsSet46.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet50);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion83 = polygonsSet46.copySelf();
        double double84 = euclidean2DAbstractRegion83.getBoundarySize();
        boolean boolean85 = polygonsSet12.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion83);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side87 = euclidean2DAbstractRegion83.side(euclidean2DHyperplane86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion30);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion31);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion63);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion64);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + location75 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location75.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 0.0f, (double) (byte) 100, (double) 0.0f);
        boolean boolean5 = polygonsSet4.isEmpty();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = polygonsSet4.isEmpty(euclidean2DBSPTree8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 99.9999999999994d + "'", double6 == 99.9999999999994d);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet2.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet2.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet18.buildNew(euclidean2DBSPTree29);
        boolean boolean32 = polygonsSet2.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet31);
        boolean boolean33 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet2);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane35 = polygonsSet0.intersection(euclidean2DSubHyperplane34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray2 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(vector2DArray2);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertNotNull(vector2DArray4);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet14.copySelf();
        java.lang.Class<?> wildcardClass17 = euclidean2DAbstractRegion16.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = euclidean2DAbstractRegion6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = euclidean2DAbstractRegion6.getTree(true);
        double double11 = euclidean2DAbstractRegion6.getBoundarySize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane11 = polygonsSet9.intersection(euclidean2DSubHyperplane10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet1.getTree(true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion13.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = euclidean2DAbstractRegion13.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList18 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList18);
        double double20 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet19.getVertices();
        boolean boolean22 = polygonsSet19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet19.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet17.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet17.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray5 = polygonsSet4.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean7 = polygonsSet6.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet6.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet10.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList14 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform19 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet16.applyTransform(euclidean2DTransform19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        boolean boolean34 = polygonsSet23.isEmpty(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet22.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        double double40 = polygonsSet38.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet41.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location46 = polygonsSet41.checkPoint(euclidean2DVector45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet41.getTree(true);
        boolean boolean49 = polygonsSet38.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet37.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet35.buildNew(euclidean2DBSPTree48);
        boolean boolean52 = polygonsSet16.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet15.buildNew(euclidean2DBSPTree48);
        boolean boolean54 = polygonsSet10.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet6.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        boolean boolean57 = polygonsSet4.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.junit.Assert.assertNotNull(vector2DArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + location46 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location46.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList32 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet53.buildNew(euclidean2DBSPTree66);
        boolean boolean70 = polygonsSet34.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet33.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion73 = polygonsSet72.copySelf();
        boolean boolean74 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet72);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList75 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        boolean boolean81 = polygonsSet72.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side83 = polygonsSet72.side(euclidean2DHyperplane82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet44.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        boolean boolean61 = euclidean2DAbstractRegion57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet58);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet43.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion38.checkPoint(euclidean2DVector62);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList65 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList65);
        double double67 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray68 = polygonsSet66.getVertices();
        boolean boolean69 = polygonsSet66.isEmpty();
        boolean boolean70 = euclidean2DAbstractRegion38.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean72 = polygonsSet71.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet71.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        boolean boolean77 = euclidean2DAbstractRegion38.isEmpty(euclidean2DBSPTree74);
        boolean boolean78 = euclidean2DAbstractRegion38.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        java.lang.Class<?> wildcardClass85 = polygonsSet40.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet33.applyTransform(euclidean2DTransform45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        boolean boolean63 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        boolean boolean64 = polygonsSet31.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean65 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side67 = polygonsSet29.side(euclidean2DHyperplane66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion12.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet0.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray39 = polygonsSet38.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean41 = polygonsSet40.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet40.applyTransform(euclidean2DTransform42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet44.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList48 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform53 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion54 = polygonsSet50.applyTransform(euclidean2DTransform53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        double double59 = polygonsSet57.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet60.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location65 = polygonsSet60.checkPoint(euclidean2DVector64);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet60.getTree(true);
        boolean boolean68 = polygonsSet57.isEmpty(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet56.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        double double74 = polygonsSet72.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet75.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector79 = polygonsSet78.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location80 = polygonsSet75.checkPoint(euclidean2DVector79);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = polygonsSet75.getTree(true);
        boolean boolean83 = polygonsSet72.isEmpty(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet71.buildNew(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet69.buildNew(euclidean2DBSPTree82);
        boolean boolean86 = polygonsSet50.isEmpty(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = polygonsSet49.buildNew(euclidean2DBSPTree82);
        boolean boolean88 = polygonsSet44.isEmpty(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet89 = polygonsSet40.buildNew(euclidean2DBSPTree82);
        boolean boolean90 = polygonsSet38.isEmpty(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree82);
        boolean boolean93 = euclidean2DAbstractRegion33.isEmpty(euclidean2DBSPTree82);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertNotNull(vector2DArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion54);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + location65 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location65.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertNotNull(euclidean2DVector79);
        org.junit.Assert.assertTrue("'" + location80 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location80.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(polygonsSet87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(polygonsSet89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane5 = polygonsSet3.intersection(euclidean2DSubHyperplane4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion13.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform17);
        java.lang.Class<?> wildcardClass19 = euclidean2DAbstractRegion18.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet1.getTree(true);
        boolean boolean43 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        double double48 = polygonsSet46.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet49.buildNew(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location54 = polygonsSet49.checkPoint(euclidean2DVector53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = polygonsSet49.getTree(true);
        boolean boolean57 = polygonsSet46.isEmpty(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet45.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        double double63 = polygonsSet61.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet64.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location69 = polygonsSet64.checkPoint(euclidean2DVector68);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet64.getTree(true);
        boolean boolean72 = polygonsSet61.isEmpty(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet60.buildNew(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet58.buildNew(euclidean2DBSPTree71);
        boolean boolean75 = polygonsSet74.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet1.checkPoint(euclidean2DVector76);
        double double78 = polygonsSet1.getBoundarySize();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + location54 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location54.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + location69 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location69.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet8.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        boolean boolean25 = euclidean2DAbstractRegion21.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet7.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet0.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        boolean boolean42 = polygonsSet31.isEmpty(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet30.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = polygonsSet43.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet45.applyTransform(euclidean2DTransform57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        boolean boolean62 = euclidean2DAbstractRegion58.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet59);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet43.checkPoint(euclidean2DVector63);
        boolean boolean65 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet43);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray66 = polygonsSet43.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform67 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion68 = polygonsSet43.applyTransform(euclidean2DTransform67);
        boolean boolean69 = euclidean2DAbstractRegion68.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(vector2DArray66);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        double double26 = euclidean2DAbstractRegion25.getSize();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList27 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList27);
        double double29 = polygonsSet28.getSize();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform51 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion52 = polygonsSet39.applyTransform(euclidean2DTransform51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        boolean boolean56 = euclidean2DAbstractRegion52.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet53);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet38.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet31.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet28.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = euclidean2DAbstractRegion25.checkPoint(euclidean2DVector57);
        java.lang.Class<?> wildcardClass62 = euclidean2DAbstractRegion25.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (short) 0, (double) 10, (double) (short) 10, (double) '#');
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        double double36 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet38.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        double double56 = polygonsSet54.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet57.checkPoint(euclidean2DVector61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = polygonsSet57.getTree(true);
        boolean boolean65 = polygonsSet54.isEmpty(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet53.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet51.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet35.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean70 = polygonsSet69.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet69.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet35.buildNew(euclidean2DBSPTree72);
        boolean boolean74 = polygonsSet4.isEmpty(euclidean2DBSPTree72);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((-1.0d), (double) (byte) 0, (double) (-1), (double) 10.0f);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean6 = polygonsSet5.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform7 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = polygonsSet5.applyTransform(euclidean2DTransform7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet9.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList13 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet15.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet34.buildNew(euclidean2DBSPTree47);
        boolean boolean51 = polygonsSet15.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet14.buildNew(euclidean2DBSPTree47);
        boolean boolean53 = polygonsSet9.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet5.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform59 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion60 = polygonsSet56.applyTransform(euclidean2DTransform59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = euclidean2DAbstractRegion60.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion63 = euclidean2DAbstractRegion60.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = euclidean2DAbstractRegion63.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location65 = polygonsSet55.checkPoint(euclidean2DVector64);
        org.apache.commons.math3.geometry.partitioning.Region.Location location66 = polygonsSet4.checkPoint(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion60);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion63);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + location65 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location65.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location66 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location66.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        double double51 = polygonsSet13.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = polygonsSet17.getTree(false);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane22 = polygonsSet17.intersection(euclidean2DSubHyperplane21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree20);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane51 = polygonsSet34.intersection(euclidean2DSubHyperplane50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet4.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet17.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet19.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        boolean boolean36 = euclidean2DAbstractRegion32.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet17.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet17.getBarycenter();
        boolean boolean40 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        boolean boolean41 = polygonsSet0.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        double double14 = polygonsSet13.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        double double17 = polygonsSet15.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet18.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location23 = polygonsSet18.checkPoint(euclidean2DVector22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = polygonsSet18.getTree(true);
        boolean boolean26 = polygonsSet15.isEmpty(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet30.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet30.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet49.getTree(false);
        boolean boolean52 = polygonsSet49.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = polygonsSet49.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet28.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet28.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform67 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion68 = polygonsSet28.applyTransform(euclidean2DTransform67);
        boolean boolean69 = polygonsSet13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + location23 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location23.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion13.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = euclidean2DAbstractRegion13.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        boolean boolean15 = polygonsSet4.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet3.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet16.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet16.getTree(true);
        boolean boolean20 = polygonsSet1.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet21.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray29 = polygonsSet28.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean31 = polygonsSet30.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform32 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet30.applyTransform(euclidean2DTransform32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = polygonsSet34.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList38 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform43 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = polygonsSet40.applyTransform(euclidean2DTransform43);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet46.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        double double64 = polygonsSet62.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet65.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location70 = polygonsSet65.checkPoint(euclidean2DVector69);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet65.getTree(true);
        boolean boolean73 = polygonsSet62.isEmpty(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet61.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet59.buildNew(euclidean2DBSPTree72);
        boolean boolean76 = polygonsSet40.isEmpty(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet39.buildNew(euclidean2DBSPTree72);
        boolean boolean78 = polygonsSet34.isEmpty(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet30.buildNew(euclidean2DBSPTree72);
        boolean boolean80 = polygonsSet28.isEmpty(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = polygonsSet21.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet1.buildNew(euclidean2DBSPTree72);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertNotNull(vector2DArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree37);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + location70 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location70.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet83);
        org.junit.Assert.assertNotNull(polygonsSet84);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray8 = polygonsSet7.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean10 = polygonsSet9.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform11 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet9.applyTransform(euclidean2DTransform11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet13.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList17 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet19.applyTransform(euclidean2DTransform22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet38.buildNew(euclidean2DBSPTree51);
        boolean boolean55 = polygonsSet19.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet18.buildNew(euclidean2DBSPTree51);
        boolean boolean57 = polygonsSet13.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet9.buildNew(euclidean2DBSPTree51);
        boolean boolean59 = polygonsSet7.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet0.buildNew(euclidean2DBSPTree51);
        java.lang.Class<?> wildcardClass63 = polygonsSet62.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertNotNull(vector2DArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet8.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet8.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet27.getTree(false);
        boolean boolean30 = polygonsSet27.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet27.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet58.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet56.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet41.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet27.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet27.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion77 = polygonsSet27.copySelf();
        boolean boolean78 = euclidean2DAbstractRegion4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet27);
        java.lang.Class<?> wildcardClass79 = polygonsSet27.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet51.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList55 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform60 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = polygonsSet57.applyTransform(euclidean2DTransform60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        double double66 = polygonsSet64.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet67.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location72 = polygonsSet67.checkPoint(euclidean2DVector71);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet67.getTree(true);
        boolean boolean75 = polygonsSet64.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet63.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        double double81 = polygonsSet79.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet82.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = polygonsSet85.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location87 = polygonsSet82.checkPoint(euclidean2DVector86);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = polygonsSet82.getTree(true);
        boolean boolean90 = polygonsSet79.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet78.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet76.buildNew(euclidean2DBSPTree89);
        boolean boolean93 = polygonsSet57.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = polygonsSet56.buildNew(euclidean2DBSPTree89);
        boolean boolean95 = polygonsSet51.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet96 = polygonsSet20.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector97 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform98 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion99 = polygonsSet20.applyTransform(euclidean2DTransform98);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + location72 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location72.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
        org.junit.Assert.assertTrue("'" + location87 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location87.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(polygonsSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(polygonsSet94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(polygonsSet96);
        org.junit.Assert.assertNotNull(euclidean2DVector97);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion99);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet31.copySelf();
        java.lang.Class<?> wildcardClass33 = euclidean2DAbstractRegion32.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        boolean boolean21 = euclidean2DAbstractRegion20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = euclidean2DAbstractRegion20.applyTransform(euclidean2DTransform22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean25 = polygonsSet24.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform26 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion27 = polygonsSet24.applyTransform(euclidean2DTransform26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet24.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet30.applyTransform(euclidean2DTransform42);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = polygonsSet30.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet46.buildNew(euclidean2DBSPTree57);
        boolean boolean60 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        double double65 = polygonsSet63.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet66.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet66.checkPoint(euclidean2DVector70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet66.getTree(true);
        boolean boolean74 = polygonsSet63.isEmpty(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet63.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion77 = polygonsSet63.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector81 = polygonsSet80.getBarycenter();
        double double82 = polygonsSet80.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet83.buildNew(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector87 = polygonsSet86.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location88 = polygonsSet83.checkPoint(euclidean2DVector87);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree90 = polygonsSet83.getTree(true);
        boolean boolean91 = polygonsSet80.isEmpty(euclidean2DBSPTree90);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet79.buildNew(euclidean2DBSPTree90);
        boolean boolean93 = polygonsSet63.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet92);
        boolean boolean94 = polygonsSet61.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet63);
        boolean boolean95 = polygonsSet59.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet63);
        boolean boolean96 = polygonsSet24.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet63);
        boolean boolean97 = polygonsSet63.isEmpty();
        boolean boolean98 = euclidean2DAbstractRegion20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet63);
        boolean boolean99 = polygonsSet63.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion27);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion77);
        org.junit.Assert.assertNotNull(euclidean2DVector81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertNotNull(euclidean2DVector87);
        org.junit.Assert.assertTrue("'" + location88 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location88.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(polygonsSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        boolean boolean45 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray47 = polygonsSet0.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertNotNull(vector2DArray47);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet12.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        boolean boolean29 = euclidean2DAbstractRegion25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet26);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet11.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet4.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet1.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = polygonsSet34.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList38 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform43 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = polygonsSet40.applyTransform(euclidean2DTransform43);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet46.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        double double64 = polygonsSet62.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet65.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location70 = polygonsSet65.checkPoint(euclidean2DVector69);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet65.getTree(true);
        boolean boolean73 = polygonsSet62.isEmpty(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet61.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet59.buildNew(euclidean2DBSPTree72);
        boolean boolean76 = polygonsSet40.isEmpty(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet39.buildNew(euclidean2DBSPTree72);
        boolean boolean78 = polygonsSet34.isEmpty(euclidean2DBSPTree72);
        double double79 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector81 = polygonsSet80.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet80.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree85 = polygonsSet80.getTree(false);
        boolean boolean86 = polygonsSet34.isEmpty(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet88 = polygonsSet1.buildNew(euclidean2DBSPTree85);
        java.lang.Class<?> wildcardClass89 = polygonsSet1.getClass();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree37);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + location70 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location70.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector81);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(polygonsSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = polygonsSet2.getTree(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet2.getBarycenter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNull(euclidean2DBSPTree4);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet67.applyTransform(euclidean2DTransform68);
        boolean boolean70 = polygonsSet67.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        double double47 = polygonsSet46.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet30.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean34 = polygonsSet33.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform35 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet33.applyTransform(euclidean2DTransform35);
        double double37 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet39.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet39.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet58.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet33.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet33.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet30.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet65.buildNew(euclidean2DBSPTree66);
        double double68 = polygonsSet65.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray69 = polygonsSet65.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform70 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion71 = polygonsSet65.applyTransform(euclidean2DTransform70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = euclidean2DAbstractRegion71.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree73);
        boolean boolean75 = polygonsSet30.isEmpty(euclidean2DBSPTree73);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray69);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion71);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet4.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((-1.0d), (double) (byte) 0, (double) (-1), (double) 10.0f);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet12.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet18.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet31.buildNew(euclidean2DBSPTree44);
        boolean boolean48 = polygonsSet12.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform49 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion50 = polygonsSet12.applyTransform(euclidean2DTransform49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet56.applyTransform(euclidean2DTransform68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        double double72 = polygonsSet70.getSize();
        boolean boolean73 = euclidean2DAbstractRegion69.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet70);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet70.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location75 = polygonsSet55.checkPoint(euclidean2DVector74);
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = euclidean2DAbstractRegion50.checkPoint(euclidean2DVector74);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList77 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList77);
        double double79 = polygonsSet78.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray80 = polygonsSet78.getVertices();
        boolean boolean81 = polygonsSet78.isEmpty();
        boolean boolean82 = euclidean2DAbstractRegion50.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean84 = polygonsSet83.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree86 = polygonsSet83.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree86);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet88 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree86);
        boolean boolean89 = euclidean2DAbstractRegion50.isEmpty(euclidean2DBSPTree86);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = polygonsSet11.buildNew(euclidean2DBSPTree86);
        boolean boolean91 = polygonsSet4.isEmpty(euclidean2DBSPTree86);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion50);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + location75 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location75.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(polygonsSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList32 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet53.buildNew(euclidean2DBSPTree66);
        boolean boolean70 = polygonsSet34.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet33.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion73 = polygonsSet72.copySelf();
        boolean boolean74 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet72);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet72.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side78 = euclidean2DAbstractRegion76.side(euclidean2DHyperplane77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        boolean boolean15 = polygonsSet4.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet3.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet16.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet16.getTree(true);
        boolean boolean20 = polygonsSet1.isEmpty(euclidean2DBSPTree19);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = polygonsSet1.getSize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        java.lang.Class<?> wildcardClass18 = euclidean2DBSPTree17.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = euclidean2DAbstractRegion13.getBarycenter();
        boolean boolean21 = euclidean2DAbstractRegion13.isEmpty();
        java.lang.Class<?> wildcardClass22 = euclidean2DAbstractRegion13.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet20.applyTransform(euclidean2DTransform68);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform70 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion71 = polygonsSet20.applyTransform(euclidean2DTransform70);
        java.lang.Class<?> wildcardClass72 = euclidean2DAbstractRegion71.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet6.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet6.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        boolean boolean34 = polygonsSet23.isEmpty(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet22.buildNew(euclidean2DBSPTree33);
        boolean boolean36 = polygonsSet6.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform51 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion52 = polygonsSet39.applyTransform(euclidean2DTransform51);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet39.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        boolean boolean69 = polygonsSet39.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet68);
        boolean boolean70 = polygonsSet37.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet39);
        boolean boolean71 = polygonsSet35.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet39);
        boolean boolean72 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane76 = polygonsSet0.intersection(euclidean2DSubHyperplane75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion52);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        java.lang.Class<?> wildcardClass18 = polygonsSet14.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet40.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane71 = polygonsSet40.intersection(euclidean2DSubHyperplane70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet9.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        boolean boolean26 = euclidean2DAbstractRegion22.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet23);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet8.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet1.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet30.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet1.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side37 = polygonsSet1.side(euclidean2DHyperplane36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(polygonsSet35);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        double double32 = polygonsSet30.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet30.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean36 = polygonsSet35.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet35.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion39 = polygonsSet35.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        double double44 = polygonsSet42.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet45.checkPoint(euclidean2DVector49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = polygonsSet45.getTree(true);
        boolean boolean53 = polygonsSet42.isEmpty(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet41.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = polygonsSet54.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet56.applyTransform(euclidean2DTransform68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        double double72 = polygonsSet70.getSize();
        boolean boolean73 = euclidean2DAbstractRegion69.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet70);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet70.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location75 = polygonsSet54.checkPoint(euclidean2DVector74);
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = euclidean2DAbstractRegion39.checkPoint(euclidean2DVector74);
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet30.checkPoint(euclidean2DVector74);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform78 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion79 = polygonsSet30.applyTransform(euclidean2DTransform78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree81 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet80.buildNew(euclidean2DBSPTree81);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform83 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion84 = polygonsSet80.applyTransform(euclidean2DTransform83);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree86 = euclidean2DAbstractRegion84.getTree(true);
        boolean boolean87 = euclidean2DAbstractRegion84.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector88 = euclidean2DAbstractRegion84.getBarycenter();
        boolean boolean89 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion84);
        double double90 = polygonsSet30.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion39);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + location75 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location75.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion79);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion84);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane10 = polygonsSet0.intersection(euclidean2DSubHyperplane9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion24 = polygonsSet20.copySelf();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion24);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet28.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet28.applyTransform(euclidean2DTransform31);
        boolean boolean33 = polygonsSet27.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion32);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray34 = polygonsSet27.getVertices();
        boolean boolean35 = polygonsSet14.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(vector2DArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        double double45 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet46.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet46.getTree(false);
        boolean boolean52 = polygonsSet0.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        double double63 = polygonsSet61.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet64.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location69 = polygonsSet64.checkPoint(euclidean2DVector68);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet64.getTree(true);
        boolean boolean72 = polygonsSet61.isEmpty(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform73 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion74 = polygonsSet61.applyTransform(euclidean2DTransform73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        double double77 = polygonsSet75.getSize();
        boolean boolean78 = euclidean2DAbstractRegion74.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet75);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector79 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location80 = polygonsSet60.checkPoint(euclidean2DVector79);
        org.apache.commons.math3.geometry.partitioning.Region.Location location81 = polygonsSet53.checkPoint(euclidean2DVector79);
        org.apache.commons.math3.geometry.partitioning.Region.Location location82 = polygonsSet0.checkPoint(euclidean2DVector79);
        double double83 = polygonsSet0.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + location69 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location69.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector79);
        org.junit.Assert.assertTrue("'" + location80 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location80.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location81 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location81.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location82 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location82.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side16 = polygonsSet14.side(euclidean2DHyperplane15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet39.checkPoint(euclidean2DVector42);
        java.lang.Class<?> wildcardClass44 = polygonsSet39.getClass();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet30.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean34 = polygonsSet33.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform35 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet33.applyTransform(euclidean2DTransform35);
        double double37 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet39.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet39.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet58.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet33.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet33.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet30.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray65 = polygonsSet30.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(vector2DArray65);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 100L, (double) ' ', (double) 100, (double) (-1.0f));
        java.lang.Class<?> wildcardClass5 = polygonsSet4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet8.getBarycenter();
        double double42 = polygonsSet8.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray43 = polygonsSet8.getVertices();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray43);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform40 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet39.applyTransform(euclidean2DTransform40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean43 = polygonsSet42.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform44 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion45 = polygonsSet42.applyTransform(euclidean2DTransform44);
        double double46 = polygonsSet42.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet48.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet56.checkPoint(euclidean2DVector60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(true);
        boolean boolean64 = polygonsSet53.isEmpty(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet52.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet48.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet67.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = polygonsSet42.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet39.buildNew(euclidean2DBSPTree69);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree50);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertNotNull(polygonsSet70);
        org.junit.Assert.assertNotNull(polygonsSet71);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 0.0f, (double) (byte) 100, (double) 0.0f);
        boolean boolean5 = polygonsSet4.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet4.applyTransform(euclidean2DTransform6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet24.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side29 = polygonsSet24.side(euclidean2DHyperplane28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform6 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet0.applyTransform(euclidean2DTransform6);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side9 = polygonsSet0.side(euclidean2DHyperplane8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet0.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray16 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet0.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side21 = polygonsSet0.side(euclidean2DHyperplane20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(vector2DArray16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(vector2DArray19);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet67.applyTransform(euclidean2DTransform68);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane71 = polygonsSet67.intersection(euclidean2DSubHyperplane70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray5 = polygonsSet0.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DBSPTree2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(vector2DArray5);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion13.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform17);
        double double19 = euclidean2DAbstractRegion18.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        boolean boolean81 = polygonsSet80.isEmpty();
        boolean boolean82 = polygonsSet40.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        double double83 = polygonsSet40.getBoundarySize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform85 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = polygonsSet40.applyTransform(euclidean2DTransform85);
        java.lang.Class<?> wildcardClass87 = polygonsSet40.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        double double3 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform4 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet0.applyTransform(euclidean2DTransform4);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet0.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        double double25 = polygonsSet20.getBoundarySize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet20.getBarycenter();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet13.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform64 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion65 = polygonsSet52.applyTransform(euclidean2DTransform64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        boolean boolean69 = euclidean2DAbstractRegion65.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet66);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform70 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion71 = euclidean2DAbstractRegion65.applyTransform(euclidean2DTransform70);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = euclidean2DAbstractRegion71.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform73 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion74 = euclidean2DAbstractRegion71.applyTransform(euclidean2DTransform73);
        double double75 = euclidean2DAbstractRegion74.getBoundarySize();
        double double76 = euclidean2DAbstractRegion74.getBoundarySize();
        boolean boolean77 = euclidean2DAbstractRegion51.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion74);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        double double48 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray49 = polygonsSet45.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform50 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet45.applyTransform(euclidean2DTransform50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = euclidean2DAbstractRegion51.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet0.buildNew(euclidean2DBSPTree53);
        double double56 = polygonsSet0.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray49);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet3.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet0.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side10 = polygonsSet0.side(euclidean2DHyperplane9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(polygonsSet8);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet7.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet11.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet7.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet26.getTree(false);
        boolean boolean29 = polygonsSet26.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet30.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet30.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = polygonsSet30.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet26.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        double double42 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        boolean boolean51 = polygonsSet40.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet40.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion54 = polygonsSet40.copySelf();
        boolean boolean55 = polygonsSet26.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet40);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList56 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList56);
        double double58 = polygonsSet57.getSize();
        double double59 = polygonsSet57.getSize();
        boolean boolean60 = polygonsSet57.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        double double65 = polygonsSet63.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet66.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet66.checkPoint(euclidean2DVector70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet66.getTree(true);
        boolean boolean74 = polygonsSet63.isEmpty(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet62.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet57.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean78 = polygonsSet77.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform79 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion80 = polygonsSet77.applyTransform(euclidean2DTransform79);
        double double81 = euclidean2DAbstractRegion80.getBoundarySize();
        boolean boolean82 = polygonsSet76.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = euclidean2DAbstractRegion80.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet40.buildNew(euclidean2DBSPTree84);
        boolean boolean86 = polygonsSet0.isEmpty(euclidean2DBSPTree84);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNull(euclidean2DBSPTree9);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree37);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList32 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet53.buildNew(euclidean2DBSPTree66);
        boolean boolean70 = polygonsSet34.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet33.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion73 = polygonsSet72.copySelf();
        boolean boolean74 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet72);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList75 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList75);
        boolean boolean81 = polygonsSet72.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane83 = polygonsSet80.intersection(euclidean2DSubHyperplane82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 100, 2.0d, (double) 100L, (double) (-1L));
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet24.copySelf();
        boolean boolean26 = euclidean2DAbstractRegion25.isEmpty();
        boolean boolean27 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet4.buildNew(euclidean2DBSPTree38);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet11.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet24.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet24.getTree(true);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList28 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList28);
        double double30 = polygonsSet29.getSize();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        double double42 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        boolean boolean51 = polygonsSet40.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet40.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        double double56 = polygonsSet54.getSize();
        boolean boolean57 = euclidean2DAbstractRegion53.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet54);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet39.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet32.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet29.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet24.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet0.checkPoint(euclidean2DVector58);
        java.lang.Class<?> wildcardClass64 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        boolean boolean4 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet1.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean22 = polygonsSet21.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform23 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion24 = polygonsSet21.applyTransform(euclidean2DTransform23);
        double double25 = euclidean2DAbstractRegion24.getBoundarySize();
        boolean boolean26 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = euclidean2DAbstractRegion24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side31 = polygonsSet29.side(euclidean2DHyperplane30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet9.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet15.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        boolean boolean42 = polygonsSet31.isEmpty(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet30.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet28.buildNew(euclidean2DBSPTree41);
        boolean boolean45 = polygonsSet9.isEmpty(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet9.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet56.checkPoint(euclidean2DVector60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(true);
        boolean boolean64 = polygonsSet53.isEmpty(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform65 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet53.applyTransform(euclidean2DTransform65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        double double69 = polygonsSet67.getSize();
        boolean boolean70 = euclidean2DAbstractRegion66.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet67);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location72 = polygonsSet52.checkPoint(euclidean2DVector71);
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = euclidean2DAbstractRegion47.checkPoint(euclidean2DVector71);
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet8.checkPoint(euclidean2DVector71);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side76 = polygonsSet8.side(euclidean2DHyperplane75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + location72 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location72.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet29.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray32 = polygonsSet29.getVertices();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane34 = polygonsSet29.intersection(euclidean2DSubHyperplane33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(vector2DArray32);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        double double5 = polygonsSet3.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location11 = polygonsSet6.checkPoint(euclidean2DVector10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet6.getTree(true);
        boolean boolean14 = polygonsSet3.isEmpty(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet3.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet3.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        boolean boolean33 = polygonsSet3.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet32);
        boolean boolean34 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet3);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray35 = polygonsSet1.getVertices();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + location11 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location11.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(vector2DArray35);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet13.copySelf();
        java.lang.Class<?> wildcardClass52 = polygonsSet13.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = polygonsSet50.getTree(false);
        double double53 = polygonsSet50.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        boolean boolean4 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet1.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray26 = polygonsSet25.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean28 = polygonsSet27.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform29 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion30 = polygonsSet27.applyTransform(euclidean2DTransform29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet31.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList35 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform40 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet37.applyTransform(euclidean2DTransform40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet58.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet56.buildNew(euclidean2DBSPTree69);
        boolean boolean73 = polygonsSet37.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet36.buildNew(euclidean2DBSPTree69);
        boolean boolean75 = polygonsSet31.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet27.buildNew(euclidean2DBSPTree69);
        boolean boolean77 = polygonsSet25.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = polygonsSet20.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(vector2DArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet80);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = euclidean2DAbstractRegion19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = euclidean2DAbstractRegion19.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side24 = euclidean2DAbstractRegion22.side(euclidean2DHyperplane23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        double double29 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet0.getBarycenter();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray5 = polygonsSet4.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean7 = polygonsSet6.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet6.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet10.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList14 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform19 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet16.applyTransform(euclidean2DTransform19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        boolean boolean34 = polygonsSet23.isEmpty(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet22.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        double double40 = polygonsSet38.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet41.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location46 = polygonsSet41.checkPoint(euclidean2DVector45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet41.getTree(true);
        boolean boolean49 = polygonsSet38.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet37.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet35.buildNew(euclidean2DBSPTree48);
        boolean boolean52 = polygonsSet16.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet15.buildNew(euclidean2DBSPTree48);
        boolean boolean54 = polygonsSet10.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet6.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        boolean boolean57 = polygonsSet4.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet61.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location66 = polygonsSet61.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = polygonsSet61.getTree(true);
        boolean boolean69 = polygonsSet58.isEmpty(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree68);
        boolean boolean71 = polygonsSet70.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet70.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.Region.Location location75 = polygonsSet4.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet76.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location81 = polygonsSet76.checkPoint(euclidean2DVector80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet76.getTree(true);
        boolean boolean84 = polygonsSet4.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector85 = polygonsSet4.getBarycenter();
        org.junit.Assert.assertNotNull(vector2DArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + location46 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location46.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + location66 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location66.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location75 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location75.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + location81 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location81.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector85);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane47 = polygonsSet40.intersection(euclidean2DSubHyperplane46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList51 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList51);
        double double53 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray54 = polygonsSet52.getVertices();
        boolean boolean55 = polygonsSet13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet13.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side59 = polygonsSet13.side(euclidean2DHyperplane58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet16.applyTransform(euclidean2DTransform28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        boolean boolean33 = euclidean2DAbstractRegion29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet30);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet14.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        double double38 = polygonsSet36.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet39.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location44 = polygonsSet39.checkPoint(euclidean2DVector43);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = polygonsSet39.getTree(true);
        boolean boolean47 = polygonsSet36.isEmpty(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform48 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion49 = polygonsSet36.applyTransform(euclidean2DTransform48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        boolean boolean53 = euclidean2DAbstractRegion49.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet50);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform54 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = euclidean2DAbstractRegion49.applyTransform(euclidean2DTransform54);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = euclidean2DAbstractRegion55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet14.checkPoint(euclidean2DVector56);
        double double58 = polygonsSet14.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform59 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion60 = polygonsSet14.applyTransform(euclidean2DTransform59);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + location44 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location44.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion60);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        boolean boolean5 = polygonsSet4.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet4.getBarycenter();
        java.lang.Class<?> wildcardClass7 = euclidean2DVector6.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        boolean boolean7 = euclidean2DAbstractRegion4.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = euclidean2DAbstractRegion4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side10 = euclidean2DAbstractRegion4.side(euclidean2DHyperplane9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet7.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList11 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform16 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet13.applyTransform(euclidean2DTransform16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet32.buildNew(euclidean2DBSPTree45);
        boolean boolean49 = polygonsSet13.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet12.buildNew(euclidean2DBSPTree45);
        boolean boolean51 = polygonsSet7.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        java.lang.Class<?> wildcardClass53 = polygonsSet0.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet4.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean8 = polygonsSet7.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet7.applyTransform(euclidean2DTransform9);
        double double11 = euclidean2DAbstractRegion10.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = euclidean2DAbstractRegion10.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet4.buildNew(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(polygonsSet14);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        double double26 = euclidean2DAbstractRegion25.getSize();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList27 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList27);
        double double29 = polygonsSet28.getSize();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform51 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion52 = polygonsSet39.applyTransform(euclidean2DTransform51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        boolean boolean56 = euclidean2DAbstractRegion52.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet53);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet38.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet31.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet28.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = euclidean2DAbstractRegion25.checkPoint(euclidean2DVector57);
        boolean boolean62 = euclidean2DAbstractRegion25.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        double double71 = polygonsSet69.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet72.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet72.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = polygonsSet72.getTree(true);
        boolean boolean80 = polygonsSet69.isEmpty(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        boolean boolean82 = polygonsSet68.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet81.getTree(false);
        boolean boolean85 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean87 = polygonsSet86.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform88 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion89 = polygonsSet86.applyTransform(euclidean2DTransform88);
        double double90 = euclidean2DAbstractRegion89.getBoundarySize();
        boolean boolean91 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion89);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform92 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion93 = euclidean2DAbstractRegion89.applyTransform(euclidean2DTransform92);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side95 = euclidean2DAbstractRegion89.side(euclidean2DHyperplane94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion93);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray3 = polygonsSet1.getVertices();
        double double4 = polygonsSet1.getBoundarySize();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        boolean boolean39 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion38);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane41 = polygonsSet33.intersection(euclidean2DSubHyperplane40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        boolean boolean39 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        double double42 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        boolean boolean51 = polygonsSet40.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        boolean boolean53 = polygonsSet52.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location56 = polygonsSet52.checkPoint(euclidean2DVector55);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet52.applyTransform(euclidean2DTransform57);
        boolean boolean59 = euclidean2DAbstractRegion38.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet52);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + location56 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location56.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet20.applyTransform(euclidean2DTransform68);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion70 = polygonsSet20.copySelf();
        double double71 = euclidean2DAbstractRegion70.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        double double74 = polygonsSet72.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet75.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector79 = polygonsSet78.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location80 = polygonsSet75.checkPoint(euclidean2DVector79);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = polygonsSet75.getTree(true);
        boolean boolean83 = polygonsSet72.isEmpty(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform84 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion85 = polygonsSet72.applyTransform(euclidean2DTransform84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector87 = polygonsSet86.getBarycenter();
        double double88 = polygonsSet86.getSize();
        boolean boolean89 = euclidean2DAbstractRegion85.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet86);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector90 = euclidean2DAbstractRegion85.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location91 = euclidean2DAbstractRegion70.checkPoint(euclidean2DVector90);
        double double92 = euclidean2DAbstractRegion70.getBoundarySize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertNotNull(euclidean2DVector79);
        org.junit.Assert.assertTrue("'" + location80 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location80.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion85);
        org.junit.Assert.assertNotNull(euclidean2DVector87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector90);
        org.junit.Assert.assertTrue("'" + location91 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location91.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        boolean boolean15 = polygonsSet4.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet3.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet16.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet16.getTree(true);
        boolean boolean20 = polygonsSet1.isEmpty(euclidean2DBSPTree19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet1.getVertices();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList19 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList19);
        double double21 = polygonsSet20.getSize();
        double double22 = polygonsSet20.getSize();
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet20.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet17.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane42 = polygonsSet17.intersection(euclidean2DSubHyperplane41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet4.copySelf();
        java.lang.Class<?> wildcardClass6 = polygonsSet4.getClass();
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side8 = polygonsSet0.side(euclidean2DHyperplane7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree5);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '4', (double) 100, (double) (byte) -1, (double) 0L);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet17.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet17.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet38.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet36.buildNew(euclidean2DBSPTree49);
        double double53 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion54 = polygonsSet52.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean56 = polygonsSet55.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet55.applyTransform(euclidean2DTransform57);
        double double59 = polygonsSet55.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet61.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet61.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = polygonsSet80.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = polygonsSet55.buildNew(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree85 = polygonsSet55.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet52.buildNew(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree85);
        boolean boolean88 = polygonsSet17.isEmpty(euclidean2DBSPTree85);
        boolean boolean89 = polygonsSet4.isEmpty(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side91 = polygonsSet4.side(euclidean2DHyperplane90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree82);
        org.junit.Assert.assertNotNull(polygonsSet83);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree85);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean51 = polygonsSet50.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet50.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet50.getTree(false);
        boolean boolean56 = polygonsSet20.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree55);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        double double14 = euclidean2DAbstractRegion12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean16 = polygonsSet15.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet15.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet19.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList23 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet25.applyTransform(euclidean2DTransform28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet46.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet44.buildNew(euclidean2DBSPTree57);
        boolean boolean61 = polygonsSet25.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet24.buildNew(euclidean2DBSPTree57);
        boolean boolean63 = polygonsSet19.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet15.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location66 = euclidean2DAbstractRegion12.checkPoint(euclidean2DVector65);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + location66 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location66.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = euclidean2DAbstractRegion3.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion3.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        double double38 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet53.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = polygonsSet37.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean72 = polygonsSet71.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet71.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet37.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet75.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = euclidean2DAbstractRegion76.getTree(false);
        boolean boolean79 = euclidean2DAbstractRegion3.isEmpty(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(polygonsSet70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.copySelf();
        boolean boolean4 = euclidean2DAbstractRegion3.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet12.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        boolean boolean29 = euclidean2DAbstractRegion25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet26);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet11.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet4.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet1.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet44.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        double double62 = polygonsSet60.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet63.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = polygonsSet63.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet63.getTree(true);
        boolean boolean71 = polygonsSet60.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet59.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet57.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet42.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet1.buildNew(euclidean2DBSPTree70);
        double double76 = polygonsSet75.getBoundarySize();
        java.lang.Class<?> wildcardClass77 = polygonsSet75.getClass();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        java.lang.Class<?> wildcardClass31 = euclidean2DBSPTree27.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = null;
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet14.checkPoint(euclidean2DVector19);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 0.0f, (double) (byte) 100, (double) 0.0f);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        double double36 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet38.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        double double56 = polygonsSet54.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet57.checkPoint(euclidean2DVector61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = polygonsSet57.getTree(true);
        boolean boolean65 = polygonsSet54.isEmpty(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet53.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet51.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet35.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        boolean boolean70 = polygonsSet4.isEmpty(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet4.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree72);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray29 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray30 = polygonsSet0.getVertices();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(vector2DArray29);
        org.junit.Assert.assertNotNull(vector2DArray30);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList18 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList18);
        double double20 = polygonsSet19.getSize();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet30.applyTransform(euclidean2DTransform42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        boolean boolean47 = euclidean2DAbstractRegion43.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet44);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet29.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet22.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet19.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet14.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        double double56 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray57 = polygonsSet53.getVertices();
        boolean boolean58 = polygonsSet53.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = polygonsSet53.copySelf();
        boolean boolean60 = euclidean2DAbstractRegion59.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = euclidean2DAbstractRegion59.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet14.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side65 = polygonsSet14.side(euclidean2DHyperplane64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(polygonsSet63);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet4.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet7.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet18.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet31.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet31.getTree(true);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList35 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList35);
        double double37 = polygonsSet36.getSize();
        double double38 = polygonsSet36.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform59 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion60 = polygonsSet47.applyTransform(euclidean2DTransform59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        double double63 = polygonsSet61.getSize();
        boolean boolean64 = euclidean2DAbstractRegion60.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet61);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location66 = polygonsSet46.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet39.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = polygonsSet36.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.Region.Location location69 = polygonsSet31.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.Region.Location location70 = polygonsSet7.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet4.checkPoint(euclidean2DVector65);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion60);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + location66 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location66.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location69 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location69.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location70 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location70.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion13.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = euclidean2DAbstractRegion16.getTree(false);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion16.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        double double41 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet1.getTree(true);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet12.checkPoint(euclidean2DVector15);
        double double17 = polygonsSet12.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet20.buildNew(euclidean2DBSPTree61);
        boolean boolean65 = polygonsSet64.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet8.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        boolean boolean25 = euclidean2DAbstractRegion21.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet7.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet0.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        boolean boolean42 = polygonsSet31.isEmpty(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet30.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = polygonsSet43.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet45.applyTransform(euclidean2DTransform57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        boolean boolean62 = euclidean2DAbstractRegion58.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet59);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet43.checkPoint(euclidean2DVector63);
        boolean boolean65 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet43);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray66 = polygonsSet43.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform67 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion68 = polygonsSet43.applyTransform(euclidean2DTransform67);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane70 = polygonsSet43.intersection(euclidean2DSubHyperplane69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(vector2DArray66);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion68);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        boolean boolean26 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray27 = polygonsSet20.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet29.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet44.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet42.buildNew(euclidean2DBSPTree55);
        double double59 = polygonsSet58.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        double double64 = polygonsSet62.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet65.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location70 = polygonsSet65.checkPoint(euclidean2DVector69);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet65.getTree(true);
        boolean boolean73 = polygonsSet62.isEmpty(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet61.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector78 = polygonsSet77.getBarycenter();
        double double79 = polygonsSet77.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree81 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet80.buildNew(euclidean2DBSPTree81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector84 = polygonsSet83.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location85 = polygonsSet80.checkPoint(euclidean2DVector84);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree87 = polygonsSet80.getTree(true);
        boolean boolean88 = polygonsSet77.isEmpty(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet89 = polygonsSet76.buildNew(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = polygonsSet74.buildNew(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet58.buildNew(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet20.buildNew(euclidean2DBSPTree87);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(vector2DArray27);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + location70 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location70.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertNotNull(euclidean2DVector84);
        org.junit.Assert.assertTrue("'" + location85 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location85.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(polygonsSet89);
        org.junit.Assert.assertNotNull(polygonsSet90);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(polygonsSet92);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet44.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        boolean boolean61 = euclidean2DAbstractRegion57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet58);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet43.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion38.checkPoint(euclidean2DVector62);
        java.lang.Class<?> wildcardClass65 = location64.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        double double71 = polygonsSet69.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet72.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet72.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = polygonsSet72.getTree(true);
        boolean boolean80 = polygonsSet69.isEmpty(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        boolean boolean82 = polygonsSet68.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet81.getTree(false);
        boolean boolean85 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean87 = polygonsSet86.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform88 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion89 = polygonsSet86.applyTransform(euclidean2DTransform88);
        double double90 = euclidean2DAbstractRegion89.getBoundarySize();
        boolean boolean91 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion89);
        double double92 = euclidean2DAbstractRegion89.getSize();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side94 = euclidean2DAbstractRegion89.side(euclidean2DHyperplane93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet7.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList11 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform16 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet13.applyTransform(euclidean2DTransform16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet32.buildNew(euclidean2DBSPTree45);
        boolean boolean49 = polygonsSet13.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet12.buildNew(euclidean2DBSPTree45);
        boolean boolean51 = polygonsSet7.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side54 = polygonsSet52.side(euclidean2DHyperplane53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1L, (-1.0d), (double) 10.0f, 0.0d);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform69 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion70 = polygonsSet40.applyTransform(euclidean2DTransform69);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane72 = euclidean2DAbstractRegion70.intersection(euclidean2DSubHyperplane71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion70);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector82 = polygonsSet81.getBarycenter();
        double double83 = polygonsSet81.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree85 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet84.buildNew(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector88 = polygonsSet87.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location89 = polygonsSet84.checkPoint(euclidean2DVector88);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree91 = polygonsSet84.getTree(true);
        boolean boolean92 = polygonsSet81.isEmpty(euclidean2DBSPTree91);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet93 = polygonsSet80.buildNew(euclidean2DBSPTree91);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = polygonsSet78.buildNew(euclidean2DBSPTree91);
        boolean boolean95 = polygonsSet94.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector96 = polygonsSet94.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location97 = polygonsSet30.checkPoint(euclidean2DVector96);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform98 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion99 = polygonsSet30.applyTransform(euclidean2DTransform98);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertNotNull(euclidean2DVector88);
        org.junit.Assert.assertTrue("'" + location89 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location89.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(polygonsSet93);
        org.junit.Assert.assertNotNull(polygonsSet94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector96);
        org.junit.Assert.assertTrue("'" + location97 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location97.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion99);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 100, 1.0d, (double) 'a', (double) (byte) 0);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform85 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = polygonsSet40.applyTransform(euclidean2DTransform85);
        java.lang.Class<?> wildcardClass87 = euclidean2DAbstractRegion86.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform29 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion30 = polygonsSet0.applyTransform(euclidean2DTransform29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        double double44 = polygonsSet42.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet45.checkPoint(euclidean2DVector49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = polygonsSet45.getTree(true);
        boolean boolean53 = polygonsSet42.isEmpty(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet41.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        double double59 = polygonsSet57.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet60.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location65 = polygonsSet60.checkPoint(euclidean2DVector64);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet60.getTree(true);
        boolean boolean68 = polygonsSet57.isEmpty(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet56.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = polygonsSet54.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet39.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet0.checkPoint(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion30);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + location65 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location65.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(polygonsSet70);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        double double16 = euclidean2DAbstractRegion15.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        java.lang.Class<?> wildcardClass32 = euclidean2DBSPTree30.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '4', (double) 100, (double) (byte) -1, (double) 0L);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane6 = polygonsSet4.intersection(euclidean2DSubHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet0.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet0.getTree(false);
        double double68 = polygonsSet0.getSize();
        double double69 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform70 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion71 = polygonsSet0.applyTransform(euclidean2DTransform70);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side73 = euclidean2DAbstractRegion71.side(euclidean2DHyperplane72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion71);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet44.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        boolean boolean61 = euclidean2DAbstractRegion57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet58);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet43.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion38.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform65 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = euclidean2DAbstractRegion38.applyTransform(euclidean2DTransform65);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side68 = euclidean2DAbstractRegion38.side(euclidean2DHyperplane67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet30.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean34 = polygonsSet33.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform35 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet33.applyTransform(euclidean2DTransform35);
        double double37 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet39.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet39.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet58.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet33.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet33.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet30.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side68 = polygonsSet66.side(euclidean2DHyperplane67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertNotNull(polygonsSet64);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion35 = polygonsSet34.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = polygonsSet34.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet34.getTree(true);
        boolean boolean40 = polygonsSet14.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = euclidean2DAbstractRegion41.applyTransform(euclidean2DTransform42);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion35);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree37);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet40.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet44.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet40.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet59.getTree(false);
        boolean boolean62 = polygonsSet59.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet63.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = polygonsSet63.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet63.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet59.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        double double75 = polygonsSet73.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet76.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location81 = polygonsSet76.checkPoint(euclidean2DVector80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet76.getTree(true);
        boolean boolean84 = polygonsSet73.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform85 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = polygonsSet73.applyTransform(euclidean2DTransform85);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion87 = polygonsSet73.copySelf();
        boolean boolean88 = polygonsSet59.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet89 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean90 = polygonsSet89.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform91 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion92 = polygonsSet89.applyTransform(euclidean2DTransform91);
        double double93 = polygonsSet89.getBoundarySize();
        boolean boolean94 = polygonsSet59.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet89);
        double double95 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector96 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location97 = polygonsSet0.checkPoint(euclidean2DVector96);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform98 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion99 = polygonsSet0.applyTransform(euclidean2DTransform98);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNull(euclidean2DBSPTree42);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + location81 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location81.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector96);
        org.junit.Assert.assertTrue("'" + location97 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location97.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion99);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet16.applyTransform(euclidean2DTransform28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        boolean boolean33 = euclidean2DAbstractRegion29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet30);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet14.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane37 = polygonsSet14.intersection(euclidean2DSubHyperplane36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform85 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = polygonsSet40.applyTransform(euclidean2DTransform85);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform87 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion88 = euclidean2DAbstractRegion86.applyTransform(euclidean2DTransform87);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion88);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion13.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side20 = euclidean2DAbstractRegion13.side(euclidean2DHyperplane19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet20.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane67 = polygonsSet65.intersection(euclidean2DSubHyperplane66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion13.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = euclidean2DAbstractRegion13.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList18 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList18);
        double double20 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet19.getVertices();
        boolean boolean22 = polygonsSet19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet19.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet17.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion26 = polygonsSet25.copySelf();
        double double27 = euclidean2DAbstractRegion26.getBoundarySize();
        boolean boolean28 = euclidean2DAbstractRegion26.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet13.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform64 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion65 = polygonsSet52.applyTransform(euclidean2DTransform64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        boolean boolean69 = euclidean2DAbstractRegion65.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet66);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = euclidean2DAbstractRegion65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = euclidean2DAbstractRegion51.checkPoint(euclidean2DVector70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean73 = polygonsSet72.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = polygonsSet72.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        boolean boolean77 = euclidean2DAbstractRegion51.isEmpty(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane79 = euclidean2DAbstractRegion51.intersection(euclidean2DSubHyperplane78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        boolean boolean39 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion38);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform40 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = euclidean2DAbstractRegion38.applyTransform(euclidean2DTransform40);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = euclidean2DAbstractRegion41.copySelf();
        double double43 = euclidean2DAbstractRegion42.getBoundarySize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((-1.0d), (double) (byte) 0, (double) (-1), (double) 10.0f);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray5 = polygonsSet4.getVertices();
        org.junit.Assert.assertNotNull(vector2DArray5);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet67.applyTransform(euclidean2DTransform68);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side71 = polygonsSet67.side(euclidean2DHyperplane70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        boolean boolean81 = polygonsSet80.isEmpty();
        boolean boolean82 = polygonsSet40.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform83 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion84 = polygonsSet40.applyTransform(euclidean2DTransform83);
        org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DRegion85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = polygonsSet40.contains(euclidean2DRegion85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion84);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = polygonsSet17.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet21.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet17.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet17.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree20);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet19.applyTransform(euclidean2DTransform22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet38.buildNew(euclidean2DBSPTree51);
        boolean boolean55 = polygonsSet19.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet19.applyTransform(euclidean2DTransform56);
        boolean boolean58 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet74.buildNew(euclidean2DBSPTree75);
        double double77 = polygonsSet74.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray78 = polygonsSet74.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform79 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion80 = polygonsSet74.applyTransform(euclidean2DTransform79);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = euclidean2DAbstractRegion80.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = euclidean2DAbstractRegion80.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree87 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet88 = polygonsSet86.buildNew(euclidean2DBSPTree87);
        double double89 = polygonsSet86.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray90 = polygonsSet86.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform91 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion92 = polygonsSet86.applyTransform(euclidean2DTransform91);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree94 = euclidean2DAbstractRegion92.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet95 = polygonsSet85.buildNew(euclidean2DBSPTree94);
        boolean boolean96 = polygonsSet73.isEmpty(euclidean2DBSPTree94);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet97 = polygonsSet4.buildNew(euclidean2DBSPTree94);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray78);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion80);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree82);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertNotNull(polygonsSet88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray90);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion92);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree94);
        org.junit.Assert.assertNotNull(polygonsSet95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(polygonsSet97);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        boolean boolean7 = euclidean2DAbstractRegion4.isEmpty();
        double double8 = euclidean2DAbstractRegion4.getSize();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side10 = euclidean2DAbstractRegion4.side(euclidean2DHyperplane9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        boolean boolean81 = polygonsSet80.isEmpty();
        boolean boolean82 = polygonsSet40.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform83 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion84 = polygonsSet40.applyTransform(euclidean2DTransform83);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform85 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = polygonsSet40.applyTransform(euclidean2DTransform85);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion84);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet9.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        boolean boolean26 = euclidean2DAbstractRegion22.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet23);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet8.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet1.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet30.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet1.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side37 = polygonsSet35.side(euclidean2DHyperplane36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(polygonsSet35);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray8 = polygonsSet7.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean10 = polygonsSet9.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform11 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet9.applyTransform(euclidean2DTransform11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet13.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList17 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet19.applyTransform(euclidean2DTransform22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet38.buildNew(euclidean2DBSPTree51);
        boolean boolean55 = polygonsSet19.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet18.buildNew(euclidean2DBSPTree51);
        boolean boolean57 = polygonsSet13.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet9.buildNew(euclidean2DBSPTree51);
        boolean boolean59 = polygonsSet7.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet0.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = polygonsSet0.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertNotNull(vector2DArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        boolean boolean51 = polygonsSet20.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet48.getTree(true);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList51 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet53.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        double double62 = polygonsSet60.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet63.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = polygonsSet63.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet63.getTree(true);
        boolean boolean71 = polygonsSet60.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet59.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        double double77 = polygonsSet75.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = polygonsSet78.buildNew(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector82 = polygonsSet81.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location83 = polygonsSet78.checkPoint(euclidean2DVector82);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree85 = polygonsSet78.getTree(true);
        boolean boolean86 = polygonsSet75.isEmpty(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = polygonsSet74.buildNew(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet88 = polygonsSet72.buildNew(euclidean2DBSPTree85);
        boolean boolean89 = polygonsSet53.isEmpty(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = polygonsSet52.buildNew(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet48.buildNew(euclidean2DBSPTree85);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet80);
        org.junit.Assert.assertNotNull(euclidean2DVector82);
        org.junit.Assert.assertTrue("'" + location83 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location83.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(polygonsSet87);
        org.junit.Assert.assertNotNull(polygonsSet88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(polygonsSet90);
        org.junit.Assert.assertNotNull(polygonsSet92);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray32 = polygonsSet31.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(vector2DArray32);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet51.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform54 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = polygonsSet51.applyTransform(euclidean2DTransform54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = euclidean2DAbstractRegion55.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = euclidean2DAbstractRegion55.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = euclidean2DAbstractRegion58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet50.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane62 = polygonsSet50.intersection(euclidean2DSubHyperplane61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet5.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        double double12 = polygonsSet10.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location18 = polygonsSet13.checkPoint(euclidean2DVector17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = polygonsSet13.getTree(true);
        boolean boolean21 = polygonsSet10.isEmpty(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet9.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet22.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform36 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion37 = polygonsSet24.applyTransform(euclidean2DTransform36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        double double40 = polygonsSet38.getSize();
        boolean boolean41 = euclidean2DAbstractRegion37.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet38);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet22.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet22.getBarycenter();
        boolean boolean45 = polygonsSet5.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet5.applyTransform(euclidean2DTransform46);
        boolean boolean48 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet5);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList49 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location54 = polygonsSet51.checkPoint(euclidean2DVector53);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray55 = polygonsSet51.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet56.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet51.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet51.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        boolean boolean63 = polygonsSet5.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + location18 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location18.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + location54 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location54.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray55);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree58);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        double double6 = polygonsSet0.getBoundarySize();
        boolean boolean7 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        double double12 = polygonsSet10.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location18 = polygonsSet13.checkPoint(euclidean2DVector17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = polygonsSet13.getTree(true);
        boolean boolean21 = polygonsSet10.isEmpty(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet9.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        double double27 = polygonsSet25.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet28.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet28.checkPoint(euclidean2DVector32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet28.getTree(true);
        boolean boolean36 = polygonsSet25.isEmpty(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet24.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet22.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet0.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side42 = polygonsSet0.side(euclidean2DHyperplane41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + location18 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location18.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet40);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        double double18 = polygonsSet15.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet15.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet15.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = euclidean2DAbstractRegion21.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = euclidean2DAbstractRegion21.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        double double30 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray31 = polygonsSet27.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform32 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet27.applyTransform(euclidean2DTransform32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = euclidean2DAbstractRegion33.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet26.buildNew(euclidean2DBSPTree35);
        boolean boolean37 = polygonsSet14.isEmpty(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean39 = polygonsSet38.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform40 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet38.applyTransform(euclidean2DTransform40);
        double double42 = polygonsSet38.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = polygonsSet44.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet44.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = polygonsSet63.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet38.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet14.buildNew(euclidean2DBSPTree65);
        double double69 = polygonsSet14.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray31);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '#', (double) 10L, (double) (short) 1, 0.0d);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane6 = polygonsSet4.intersection(euclidean2DSubHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 0.0f, (double) 100.0f, 0.0d, (double) 1L);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray9 = polygonsSet8.getVertices();
        org.junit.Assert.assertNotNull(vector2DArray9);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet33.applyTransform(euclidean2DTransform45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        boolean boolean63 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        boolean boolean64 = polygonsSet31.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean65 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet29.copySelf();
        double double67 = euclidean2DAbstractRegion66.getBoundarySize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = euclidean2DAbstractRegion66.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = euclidean2DAbstractRegion66.getBarycenter();
        java.lang.Class<?> wildcardClass70 = euclidean2DAbstractRegion66.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet20.buildNew(euclidean2DBSPTree61);
        double double65 = polygonsSet20.getSize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet29.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet29.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        double double35 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        double double42 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        boolean boolean51 = polygonsSet40.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet39.buildNew(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet52.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet52.getTree(true);
        boolean boolean56 = polygonsSet37.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet34.buildNew(euclidean2DBSPTree55);
        double double59 = polygonsSet34.getSize();
        boolean boolean60 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet40.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet40.getTree(false);
        java.lang.Class<?> wildcardClass44 = euclidean2DBSPTree43.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '#', 2.0d, (double) 100.0f, (double) 1L);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane6 = polygonsSet4.intersection(euclidean2DSubHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet0.getTree(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList19 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList19);
        double double21 = polygonsSet20.getSize();
        double double22 = polygonsSet20.getSize();
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet20.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet17.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location44 = polygonsSet40.checkPoint(euclidean2DVector43);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + location44 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location44.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = polygonsSet1.buildNew(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        double double23 = polygonsSet21.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        boolean boolean32 = polygonsSet21.isEmpty(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet18.buildNew(euclidean2DBSPTree31);
        boolean boolean35 = polygonsSet34.isEmpty();
        double double36 = polygonsSet34.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet34.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet39.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList43 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform48 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion49 = polygonsSet45.applyTransform(euclidean2DTransform48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        double double69 = polygonsSet67.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet70.buildNew(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location75 = polygonsSet70.checkPoint(euclidean2DVector74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = polygonsSet70.getTree(true);
        boolean boolean78 = polygonsSet67.isEmpty(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet66.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = polygonsSet64.buildNew(euclidean2DBSPTree77);
        boolean boolean81 = polygonsSet45.isEmpty(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet44.buildNew(euclidean2DBSPTree77);
        boolean boolean83 = polygonsSet39.isEmpty(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet34.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = polygonsSet85.getBarycenter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Region.Location location87 = polygonsSet3.checkPoint(euclidean2DVector86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + location75 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location75.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertNotNull(polygonsSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet11.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        double double29 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet30.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet30.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = polygonsSet30.getTree(true);
        boolean boolean38 = polygonsSet27.isEmpty(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet26.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet24.buildNew(euclidean2DBSPTree37);
        boolean boolean41 = polygonsSet40.isEmpty();
        double double42 = polygonsSet40.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet40.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet45.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList49 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet51.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform54 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = polygonsSet51.applyTransform(euclidean2DTransform54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet61.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location66 = polygonsSet61.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = polygonsSet61.getTree(true);
        boolean boolean69 = polygonsSet58.isEmpty(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = polygonsSet57.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        double double75 = polygonsSet73.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet76.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location81 = polygonsSet76.checkPoint(euclidean2DVector80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet76.getTree(true);
        boolean boolean84 = polygonsSet73.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet72.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet70.buildNew(euclidean2DBSPTree83);
        boolean boolean87 = polygonsSet51.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet88 = polygonsSet50.buildNew(euclidean2DBSPTree83);
        boolean boolean89 = polygonsSet45.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet40.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector92 = polygonsSet91.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location93 = polygonsSet9.checkPoint(euclidean2DVector92);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree48);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + location66 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location66.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(polygonsSet70);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + location81 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location81.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(polygonsSet88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(euclidean2DVector92);
        org.junit.Assert.assertTrue("'" + location93 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location93.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side22 = polygonsSet19.side(euclidean2DHyperplane21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList51 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList51);
        double double53 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray54 = polygonsSet52.getVertices();
        boolean boolean55 = polygonsSet13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet52);
        double double56 = polygonsSet52.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        double double1 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray2 = polygonsSet0.getVertices();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList3 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList3);
        double double5 = polygonsSet4.getSize();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        double double17 = polygonsSet15.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet18.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location23 = polygonsSet18.checkPoint(euclidean2DVector22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = polygonsSet18.getTree(true);
        boolean boolean26 = polygonsSet15.isEmpty(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform27 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion28 = polygonsSet15.applyTransform(euclidean2DTransform27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        double double31 = polygonsSet29.getSize();
        boolean boolean32 = euclidean2DAbstractRegion28.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet14.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet7.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet4.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet38.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        double double45 = polygonsSet43.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet46.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet46.checkPoint(euclidean2DVector50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = polygonsSet46.getTree(true);
        boolean boolean54 = polygonsSet43.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet42.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet38.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet57.getTree(false);
        boolean boolean60 = polygonsSet57.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet4.checkPoint(euclidean2DVector61);
        boolean boolean63 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean65 = polygonsSet64.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet64.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet0.buildNew(euclidean2DBSPTree67);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + location23 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location23.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNull(euclidean2DBSPTree40);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet68);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet4.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet17.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet19.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        boolean boolean36 = euclidean2DAbstractRegion32.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet17.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet17.getBarycenter();
        boolean boolean40 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray41 = polygonsSet17.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet17.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(vector2DArray41);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double5 = polygonsSet4.getSize();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList6 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform11 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet8.applyTransform(euclidean2DTransform11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        double double17 = polygonsSet15.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet18.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location23 = polygonsSet18.checkPoint(euclidean2DVector22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = polygonsSet18.getTree(true);
        boolean boolean26 = polygonsSet15.isEmpty(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet14.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet29.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet27.buildNew(euclidean2DBSPTree40);
        boolean boolean44 = polygonsSet8.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet7.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet45.checkPoint(euclidean2DVector48);
        boolean boolean50 = polygonsSet45.isEmpty();
        boolean boolean51 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet45);
        java.lang.Class<?> wildcardClass52 = polygonsSet45.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + location23 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location23.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet39.checkPoint(euclidean2DVector42);
        double double44 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray45 = polygonsSet39.getVertices();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray45);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        java.lang.Class<?> wildcardClass3 = euclidean2DVector2.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet4.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray7 = polygonsSet4.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(vector2DArray7);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet40.copySelf();
        boolean boolean70 = polygonsSet40.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        double double13 = polygonsSet12.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane15 = polygonsSet12.intersection(euclidean2DSubHyperplane14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        boolean boolean7 = euclidean2DAbstractRegion4.isEmpty();
        double double8 = euclidean2DAbstractRegion4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet17.buildNew(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location22 = polygonsSet17.checkPoint(euclidean2DVector21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet17.getTree(true);
        boolean boolean25 = polygonsSet14.isEmpty(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        boolean boolean27 = polygonsSet13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet26.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet30.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet26.buildNew(euclidean2DBSPTree32);
        boolean boolean34 = euclidean2DAbstractRegion4.isEmpty(euclidean2DBSPTree32);
        double double35 = euclidean2DAbstractRegion4.getBoundarySize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + location22 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location22.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet14.applyTransform(euclidean2DTransform22);
        boolean boolean24 = euclidean2DAbstractRegion12.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        double double38 = polygonsSet36.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet39.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location44 = polygonsSet39.checkPoint(euclidean2DVector43);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = polygonsSet39.getTree(true);
        boolean boolean47 = polygonsSet36.isEmpty(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet35.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet48.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet33.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet66.getTree(false);
        boolean boolean70 = polygonsSet65.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet72.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector78 = polygonsSet77.getBarycenter();
        double double79 = polygonsSet77.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree81 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet80.buildNew(euclidean2DBSPTree81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector84 = polygonsSet83.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location85 = polygonsSet80.checkPoint(euclidean2DVector84);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree87 = polygonsSet80.getTree(true);
        boolean boolean88 = polygonsSet77.isEmpty(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet89 = polygonsSet76.buildNew(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = polygonsSet72.buildNew(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree87);
        boolean boolean92 = polygonsSet65.isEmpty(euclidean2DBSPTree87);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector93 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform94 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion95 = polygonsSet65.applyTransform(euclidean2DTransform94);
        boolean boolean96 = euclidean2DAbstractRegion23.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + location44 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location44.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree74);
        org.junit.Assert.assertNotNull(euclidean2DVector78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertNotNull(euclidean2DVector84);
        org.junit.Assert.assertTrue("'" + location85 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location85.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(polygonsSet89);
        org.junit.Assert.assertNotNull(polygonsSet90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector93);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet40.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray74 = polygonsSet40.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet40.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane78 = polygonsSet40.intersection(euclidean2DSubHyperplane77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray74);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet20.applyTransform(euclidean2DTransform68);
        double double70 = euclidean2DAbstractRegion69.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side72 = euclidean2DAbstractRegion69.side(euclidean2DHyperplane71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((-1.0d), (double) (byte) 0, (double) (-1), (double) 10.0f);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet5.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList9 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet11.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        double double20 = polygonsSet18.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location26 = polygonsSet21.checkPoint(euclidean2DVector25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet21.getTree(true);
        boolean boolean29 = polygonsSet18.isEmpty(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet17.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet32.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet30.buildNew(euclidean2DBSPTree43);
        boolean boolean47 = polygonsSet11.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet10.buildNew(euclidean2DBSPTree43);
        boolean boolean49 = polygonsSet5.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        boolean boolean51 = polygonsSet4.isEmpty(euclidean2DBSPTree43);
        double double52 = polygonsSet4.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + location26 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location26.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.999999999999993d + "'", double52 == 10.999999999999993d);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) -1, 0.0d, (double) (-1L), (double) (byte) 10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet4.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean51 = polygonsSet50.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet50.applyTransform(euclidean2DTransform52);
        double double54 = polygonsSet50.getBoundarySize();
        boolean boolean55 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet50);
        double double56 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet20.getBarycenter();
        boolean boolean58 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray59 = polygonsSet20.getVertices();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(vector2DArray59);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = euclidean2DAbstractRegion6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = euclidean2DAbstractRegion6.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        double double15 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray16 = polygonsSet12.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet12.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = euclidean2DAbstractRegion18.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet11.buildNew(euclidean2DBSPTree20);
        double double22 = polygonsSet11.getSize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree20);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree2);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree2);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet0.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DBSPTree2);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet40.copySelf();
        boolean boolean42 = euclidean2DAbstractRegion41.isEmpty();
        double double43 = euclidean2DAbstractRegion41.getSize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        double double50 = polygonsSet49.getSize();
        boolean boolean51 = polygonsSet49.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList52 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet54.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray58 = polygonsSet54.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet59.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet54.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = polygonsSet62.getTree(false);
        boolean boolean65 = polygonsSet49.isEmpty(euclidean2DBSPTree64);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray58);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray5 = polygonsSet4.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean7 = polygonsSet6.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet6.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet10.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList14 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform19 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet16.applyTransform(euclidean2DTransform19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        boolean boolean34 = polygonsSet23.isEmpty(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet22.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        double double40 = polygonsSet38.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet41.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location46 = polygonsSet41.checkPoint(euclidean2DVector45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet41.getTree(true);
        boolean boolean49 = polygonsSet38.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet37.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet35.buildNew(euclidean2DBSPTree48);
        boolean boolean52 = polygonsSet16.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet15.buildNew(euclidean2DBSPTree48);
        boolean boolean54 = polygonsSet10.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet6.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        boolean boolean57 = polygonsSet4.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet61.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location66 = polygonsSet61.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = polygonsSet61.getTree(true);
        boolean boolean69 = polygonsSet58.isEmpty(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree68);
        boolean boolean71 = polygonsSet70.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet70.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.Region.Location location75 = polygonsSet4.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet4.getBarycenter();
        double double77 = polygonsSet4.getSize();
        org.junit.Assert.assertNotNull(vector2DArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + location46 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location46.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + location66 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location66.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location75 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location75.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2.0d + "'", double77 == 2.0d);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double9 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet8.getBarycenter();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet16.applyTransform(euclidean2DTransform28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        boolean boolean33 = euclidean2DAbstractRegion29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet30);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet14.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion49 = polygonsSet37.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion50 = euclidean2DAbstractRegion49.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = euclidean2DAbstractRegion50.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = euclidean2DAbstractRegion50.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform54 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = euclidean2DAbstractRegion50.applyTransform(euclidean2DTransform54);
        boolean boolean56 = polygonsSet14.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion55);
        double double57 = polygonsSet14.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion49);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion50);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet1.getBarycenter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        double double3 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform4 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet0.applyTransform(euclidean2DTransform4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        boolean boolean43 = euclidean2DAbstractRegion5.isEmpty(euclidean2DBSPTree38);
        boolean boolean44 = euclidean2DAbstractRegion5.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.copySelf();
        boolean boolean7 = euclidean2DAbstractRegion6.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = euclidean2DAbstractRegion6.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane10 = euclidean2DAbstractRegion6.intersection(euclidean2DSubHyperplane9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = polygonsSet4.buildNew(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform7 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = polygonsSet4.applyTransform(euclidean2DTransform7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        boolean boolean40 = polygonsSet4.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet3.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet42.getTree(true);
        org.junit.Assert.assertNotNull(polygonsSet6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = euclidean2DAbstractRegion13.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location26 = polygonsSet21.checkPoint(euclidean2DVector25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet21.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet46.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet44.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet29.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = polygonsSet62.getTree(false);
        boolean boolean66 = polygonsSet61.isEmpty(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        double double75 = polygonsSet73.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet76.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location81 = polygonsSet76.checkPoint(euclidean2DVector80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet76.getTree(true);
        boolean boolean84 = polygonsSet73.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet72.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet68.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree83);
        boolean boolean88 = polygonsSet61.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector89 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion90 = polygonsSet61.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion91 = euclidean2DAbstractRegion90.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree93 = euclidean2DAbstractRegion90.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree93);
        boolean boolean95 = euclidean2DAbstractRegion13.isEmpty(euclidean2DBSPTree93);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane97 = euclidean2DAbstractRegion13.intersection(euclidean2DSubHyperplane96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + location26 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location26.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree70);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + location81 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location81.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector89);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion90);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion91);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side23 = euclidean2DAbstractRegion21.side(euclidean2DHyperplane22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet40.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray42 = polygonsSet40.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet40.getTree(true);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertNotNull(vector2DArray42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
    }
}

