import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side15 = euclidean2DAbstractRegion13.side(euclidean2DHyperplane14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = euclidean2DAbstractRegion20.getTree(true);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        boolean boolean34 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform35 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet20.applyTransform(euclidean2DTransform35);
        boolean boolean37 = polygonsSet20.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        double double45 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet46.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet46.getTree(false);
        boolean boolean52 = polygonsSet0.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray53 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side55 = polygonsSet0.side(euclidean2DHyperplane54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(vector2DArray53);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet1.applyTransform(euclidean2DTransform2);
        java.lang.Class<?> wildcardClass4 = polygonsSet1.getClass();
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        double double45 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet46.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet46.getTree(false);
        boolean boolean52 = polygonsSet0.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet71.getBarycenter();
        double double73 = polygonsSet71.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet74.buildNew(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector78 = polygonsSet77.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location79 = polygonsSet74.checkPoint(euclidean2DVector78);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree81 = polygonsSet74.getTree(true);
        boolean boolean82 = polygonsSet71.isEmpty(euclidean2DBSPTree81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = polygonsSet70.buildNew(euclidean2DBSPTree81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet68.buildNew(euclidean2DBSPTree81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree81);
        boolean boolean86 = polygonsSet53.isEmpty(euclidean2DBSPTree81);
        java.lang.Class<?> wildcardClass87 = euclidean2DBSPTree81.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertNotNull(euclidean2DVector78);
        org.junit.Assert.assertTrue("'" + location79 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location79.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(polygonsSet83);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet0.getTree(false);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        double double26 = polygonsSet20.getBoundarySize();
        boolean boolean27 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray29 = polygonsSet20.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet31.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        double double38 = polygonsSet36.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet39.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location44 = polygonsSet39.checkPoint(euclidean2DVector43);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = polygonsSet39.getTree(true);
        boolean boolean47 = polygonsSet36.isEmpty(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet35.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet31.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = polygonsSet50.getTree(false);
        boolean boolean53 = polygonsSet50.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = polygonsSet50.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet61.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location66 = polygonsSet61.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = polygonsSet61.getTree(true);
        boolean boolean69 = polygonsSet58.isEmpty(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = polygonsSet57.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet71.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet71.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        boolean boolean76 = polygonsSet70.isEmpty(euclidean2DBSPTree74);
        boolean boolean77 = euclidean2DAbstractRegion55.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = polygonsSet20.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane82 = polygonsSet20.intersection(euclidean2DSubHyperplane81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertNotNull(vector2DArray29);
        org.junit.Assert.assertNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + location44 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location44.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + location66 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location66.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(polygonsSet70);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet80);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform26 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion27 = polygonsSet20.applyTransform(euclidean2DTransform26);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = euclidean2DAbstractRegion27.getBarycenter();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion27);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        double double3 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform4 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet0.applyTransform(euclidean2DTransform4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet7.buildNew(euclidean2DBSPTree18);
        boolean boolean21 = euclidean2DAbstractRegion5.isEmpty(euclidean2DBSPTree18);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        boolean boolean7 = euclidean2DAbstractRegion4.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = euclidean2DAbstractRegion4.copySelf();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side10 = euclidean2DAbstractRegion8.side(euclidean2DHyperplane9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet18.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean21 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet20.applyTransform(euclidean2DTransform22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet24.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList28 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet30.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform33 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion34 = polygonsSet30.applyTransform(euclidean2DTransform33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        boolean boolean66 = polygonsSet30.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet29.buildNew(euclidean2DBSPTree62);
        boolean boolean68 = polygonsSet24.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean71 = polygonsSet18.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        double double74 = polygonsSet72.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet75.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector79 = polygonsSet78.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location80 = polygonsSet75.checkPoint(euclidean2DVector79);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = polygonsSet75.getTree(true);
        boolean boolean83 = polygonsSet72.isEmpty(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree82);
        boolean boolean85 = polygonsSet84.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector87 = polygonsSet86.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location88 = polygonsSet84.checkPoint(euclidean2DVector87);
        org.apache.commons.math3.geometry.partitioning.Region.Location location89 = polygonsSet18.checkPoint(euclidean2DVector87);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector90 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location91 = polygonsSet13.checkPoint(euclidean2DVector90);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion34);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertNotNull(euclidean2DVector79);
        org.junit.Assert.assertTrue("'" + location80 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location80.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector87);
        org.junit.Assert.assertTrue("'" + location88 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location88.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location89 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location89.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertNotNull(euclidean2DVector90);
        org.junit.Assert.assertTrue("'" + location91 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location91.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = polygonsSet4.buildNew(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform7 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = polygonsSet4.applyTransform(euclidean2DTransform7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        boolean boolean40 = polygonsSet4.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet3.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet42.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = euclidean2DAbstractRegion43.getTree(true);
        org.junit.Assert.assertNotNull(polygonsSet6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet20.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet20.getTree(false);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet52.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        double double59 = polygonsSet57.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet60.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location65 = polygonsSet60.checkPoint(euclidean2DVector64);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet60.getTree(true);
        boolean boolean68 = polygonsSet57.isEmpty(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet56.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = polygonsSet52.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet71.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet0.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector77 = polygonsSet76.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray78 = polygonsSet76.getVertices();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNull(euclidean2DBSPTree54);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + location65 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location65.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(polygonsSet70);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertNotNull(euclidean2DVector77);
        org.junit.Assert.assertNotNull(vector2DArray78);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet1.getTree(false);
        double double42 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        double double45 = polygonsSet43.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet46.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet46.checkPoint(euclidean2DVector50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = polygonsSet46.getTree(true);
        boolean boolean54 = polygonsSet43.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform55 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion56 = polygonsSet43.applyTransform(euclidean2DTransform55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        double double59 = polygonsSet57.getSize();
        boolean boolean60 = euclidean2DAbstractRegion56.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet57);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform61 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion62 = euclidean2DAbstractRegion56.applyTransform(euclidean2DTransform61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        double double65 = polygonsSet63.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet66.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet66.checkPoint(euclidean2DVector70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet66.getTree(true);
        boolean boolean74 = polygonsSet63.isEmpty(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet63.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector78 = polygonsSet77.getBarycenter();
        double double79 = polygonsSet77.getSize();
        boolean boolean80 = euclidean2DAbstractRegion76.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet77);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector81 = euclidean2DAbstractRegion76.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location82 = euclidean2DAbstractRegion62.checkPoint(euclidean2DVector81);
        org.apache.commons.math3.geometry.partitioning.Region.Location location83 = polygonsSet1.checkPoint(euclidean2DVector81);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion62);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
        org.junit.Assert.assertNotNull(euclidean2DVector78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector81);
        org.junit.Assert.assertTrue("'" + location82 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location82.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location83 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location83.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform7 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = polygonsSet0.applyTransform(euclidean2DTransform7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = euclidean2DAbstractRegion8.applyTransform(euclidean2DTransform9);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.copySelf();
        double double7 = euclidean2DAbstractRegion6.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet8.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = euclidean2DAbstractRegion20.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = euclidean2DAbstractRegion21.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = euclidean2DAbstractRegion21.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList26 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList26);
        double double28 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray29 = polygonsSet27.getVertices();
        boolean boolean30 = polygonsSet27.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet27.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet25.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion34 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform35 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet33.applyTransform(euclidean2DTransform35);
        boolean boolean37 = euclidean2DAbstractRegion6.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform38 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion39 = polygonsSet33.applyTransform(euclidean2DTransform38);
        double double40 = euclidean2DAbstractRegion39.getBoundarySize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion34);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet49.copySelf();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray3 = polygonsSet1.getVertices();
        boolean boolean4 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        double double20 = polygonsSet18.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location26 = polygonsSet21.checkPoint(euclidean2DVector25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet21.getTree(true);
        boolean boolean29 = polygonsSet18.isEmpty(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet17.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet32.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet30.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet15.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        double double50 = polygonsSet48.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet51.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location56 = polygonsSet51.checkPoint(euclidean2DVector55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet51.getTree(true);
        boolean boolean59 = polygonsSet48.isEmpty(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion60 = polygonsSet48.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = euclidean2DAbstractRegion60.copySelf();
        double double62 = euclidean2DAbstractRegion60.getSize();
        boolean boolean63 = polygonsSet15.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion60);
        boolean boolean64 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion60);
        double double65 = euclidean2DAbstractRegion60.getSize();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + location26 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location26.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + location56 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location56.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion60);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree19);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet40.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray42 = polygonsSet40.getVertices();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertNotNull(vector2DArray42);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray24 = polygonsSet20.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 0.0f, (double) (byte) 100, (double) 0.0f);
        boolean boolean30 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet32.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet45.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet45.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet45.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet56.checkPoint(euclidean2DVector60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(true);
        boolean boolean64 = polygonsSet53.isEmpty(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet52.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet65.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = polygonsSet65.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet65.getTree(true);
        boolean boolean71 = polygonsSet45.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet20.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side75 = polygonsSet73.side(euclidean2DHyperplane74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(vector2DArray24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree48);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree68);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(polygonsSet73);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet1.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet1.applyTransform(euclidean2DTransform42);
        boolean boolean44 = polygonsSet1.isEmpty();
        double double45 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side47 = polygonsSet1.side(euclidean2DHyperplane46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet7.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList11 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform16 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet13.applyTransform(euclidean2DTransform16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet32.buildNew(euclidean2DBSPTree45);
        boolean boolean49 = polygonsSet13.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet12.buildNew(euclidean2DBSPTree45);
        boolean boolean51 = polygonsSet7.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet56.checkPoint(euclidean2DVector60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(true);
        boolean boolean64 = polygonsSet53.isEmpty(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform65 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet53.applyTransform(euclidean2DTransform65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        double double69 = polygonsSet67.getSize();
        boolean boolean70 = euclidean2DAbstractRegion66.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet67);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean73 = polygonsSet72.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = polygonsSet72.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet67.buildNew(euclidean2DBSPTree75);
        boolean boolean78 = polygonsSet52.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet67);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform79 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion80 = polygonsSet52.applyTransform(euclidean2DTransform79);
        boolean boolean81 = euclidean2DAbstractRegion80.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree75);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet1.getBarycenter();
        double double42 = polygonsSet1.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform43 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = polygonsSet1.applyTransform(euclidean2DTransform43);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet14.applyTransform(euclidean2DTransform22);
        boolean boolean24 = euclidean2DAbstractRegion12.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        double double27 = polygonsSet25.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet28.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet28.checkPoint(euclidean2DVector32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet28.getTree(true);
        boolean boolean36 = polygonsSet25.isEmpty(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet25.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        boolean boolean42 = euclidean2DAbstractRegion38.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet39);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform43 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = euclidean2DAbstractRegion38.applyTransform(euclidean2DTransform43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet45.applyTransform(euclidean2DTransform57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        boolean boolean62 = euclidean2DAbstractRegion58.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet59);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = euclidean2DAbstractRegion58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion44.checkPoint(euclidean2DVector63);
        boolean boolean65 = euclidean2DAbstractRegion44.isEmpty();
        boolean boolean66 = euclidean2DAbstractRegion12.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion44);
        double double67 = euclidean2DAbstractRegion12.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        boolean boolean7 = euclidean2DAbstractRegion4.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = euclidean2DAbstractRegion4.copySelf();
        boolean boolean9 = euclidean2DAbstractRegion4.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray43 = polygonsSet40.getVertices();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(vector2DArray43);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = polygonsSet4.buildNew(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform7 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = polygonsSet4.applyTransform(euclidean2DTransform7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        boolean boolean40 = polygonsSet4.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet3.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet42.copySelf();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side45 = polygonsSet42.side(euclidean2DHyperplane44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, (double) '#', 1.0d, (double) '4');
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side6 = polygonsSet4.side(euclidean2DHyperplane5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet0.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet0.getTree(false);
        double double68 = polygonsSet0.getSize();
        double double69 = polygonsSet0.getBoundarySize();
        java.lang.Class<?> wildcardClass70 = polygonsSet0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (-1), 79.99999999999999d, 6.0d, (double) ' ');
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet24.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet28.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet32.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet28.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        boolean boolean50 = polygonsSet47.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet51.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location56 = polygonsSet51.checkPoint(euclidean2DVector55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet51.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet47.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        double double63 = polygonsSet61.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet64.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location69 = polygonsSet64.checkPoint(euclidean2DVector68);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet64.getTree(true);
        boolean boolean72 = polygonsSet61.isEmpty(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform73 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion74 = polygonsSet61.applyTransform(euclidean2DTransform73);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion75 = polygonsSet61.copySelf();
        boolean boolean76 = polygonsSet47.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet61);
        double double77 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector79 = polygonsSet78.getBarycenter();
        double double80 = polygonsSet78.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = polygonsSet81.buildNew(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector85 = polygonsSet84.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location86 = polygonsSet81.checkPoint(euclidean2DVector85);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree88 = polygonsSet81.getTree(true);
        boolean boolean89 = polygonsSet78.isEmpty(euclidean2DBSPTree88);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree88);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet47.buildNew(euclidean2DBSPTree88);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree88);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet93 = polygonsSet24.buildNew(euclidean2DBSPTree88);
        java.lang.Class<?> wildcardClass94 = polygonsSet24.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertNull(euclidean2DBSPTree30);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + location56 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location56.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree58);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + location69 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location69.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion74);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet83);
        org.junit.Assert.assertNotNull(euclidean2DVector85);
        org.junit.Assert.assertTrue("'" + location86 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location86.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(polygonsSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet39.checkPoint(euclidean2DVector42);
        boolean boolean44 = polygonsSet39.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray45 = polygonsSet39.getVertices();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(vector2DArray45);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet33.applyTransform(euclidean2DTransform45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        boolean boolean63 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        boolean boolean64 = polygonsSet31.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean65 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet29.copySelf();
        org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DRegion67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = polygonsSet29.contains(euclidean2DRegion67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet44.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        boolean boolean61 = euclidean2DAbstractRegion57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet58);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet43.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion38.checkPoint(euclidean2DVector62);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList65 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList65);
        double double67 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray68 = polygonsSet66.getVertices();
        boolean boolean69 = polygonsSet66.isEmpty();
        boolean boolean70 = euclidean2DAbstractRegion38.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean72 = polygonsSet71.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet71.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        boolean boolean77 = euclidean2DAbstractRegion38.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = euclidean2DAbstractRegion38.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet14.applyTransform(euclidean2DTransform22);
        boolean boolean24 = euclidean2DAbstractRegion12.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        double double27 = polygonsSet25.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet28.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet28.checkPoint(euclidean2DVector32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet28.getTree(true);
        boolean boolean36 = polygonsSet25.isEmpty(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet25.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        boolean boolean42 = euclidean2DAbstractRegion38.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet39);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform43 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = euclidean2DAbstractRegion38.applyTransform(euclidean2DTransform43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet45.applyTransform(euclidean2DTransform57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        boolean boolean62 = euclidean2DAbstractRegion58.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet59);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = euclidean2DAbstractRegion58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion44.checkPoint(euclidean2DVector63);
        boolean boolean65 = euclidean2DAbstractRegion44.isEmpty();
        boolean boolean66 = euclidean2DAbstractRegion12.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion44);
        boolean boolean67 = euclidean2DAbstractRegion44.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet8.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        boolean boolean25 = euclidean2DAbstractRegion21.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet7.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet0.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet30.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet30.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet49.getTree(false);
        boolean boolean52 = polygonsSet49.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion54 = polygonsSet49.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform55 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion56 = polygonsSet49.applyTransform(euclidean2DTransform55);
        boolean boolean57 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion56);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNull(euclidean2DBSPTree32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion54);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray7 = polygonsSet0.getVertices();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(vector2DArray7);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.copySelf();
        double double7 = euclidean2DAbstractRegion6.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet8.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = euclidean2DAbstractRegion20.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = euclidean2DAbstractRegion21.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = euclidean2DAbstractRegion21.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList26 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList26);
        double double28 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray29 = polygonsSet27.getVertices();
        boolean boolean30 = polygonsSet27.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet27.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet25.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion34 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform35 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet33.applyTransform(euclidean2DTransform35);
        boolean boolean37 = euclidean2DAbstractRegion6.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.Region.Location location44 = euclidean2DAbstractRegion6.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side46 = euclidean2DAbstractRegion6.side(euclidean2DHyperplane45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion34);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location44 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location44.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform40 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet39.applyTransform(euclidean2DTransform40);
        double double42 = polygonsSet39.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray43 = polygonsSet39.getVertices();
        double double44 = polygonsSet39.getBoundarySize();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet11.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet24.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet24.getTree(true);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList28 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList28);
        double double30 = polygonsSet29.getSize();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        double double42 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        boolean boolean51 = polygonsSet40.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet40.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        double double56 = polygonsSet54.getSize();
        boolean boolean57 = euclidean2DAbstractRegion53.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet54);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet39.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet32.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet29.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet24.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet0.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet0.buildNew(euclidean2DBSPTree64);
        // The following exception was thrown during execution in test generation
        try {
            double double66 = polygonsSet65.getBoundarySize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet65);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet48.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = polygonsSet51.getTree(false);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane55 = polygonsSet51.intersection(euclidean2DSubHyperplane54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        double double3 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform4 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet0.applyTransform(euclidean2DTransform4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        boolean boolean43 = euclidean2DAbstractRegion5.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform44 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion45 = euclidean2DAbstractRegion5.applyTransform(euclidean2DTransform44);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = euclidean2DAbstractRegion5.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion45);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 100L, 0.0d, (double) '4', (double) ' ');
        double double5 = polygonsSet4.getBoundarySize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 240.0d + "'", double5 == 240.0d);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet4.copySelf();
        double double6 = polygonsSet4.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        double double20 = polygonsSet18.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location26 = polygonsSet21.checkPoint(euclidean2DVector25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet21.getTree(true);
        boolean boolean29 = polygonsSet18.isEmpty(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet17.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet32.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet30.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet15.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet48.getTree(false);
        boolean boolean52 = polygonsSet47.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = polygonsSet54.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet58.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet54.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        boolean boolean74 = polygonsSet47.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet75.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector79 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location80 = polygonsSet47.checkPoint(euclidean2DVector79);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray81 = polygonsSet47.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet82.buildNew(euclidean2DBSPTree83);
        double double85 = polygonsSet82.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray86 = polygonsSet82.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform87 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion88 = polygonsSet82.applyTransform(euclidean2DTransform87);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree90 = euclidean2DAbstractRegion88.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet47.buildNew(euclidean2DBSPTree90);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet4.buildNew(euclidean2DBSPTree90);
        double double93 = polygonsSet92.getBoundarySize();
        double double94 = polygonsSet92.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 6.0d + "'", double6 == 6.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + location26 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location26.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree56);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertNotNull(euclidean2DVector79);
        org.junit.Assert.assertTrue("'" + location80 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location80.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray86);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion88);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree90);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(polygonsSet92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray2 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray3 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet18.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet18.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray22 = polygonsSet18.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform23 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion24 = polygonsSet18.applyTransform(euclidean2DTransform23);
        boolean boolean25 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion24);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane27 = euclidean2DAbstractRegion24.intersection(euclidean2DSubHyperplane26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(vector2DArray2);
        org.junit.Assert.assertNotNull(vector2DArray3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertNotNull(vector2DArray22);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet8.getBarycenter();
        double double42 = polygonsSet8.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        double double45 = polygonsSet43.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet46.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet46.checkPoint(euclidean2DVector50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = polygonsSet46.getTree(true);
        boolean boolean54 = polygonsSet43.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = polygonsSet43.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion56 = euclidean2DAbstractRegion55.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = euclidean2DAbstractRegion56.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform58 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = euclidean2DAbstractRegion56.applyTransform(euclidean2DTransform58);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList60 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location65 = polygonsSet62.checkPoint(euclidean2DVector64);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray66 = polygonsSet62.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = euclidean2DAbstractRegion59.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.Region.Location location69 = polygonsSet8.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform70 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion71 = polygonsSet8.applyTransform(euclidean2DTransform70);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion56);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + location65 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location65.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray66);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location69 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location69.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion71);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet44.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        boolean boolean61 = euclidean2DAbstractRegion57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet58);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet43.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion38.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = polygonsSet65.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet65.getBarycenter();
        boolean boolean70 = euclidean2DAbstractRegion38.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet65);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet65.getTree(true);
        double double73 = polygonsSet65.getBoundarySize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree68);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet2.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet2.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet2.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean9 = polygonsSet8.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform10 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion11 = polygonsSet8.applyTransform(euclidean2DTransform10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet8.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet17.buildNew(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location22 = polygonsSet17.checkPoint(euclidean2DVector21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet17.getTree(true);
        boolean boolean25 = polygonsSet14.isEmpty(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform26 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion27 = polygonsSet14.applyTransform(euclidean2DTransform26);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion28 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        boolean boolean42 = polygonsSet31.isEmpty(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet30.buildNew(euclidean2DBSPTree41);
        boolean boolean44 = polygonsSet14.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform59 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion60 = polygonsSet47.applyTransform(euclidean2DTransform59);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = polygonsSet47.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        double double66 = polygonsSet64.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet67.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location72 = polygonsSet67.checkPoint(euclidean2DVector71);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet67.getTree(true);
        boolean boolean75 = polygonsSet64.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet63.buildNew(euclidean2DBSPTree74);
        boolean boolean77 = polygonsSet47.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet76);
        boolean boolean78 = polygonsSet45.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet47);
        boolean boolean79 = polygonsSet43.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet47);
        boolean boolean80 = polygonsSet8.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = polygonsSet8.getTree(false);
        boolean boolean83 = polygonsSet2.isEmpty(euclidean2DBSPTree82);
        boolean boolean84 = polygonsSet2.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion11);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + location22 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location22.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion27);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion28);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion60);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + location72 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location72.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side52 = polygonsSet49.side(euclidean2DHyperplane51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        boolean boolean29 = polygonsSet0.isEmpty();
        double double30 = polygonsSet0.getSize();
        java.lang.Class<?> wildcardClass31 = polygonsSet0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet0.getTree(true);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree9);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet5.applyTransform(euclidean2DTransform8);
        double double10 = polygonsSet5.getBoundarySize();
        boolean boolean11 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet12.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet16.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList20 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform25 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion26 = polygonsSet22.applyTransform(euclidean2DTransform25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet32.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location37 = polygonsSet32.checkPoint(euclidean2DVector36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet32.getTree(true);
        boolean boolean40 = polygonsSet29.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet28.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet41.buildNew(euclidean2DBSPTree54);
        boolean boolean58 = polygonsSet22.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet21.buildNew(euclidean2DBSPTree54);
        boolean boolean60 = polygonsSet16.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet12.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = polygonsSet63.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = polygonsSet67.buildNew(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet63.buildNew(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet82.getTree(false);
        boolean boolean85 = polygonsSet61.isEmpty(euclidean2DBSPTree84);
        boolean boolean86 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet61);
        double double87 = polygonsSet0.getSize();
        org.junit.Assert.assertNotNull(euclidean2DBSPTree2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion26);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + location37 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location37.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNull(euclidean2DBSPTree65);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(polygonsSet80);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray15 = polygonsSet14.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet16.getBarycenter();
        double double19 = polygonsSet16.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet16.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform25 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion26 = polygonsSet22.applyTransform(euclidean2DTransform25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet32.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location37 = polygonsSet32.checkPoint(euclidean2DVector36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet32.getTree(true);
        boolean boolean40 = polygonsSet29.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet28.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet41.buildNew(euclidean2DBSPTree54);
        boolean boolean58 = polygonsSet22.isEmpty(euclidean2DBSPTree54);
        boolean boolean59 = euclidean2DAbstractRegion21.isEmpty(euclidean2DBSPTree54);
        boolean boolean60 = polygonsSet14.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean62 = polygonsSet61.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform63 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion64 = polygonsSet61.applyTransform(euclidean2DTransform63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet61.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = polygonsSet61.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform69 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion70 = polygonsSet61.applyTransform(euclidean2DTransform69);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet61.getTree(false);
        boolean boolean73 = polygonsSet14.isEmpty(euclidean2DBSPTree72);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(vector2DArray15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion26);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + location37 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location37.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion64);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion70);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        double double64 = polygonsSet30.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet40.copySelf();
        boolean boolean42 = polygonsSet40.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet4.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet4.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(99.9999999999994d, 0.0d, 2.0d, (double) (byte) 1);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        boolean boolean45 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet0.getBarycenter();
        boolean boolean47 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform48 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion49 = polygonsSet0.applyTransform(euclidean2DTransform48);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion49);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        double double50 = polygonsSet48.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet51.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location56 = polygonsSet51.checkPoint(euclidean2DVector55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet51.getTree(true);
        boolean boolean59 = polygonsSet48.isEmpty(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet47.buildNew(euclidean2DBSPTree58);
        boolean boolean61 = polygonsSet45.isEmpty(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray62 = polygonsSet45.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + location56 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location56.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(vector2DArray62);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        double double14 = euclidean2DAbstractRegion12.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = euclidean2DAbstractRegion12.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet2.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet2.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet7.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet2.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet10.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet13.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet10.buildNew(euclidean2DBSPTree23);
        double double26 = polygonsSet10.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree9);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet19.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray22 = polygonsSet19.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet19.getBarycenter();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertNotNull(vector2DArray22);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet17.getVertices();
        boolean boolean20 = polygonsSet17.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet17.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet17.getTree(false);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane25 = polygonsSet17.intersection(euclidean2DSubHyperplane24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray51 = polygonsSet50.getVertices();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(vector2DArray51);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray10 = polygonsSet9.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean12 = polygonsSet11.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet11.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet15.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList19 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet21.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        double double45 = polygonsSet43.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet46.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet46.checkPoint(euclidean2DVector50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = polygonsSet46.getTree(true);
        boolean boolean54 = polygonsSet43.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet42.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet40.buildNew(euclidean2DBSPTree53);
        boolean boolean57 = polygonsSet21.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet20.buildNew(euclidean2DBSPTree53);
        boolean boolean59 = polygonsSet15.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet11.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        boolean boolean62 = polygonsSet9.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        double double65 = polygonsSet63.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet66.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet66.checkPoint(euclidean2DVector70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet66.getTree(true);
        boolean boolean74 = polygonsSet63.isEmpty(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree73);
        boolean boolean76 = polygonsSet75.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector78 = polygonsSet77.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location79 = polygonsSet75.checkPoint(euclidean2DVector78);
        org.apache.commons.math3.geometry.partitioning.Region.Location location80 = polygonsSet9.checkPoint(euclidean2DVector78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = polygonsSet81.buildNew(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector85 = polygonsSet84.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location86 = polygonsSet81.checkPoint(euclidean2DVector85);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree88 = polygonsSet81.getTree(true);
        boolean boolean89 = polygonsSet9.isEmpty(euclidean2DBSPTree88);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector91 = polygonsSet90.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree93 = polygonsSet90.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree93);
        boolean boolean95 = polygonsSet9.isEmpty(euclidean2DBSPTree93);
        boolean boolean96 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet9);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(vector2DArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector78);
        org.junit.Assert.assertTrue("'" + location79 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location79.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location80 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location80.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertNotNull(polygonsSet83);
        org.junit.Assert.assertNotNull(euclidean2DVector85);
        org.junit.Assert.assertTrue("'" + location86 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location86.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector91);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        double double29 = polygonsSet28.getSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        double double26 = polygonsSet20.getBoundarySize();
        boolean boolean27 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet20.getBarycenter();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList29 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList29);
        double double31 = polygonsSet30.getSize();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        double double40 = polygonsSet38.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet41.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location46 = polygonsSet41.checkPoint(euclidean2DVector45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet41.getTree(true);
        boolean boolean49 = polygonsSet38.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform50 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet38.applyTransform(euclidean2DTransform50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        boolean boolean55 = euclidean2DAbstractRegion51.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet52);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet52.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet37.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet30.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet59.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet30.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet65.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet20.buildNew(euclidean2DBSPTree67);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + location46 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location46.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet68);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet2.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet2.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet7.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet2.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet10.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet13.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet10.buildNew(euclidean2DBSPTree23);
        double double26 = polygonsSet25.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane28 = polygonsSet25.intersection(euclidean2DSubHyperplane27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree9);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = null;
        org.apache.commons.math3.geometry.partitioning.Region.Location location18 = polygonsSet14.checkPoint(euclidean2DVector17);
        boolean boolean19 = polygonsSet14.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean21 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet20.applyTransform(euclidean2DTransform22);
        double double24 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet26.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        boolean boolean42 = polygonsSet31.isEmpty(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet30.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet26.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet45.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet20.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet20.getTree(false);
        boolean boolean51 = polygonsSet14.isEmpty(euclidean2DBSPTree50);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertTrue("'" + location18 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location18.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree28);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet0.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray16 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet0.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet0.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(vector2DArray16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane8 = polygonsSet0.intersection(euclidean2DSubHyperplane7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet30.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        boolean boolean47 = euclidean2DAbstractRegion32.isEmpty(euclidean2DBSPTree43);
        java.lang.Class<?> wildcardClass48 = euclidean2DBSPTree43.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet17.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform7 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = euclidean2DAbstractRegion4.applyTransform(euclidean2DTransform7);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = euclidean2DAbstractRegion4.getBarycenter();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet7.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList11 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform16 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet13.applyTransform(euclidean2DTransform16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet32.buildNew(euclidean2DBSPTree45);
        boolean boolean49 = polygonsSet13.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet12.buildNew(euclidean2DBSPTree45);
        boolean boolean51 = polygonsSet7.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        double double53 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform54 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = polygonsSet0.applyTransform(euclidean2DTransform54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet0.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        double double76 = polygonsSet74.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet77.buildNew(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector81 = polygonsSet80.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location82 = polygonsSet77.checkPoint(euclidean2DVector81);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet77.getTree(true);
        boolean boolean85 = polygonsSet74.isEmpty(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet73.buildNew(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector88 = polygonsSet87.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree90 = polygonsSet87.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree90);
        boolean boolean92 = polygonsSet86.isEmpty(euclidean2DBSPTree90);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector93 = polygonsSet86.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location94 = polygonsSet71.checkPoint(euclidean2DVector93);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertNotNull(euclidean2DVector81);
        org.junit.Assert.assertTrue("'" + location82 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location82.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertNotNull(euclidean2DVector88);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector93);
        org.junit.Assert.assertTrue("'" + location94 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location94.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 100.0f, (double) 1L, 0.0d, (double) (-1.0f));
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet5.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet11.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        double double29 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet30.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet30.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = polygonsSet30.getTree(true);
        boolean boolean38 = polygonsSet27.isEmpty(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet26.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet24.buildNew(euclidean2DBSPTree37);
        boolean boolean41 = polygonsSet5.isEmpty(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet4.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet42.getTree(false);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet9.applyTransform(euclidean2DTransform12);
        boolean boolean14 = polygonsSet8.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion13);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet8.getTree(true);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet0.applyTransform(euclidean2DTransform14);
        boolean boolean16 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet0.applyTransform(euclidean2DTransform17);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet20.getBarycenter();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet9.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        boolean boolean26 = euclidean2DAbstractRegion22.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet23);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet8.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet1.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet30.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet1.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        double double37 = polygonsSet36.getSize();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '#', (double) 10, (double) 100L, (double) (short) 10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet4.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet4.applyTransform(euclidean2DTransform5);
        double double7 = euclidean2DAbstractRegion6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree23);
        boolean boolean26 = polygonsSet12.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet25);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray27 = polygonsSet25.getVertices();
        boolean boolean28 = polygonsSet25.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray29 = polygonsSet25.getVertices();
        boolean boolean30 = euclidean2DAbstractRegion6.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet25);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(vector2DArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(vector2DArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList18 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList18);
        double double20 = polygonsSet19.getSize();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet30.applyTransform(euclidean2DTransform42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        boolean boolean47 = euclidean2DAbstractRegion43.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet44);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet29.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet22.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet19.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet14.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        double double56 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray57 = polygonsSet53.getVertices();
        boolean boolean58 = polygonsSet53.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = polygonsSet53.copySelf();
        boolean boolean60 = euclidean2DAbstractRegion59.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = euclidean2DAbstractRegion59.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet14.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = polygonsSet14.getTree(false);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree65);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet8.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        boolean boolean25 = euclidean2DAbstractRegion21.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet7.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet0.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform29 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion30 = polygonsSet0.applyTransform(euclidean2DTransform29);
        double double31 = polygonsSet0.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 0, (double) 'a', (double) 10L, (double) (short) 100);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 10L, (double) (byte) 0, (double) '4', (double) (-1));
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet8.getTree(false);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (-1L), 0.0d, (double) (short) 1, 10.0d);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet4.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet6.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet6.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location23 = euclidean2DAbstractRegion5.checkPoint(euclidean2DVector22);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + location23 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.OUTSIDE + "'", location23.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.OUTSIDE));
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet37.isEmpty();
        double double39 = polygonsSet37.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet37.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean43 = polygonsSet42.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform44 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion45 = polygonsSet42.applyTransform(euclidean2DTransform44);
        double double46 = polygonsSet42.getBoundarySize();
        boolean boolean47 = polygonsSet42.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform51 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion52 = polygonsSet48.applyTransform(euclidean2DTransform51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        double double57 = polygonsSet55.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet58.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet58.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = polygonsSet58.getTree(true);
        boolean boolean66 = polygonsSet55.isEmpty(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet54.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        double double72 = polygonsSet70.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet73.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector77 = polygonsSet76.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location78 = polygonsSet73.checkPoint(euclidean2DVector77);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = polygonsSet73.getTree(true);
        boolean boolean81 = polygonsSet70.isEmpty(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet69.buildNew(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = polygonsSet67.buildNew(euclidean2DBSPTree80);
        boolean boolean84 = polygonsSet48.isEmpty(euclidean2DBSPTree80);
        boolean boolean85 = polygonsSet42.isEmpty(euclidean2DBSPTree80);
        double double86 = polygonsSet42.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree88 = polygonsSet42.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet89 = polygonsSet37.buildNew(euclidean2DBSPTree88);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree88);
        boolean boolean91 = polygonsSet0.isEmpty(euclidean2DBSPTree88);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray92 = polygonsSet0.getVertices();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion52);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(euclidean2DVector77);
        org.junit.Assert.assertTrue("'" + location78 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location78.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertNotNull(polygonsSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree88);
        org.junit.Assert.assertNotNull(polygonsSet89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(vector2DArray92);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet10.getTree(true);
        boolean boolean15 = euclidean2DAbstractRegion9.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (short) 10, (double) 1, (double) 100.0f, (double) (byte) 0);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        double double7 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet0.getTree(true);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree9);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet18.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location23 = polygonsSet18.checkPoint(euclidean2DVector22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = polygonsSet18.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet32.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location37 = polygonsSet32.checkPoint(euclidean2DVector36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet32.getTree(true);
        boolean boolean40 = polygonsSet29.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet28.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet41.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet26.buildNew(euclidean2DBSPTree54);
        boolean boolean59 = polygonsSet14.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion60 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = euclidean2DAbstractRegion60.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = euclidean2DAbstractRegion60.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = euclidean2DAbstractRegion60.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + location23 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location23.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + location37 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location37.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion60);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet2.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet2.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet7.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet2.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet2.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet2.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet25.applyTransform(euclidean2DTransform28);
        boolean boolean30 = polygonsSet24.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion29);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray31 = polygonsSet24.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean33 = polygonsSet32.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform34 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion35 = polygonsSet32.applyTransform(euclidean2DTransform34);
        double double36 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet32.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet32.getTree(true);
        boolean boolean41 = polygonsSet24.isEmpty(euclidean2DBSPTree40);
        boolean boolean42 = polygonsSet15.isEmpty(euclidean2DBSPTree40);
        boolean boolean43 = polygonsSet15.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree9);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(vector2DArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = euclidean2DAbstractRegion19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = euclidean2DAbstractRegion19.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = euclidean2DAbstractRegion22.getTree(false);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet1.getBarycenter();
        double double42 = polygonsSet1.getBoundarySize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet1.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = polygonsSet44.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet1.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet1.getBarycenter();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree46);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet0.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform66 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion67 = polygonsSet65.applyTransform(euclidean2DTransform66);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList68 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet71.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet70.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet65.checkPoint(euclidean2DVector72);
        java.lang.Class<?> wildcardClass75 = location74.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion67);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet1.copySelf();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        double double5 = polygonsSet0.getSize();
        double double6 = polygonsSet0.getSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        boolean boolean81 = polygonsSet80.isEmpty();
        boolean boolean82 = polygonsSet40.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        double double83 = polygonsSet40.getSize();
        boolean boolean84 = polygonsSet40.isEmpty();
        java.lang.Class<?> wildcardClass85 = polygonsSet40.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        double double6 = polygonsSet0.getBoundarySize();
        double double7 = polygonsSet0.getBoundarySize();
        double double8 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet0.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet11.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = euclidean2DAbstractRegion15.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet0.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane20 = polygonsSet0.intersection(euclidean2DSubHyperplane19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(polygonsSet18);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet2.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet2.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet7.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet2.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet2.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet2.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray16 = polygonsSet15.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree9);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertNotNull(vector2DArray16);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet44.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        boolean boolean61 = euclidean2DAbstractRegion57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet58);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet43.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = euclidean2DAbstractRegion38.checkPoint(euclidean2DVector62);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList65 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList65);
        double double67 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray68 = polygonsSet66.getVertices();
        boolean boolean69 = polygonsSet66.isEmpty();
        boolean boolean70 = euclidean2DAbstractRegion38.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean72 = polygonsSet71.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet71.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        boolean boolean77 = euclidean2DAbstractRegion38.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = euclidean2DAbstractRegion38.getTree(false);
        java.lang.Class<?> wildcardClass80 = euclidean2DAbstractRegion38.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '#', (double) 10L, (double) (short) 1, 0.0d);
        boolean boolean5 = polygonsSet4.isEmpty();
        java.lang.Class<?> wildcardClass6 = polygonsSet4.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray46 = polygonsSet0.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertNotNull(vector2DArray46);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray3 = polygonsSet1.getVertices();
        boolean boolean4 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform7 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = polygonsSet1.applyTransform(euclidean2DTransform7);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        boolean boolean13 = polygonsSet12.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet12.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet12.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = euclidean2DAbstractRegion18.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = euclidean2DAbstractRegion18.getTree(false);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree20);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList41 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList41);
        boolean boolean54 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = polygonsSet53.getTree(false);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree56);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        double double5 = polygonsSet3.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location11 = polygonsSet6.checkPoint(euclidean2DVector10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet6.getTree(true);
        boolean boolean14 = polygonsSet3.isEmpty(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet3.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet3.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        boolean boolean33 = polygonsSet3.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet32);
        boolean boolean34 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean36 = polygonsSet35.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet35.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet3.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet41.getTree(false);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + location11 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location11.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet0.getBarycenter();
        double double6 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane8 = polygonsSet0.intersection(euclidean2DSubHyperplane7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet19.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        boolean boolean36 = euclidean2DAbstractRegion32.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = euclidean2DAbstractRegion32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet14.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion39 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet14.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion39);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '4', (double) 100, (double) (byte) -1, (double) 0L);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet17.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet17.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet38.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet36.buildNew(euclidean2DBSPTree49);
        double double53 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion54 = polygonsSet52.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean56 = polygonsSet55.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet55.applyTransform(euclidean2DTransform57);
        double double59 = polygonsSet55.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet61.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet61.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = polygonsSet80.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = polygonsSet55.buildNew(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree85 = polygonsSet55.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet52.buildNew(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree85);
        boolean boolean88 = polygonsSet17.isEmpty(euclidean2DBSPTree85);
        boolean boolean89 = polygonsSet4.isEmpty(euclidean2DBSPTree85);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree85);
        double double91 = polygonsSet90.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree82);
        org.junit.Assert.assertNotNull(polygonsSet83);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree85);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        boolean boolean15 = polygonsSet4.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet3.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet16.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet16.getTree(true);
        boolean boolean20 = polygonsSet1.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        java.lang.Class<?> wildcardClass23 = euclidean2DVector22.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = polygonsSet40.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray74 = polygonsSet40.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet75.buildNew(euclidean2DBSPTree76);
        double double78 = polygonsSet75.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray79 = polygonsSet75.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform80 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion81 = polygonsSet75.applyTransform(euclidean2DTransform80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = euclidean2DAbstractRegion81.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform85 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = polygonsSet84.applyTransform(euclidean2DTransform85);
        boolean boolean87 = polygonsSet84.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray74);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray79);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion81);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        double double6 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        double double10 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray11 = polygonsSet7.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet7.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = euclidean2DAbstractRegion13.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = euclidean2DAbstractRegion13.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        double double22 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray23 = polygonsSet19.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet19.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = euclidean2DAbstractRegion25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet18.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray11);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray23);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(polygonsSet29);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet31.getTree(false);
        boolean boolean35 = polygonsSet30.isEmpty(euclidean2DBSPTree34);
        double double36 = polygonsSet30.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet30.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform39 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion40 = polygonsSet30.applyTransform(euclidean2DTransform39);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet30.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion40);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet8.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet8.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet27.getTree(false);
        boolean boolean30 = polygonsSet27.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        boolean boolean41 = polygonsSet27.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet27.applyTransform(euclidean2DTransform42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet27.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet46);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        double double18 = polygonsSet15.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet15.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet15.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = euclidean2DAbstractRegion21.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = euclidean2DAbstractRegion21.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        double double30 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray31 = polygonsSet27.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform32 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet27.applyTransform(euclidean2DTransform32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = euclidean2DAbstractRegion33.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet26.buildNew(euclidean2DBSPTree35);
        boolean boolean37 = polygonsSet14.isEmpty(euclidean2DBSPTree35);
        double double38 = polygonsSet14.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray31);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet28.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform30 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion31 = euclidean2DAbstractRegion29.applyTransform(euclidean2DTransform30);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = euclidean2DAbstractRegion29.getBarycenter();
        boolean boolean33 = euclidean2DAbstractRegion29.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side35 = euclidean2DAbstractRegion29.side(euclidean2DHyperplane34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion31);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        double double18 = polygonsSet14.getSize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform32 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet20.applyTransform(euclidean2DTransform32);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion34 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        boolean boolean50 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet56.checkPoint(euclidean2DVector60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(true);
        boolean boolean64 = polygonsSet53.isEmpty(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform65 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet53.applyTransform(euclidean2DTransform65);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion67 = polygonsSet53.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        double double72 = polygonsSet70.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet73.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector77 = polygonsSet76.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location78 = polygonsSet73.checkPoint(euclidean2DVector77);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = polygonsSet73.getTree(true);
        boolean boolean81 = polygonsSet70.isEmpty(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet69.buildNew(euclidean2DBSPTree80);
        boolean boolean83 = polygonsSet53.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet82);
        boolean boolean84 = polygonsSet51.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet53);
        boolean boolean85 = polygonsSet49.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet53);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = polygonsSet49.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform87 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion88 = polygonsSet49.applyTransform(euclidean2DTransform87);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion89 = polygonsSet49.copySelf();
        boolean boolean90 = polygonsSet14.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion89);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion34);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion67);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(euclidean2DVector77);
        org.junit.Assert.assertTrue("'" + location78 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location78.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion88);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray49 = polygonsSet48.getVertices();
        boolean boolean50 = polygonsSet48.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(vector2DArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = euclidean2DAbstractRegion13.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = euclidean2DAbstractRegion13.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet13.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet13.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet13.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree55);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion85 = polygonsSet84.copySelf();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion85);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray2 = polygonsSet0.getVertices();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(vector2DArray2);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '#', (double) 10L, (double) (short) 1, 0.0d);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet4.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        double double10 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray11 = polygonsSet7.getVertices();
        boolean boolean12 = polygonsSet7.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet7.copySelf();
        boolean boolean14 = euclidean2DAbstractRegion13.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = euclidean2DAbstractRegion13.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet4.buildNew(euclidean2DBSPTree16);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertNotNull(polygonsSet17);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        double double5 = euclidean2DAbstractRegion4.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet7.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet11.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet7.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet26.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        boolean boolean31 = euclidean2DAbstractRegion4.isEmpty(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean33 = polygonsSet32.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform34 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion35 = polygonsSet32.applyTransform(euclidean2DTransform34);
        double double36 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet38.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        double double45 = polygonsSet43.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet46.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet46.checkPoint(euclidean2DVector50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = polygonsSet46.getTree(true);
        boolean boolean54 = polygonsSet43.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet42.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet38.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet57.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet32.buildNew(euclidean2DBSPTree59);
        boolean boolean61 = euclidean2DAbstractRegion4.isEmpty(euclidean2DBSPTree59);
        java.lang.Class<?> wildcardClass62 = euclidean2DAbstractRegion4.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree9);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree40);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform32 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet20.applyTransform(euclidean2DTransform32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        boolean boolean37 = euclidean2DAbstractRegion33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = euclidean2DAbstractRegion33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = euclidean2DAbstractRegion19.checkPoint(euclidean2DVector38);
        boolean boolean40 = euclidean2DAbstractRegion19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side42 = euclidean2DAbstractRegion19.side(euclidean2DHyperplane41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet1.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet1.applyTransform(euclidean2DTransform42);
        boolean boolean44 = polygonsSet1.isEmpty();
        double double45 = polygonsSet1.getBoundarySize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet1.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane48 = polygonsSet1.intersection(euclidean2DSubHyperplane47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet5.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        double double12 = polygonsSet10.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location18 = polygonsSet13.checkPoint(euclidean2DVector17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = polygonsSet13.getTree(true);
        boolean boolean21 = polygonsSet10.isEmpty(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet9.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet22.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform36 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion37 = polygonsSet24.applyTransform(euclidean2DTransform36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        double double40 = polygonsSet38.getSize();
        boolean boolean41 = euclidean2DAbstractRegion37.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet38);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet22.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet22.getBarycenter();
        boolean boolean45 = polygonsSet5.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet5.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet5.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion49 = euclidean2DAbstractRegion48.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = euclidean2DAbstractRegion49.getTree(true);
        boolean boolean52 = polygonsSet0.isEmpty(euclidean2DBSPTree51);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + location18 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location18.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion49);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        double double32 = polygonsSet30.getBoundarySize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet30.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = polygonsSet2.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet2.getTree(false);
        java.lang.Class<?> wildcardClass7 = polygonsSet2.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNull(euclidean2DBSPTree4);
        org.junit.Assert.assertNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet3.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet0.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet11.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet18.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet34.buildNew(euclidean2DBSPTree47);
        double double51 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        double double56 = polygonsSet54.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet57.checkPoint(euclidean2DVector61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = polygonsSet57.getTree(true);
        boolean boolean65 = polygonsSet54.isEmpty(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet53.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        double double71 = polygonsSet69.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet72.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet72.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = polygonsSet72.getTree(true);
        boolean boolean80 = polygonsSet69.isEmpty(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet68.buildNew(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet66.buildNew(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = polygonsSet50.buildNew(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        boolean boolean85 = polygonsSet18.isEmpty(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet11.buildNew(euclidean2DBSPTree79);
        java.lang.Class<?> wildcardClass87 = euclidean2DBSPTree79.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertNotNull(polygonsSet83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean17 = polygonsSet16.isEmpty();
        boolean boolean18 = euclidean2DAbstractRegion15.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion15.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        double double46 = polygonsSet45.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        boolean boolean18 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet17.getVertices();
        boolean boolean20 = polygonsSet17.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        boolean boolean39 = polygonsSet25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet38);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet38.getVertices();
        boolean boolean41 = polygonsSet17.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet38);
        double double42 = polygonsSet38.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet4.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = euclidean2DAbstractRegion6.copySelf();
        boolean boolean8 = euclidean2DAbstractRegion7.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion35 = polygonsSet34.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray36 = polygonsSet34.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        double double50 = polygonsSet48.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet51.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location56 = polygonsSet51.checkPoint(euclidean2DVector55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet51.getTree(true);
        boolean boolean59 = polygonsSet48.isEmpty(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet47.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        double double65 = polygonsSet63.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet66.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet66.checkPoint(euclidean2DVector70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet66.getTree(true);
        boolean boolean74 = polygonsSet63.isEmpty(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet62.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet60.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet45.buildNew(euclidean2DBSPTree73);
        boolean boolean78 = polygonsSet34.isEmpty(euclidean2DBSPTree73);
        boolean boolean79 = euclidean2DAbstractRegion13.isEmpty(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree73);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion35);
        org.junit.Assert.assertNotNull(vector2DArray36);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + location56 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location56.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = euclidean2DAbstractRegion15.copySelf();
        double double17 = euclidean2DAbstractRegion16.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion16.applyTransform(euclidean2DTransform18);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        double double18 = euclidean2DAbstractRegion13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean20 = polygonsSet19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet19.applyTransform(euclidean2DTransform21);
        double double23 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet19.applyTransform(euclidean2DTransform24);
        boolean boolean26 = polygonsSet19.isEmpty();
        boolean boolean27 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet19);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side29 = polygonsSet19.side(euclidean2DHyperplane28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet16.applyTransform(euclidean2DTransform28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        boolean boolean33 = euclidean2DAbstractRegion29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet30);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet14.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray36 = polygonsSet14.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray37 = polygonsSet14.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray36);
        org.junit.Assert.assertNotNull(vector2DArray37);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        boolean boolean14 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray15 = polygonsSet0.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(vector2DArray15);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet19.applyTransform(euclidean2DTransform20);
        java.lang.Class<?> wildcardClass22 = euclidean2DAbstractRegion21.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet4.copySelf();
        double double6 = polygonsSet4.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        double double20 = polygonsSet18.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location26 = polygonsSet21.checkPoint(euclidean2DVector25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet21.getTree(true);
        boolean boolean29 = polygonsSet18.isEmpty(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet17.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet32.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet30.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet15.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet48.getTree(false);
        boolean boolean52 = polygonsSet47.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = polygonsSet54.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet58.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet54.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        boolean boolean74 = polygonsSet47.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet75.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector79 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location80 = polygonsSet47.checkPoint(euclidean2DVector79);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray81 = polygonsSet47.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet82.buildNew(euclidean2DBSPTree83);
        double double85 = polygonsSet82.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray86 = polygonsSet82.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform87 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion88 = polygonsSet82.applyTransform(euclidean2DTransform87);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree90 = euclidean2DAbstractRegion88.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet47.buildNew(euclidean2DBSPTree90);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet4.buildNew(euclidean2DBSPTree90);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray93 = polygonsSet4.getVertices();
        org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DRegion94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = polygonsSet4.contains(euclidean2DRegion94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 6.0d + "'", double6 == 6.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + location26 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location26.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree56);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertNotNull(euclidean2DVector79);
        org.junit.Assert.assertTrue("'" + location80 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location80.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray86);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion88);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree90);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(polygonsSet92);
        org.junit.Assert.assertNotNull(vector2DArray93);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet56.checkPoint(euclidean2DVector60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(true);
        boolean boolean64 = polygonsSet53.isEmpty(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet52.buildNew(euclidean2DBSPTree63);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList66 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet68.checkPoint(euclidean2DVector70);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray72 = polygonsSet68.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet65.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.Region.Location location75 = polygonsSet50.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet50.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray72);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location75 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location75.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector76);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet14.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet0.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray16 = polygonsSet0.getVertices();
        double double17 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray18 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane20 = polygonsSet0.intersection(euclidean2DSubHyperplane19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(vector2DArray16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray18);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet2.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet2.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet18.buildNew(euclidean2DBSPTree29);
        boolean boolean32 = polygonsSet2.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet31);
        boolean boolean33 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet2);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet2.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 10L, (double) (short) 1, (double) 100);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        double double23 = polygonsSet21.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        boolean boolean32 = polygonsSet21.isEmpty(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform33 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion34 = polygonsSet21.applyTransform(euclidean2DTransform33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        boolean boolean38 = euclidean2DAbstractRegion34.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet35);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet19.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform53 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion54 = polygonsSet41.applyTransform(euclidean2DTransform53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        double double57 = polygonsSet55.getSize();
        boolean boolean58 = euclidean2DAbstractRegion54.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet55);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform59 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion60 = euclidean2DAbstractRegion54.applyTransform(euclidean2DTransform59);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = euclidean2DAbstractRegion60.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet19.checkPoint(euclidean2DVector61);
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet4.checkPoint(euclidean2DVector61);
        java.lang.Class<?> wildcardClass64 = location63.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion60);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.OUTSIDE + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.OUTSIDE));
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray15 = polygonsSet14.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet16.getBarycenter();
        double double19 = polygonsSet16.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet16.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform25 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion26 = polygonsSet22.applyTransform(euclidean2DTransform25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet32.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location37 = polygonsSet32.checkPoint(euclidean2DVector36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet32.getTree(true);
        boolean boolean40 = polygonsSet29.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet28.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet41.buildNew(euclidean2DBSPTree54);
        boolean boolean58 = polygonsSet22.isEmpty(euclidean2DBSPTree54);
        boolean boolean59 = euclidean2DAbstractRegion21.isEmpty(euclidean2DBSPTree54);
        boolean boolean60 = polygonsSet14.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform61 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion62 = polygonsSet14.applyTransform(euclidean2DTransform61);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion63 = polygonsSet14.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(vector2DArray15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion26);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + location37 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location37.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion62);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion63);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(false);
        double double8 = polygonsSet0.getBoundarySize();
        double double9 = polygonsSet0.getBoundarySize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        double double48 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray49 = polygonsSet45.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform50 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet45.applyTransform(euclidean2DTransform50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = euclidean2DAbstractRegion51.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet0.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion56 = polygonsSet0.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray49);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion56);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray5 = polygonsSet4.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean7 = polygonsSet6.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet6.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet10.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList14 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform19 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet16.applyTransform(euclidean2DTransform19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        boolean boolean34 = polygonsSet23.isEmpty(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet22.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        double double40 = polygonsSet38.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet41.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location46 = polygonsSet41.checkPoint(euclidean2DVector45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet41.getTree(true);
        boolean boolean49 = polygonsSet38.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet37.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet35.buildNew(euclidean2DBSPTree48);
        boolean boolean52 = polygonsSet16.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet15.buildNew(euclidean2DBSPTree48);
        boolean boolean54 = polygonsSet10.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet6.buildNew(euclidean2DBSPTree48);
        boolean boolean56 = polygonsSet4.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet58.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion72 = polygonsSet71.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet71.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet71.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        double double81 = polygonsSet79.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet82.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = polygonsSet85.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location87 = polygonsSet82.checkPoint(euclidean2DVector86);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = polygonsSet82.getTree(true);
        boolean boolean90 = polygonsSet79.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet78.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion92 = polygonsSet91.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree94 = polygonsSet91.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree96 = polygonsSet91.getTree(true);
        boolean boolean97 = polygonsSet71.isEmpty(euclidean2DBSPTree96);
        boolean boolean98 = polygonsSet4.isEmpty(euclidean2DBSPTree96);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet99 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree96);
        org.junit.Assert.assertNotNull(vector2DArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + location46 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location46.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion72);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
        org.junit.Assert.assertTrue("'" + location87 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location87.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion92);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree94);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion64 = polygonsSet30.copySelf();
        double double65 = polygonsSet30.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        java.lang.Class<?> wildcardClass9 = polygonsSet8.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((-1.0d), (double) (byte) 0, (double) (-1), (double) 10.0f);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet5.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList9 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet11.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        double double20 = polygonsSet18.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location26 = polygonsSet21.checkPoint(euclidean2DVector25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet21.getTree(true);
        boolean boolean29 = polygonsSet18.isEmpty(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet17.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet32.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet30.buildNew(euclidean2DBSPTree43);
        boolean boolean47 = polygonsSet11.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet10.buildNew(euclidean2DBSPTree43);
        boolean boolean49 = polygonsSet5.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        boolean boolean51 = polygonsSet4.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + location26 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location26.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet29.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet29.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet49.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        double double56 = polygonsSet54.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet57.checkPoint(euclidean2DVector61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = polygonsSet57.getTree(true);
        boolean boolean65 = polygonsSet54.isEmpty(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet53.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet49.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet68.getTree(false);
        boolean boolean71 = polygonsSet68.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet72.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet72.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = polygonsSet72.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet68.buildNew(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet47.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet29.buildNew(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree51);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(polygonsSet86);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = polygonsSet3.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet0.buildNew(euclidean2DBSPTree6);
        double double9 = polygonsSet0.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet19.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray22 = polygonsSet19.getVertices();
        double double23 = polygonsSet19.getBoundarySize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertNotNull(vector2DArray22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        double double32 = polygonsSet30.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet30.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean36 = polygonsSet35.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet35.applyTransform(euclidean2DTransform37);
        double double39 = polygonsSet35.getBoundarySize();
        boolean boolean40 = polygonsSet35.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet41.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform44 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion45 = polygonsSet41.applyTransform(euclidean2DTransform44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        double double50 = polygonsSet48.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet51.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location56 = polygonsSet51.checkPoint(euclidean2DVector55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet51.getTree(true);
        boolean boolean59 = polygonsSet48.isEmpty(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet47.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        double double65 = polygonsSet63.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet66.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet66.checkPoint(euclidean2DVector70);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet66.getTree(true);
        boolean boolean74 = polygonsSet63.isEmpty(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet62.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet60.buildNew(euclidean2DBSPTree73);
        boolean boolean77 = polygonsSet41.isEmpty(euclidean2DBSPTree73);
        boolean boolean78 = polygonsSet35.isEmpty(euclidean2DBSPTree73);
        double double79 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree81 = polygonsSet35.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet30.buildNew(euclidean2DBSPTree81);
        java.lang.Class<?> wildcardClass83 = polygonsSet82.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion45);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + location56 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location56.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree81);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        // The following exception was thrown during execution in test generation
        try {
            double double3 = polygonsSet2.getBoundarySize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (short) 0, (double) (-1L), (double) 10L, 6.0d);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean6 = polygonsSet5.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform7 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = polygonsSet5.applyTransform(euclidean2DTransform7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet9.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList13 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet15.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet34.buildNew(euclidean2DBSPTree47);
        boolean boolean51 = polygonsSet15.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet14.buildNew(euclidean2DBSPTree47);
        boolean boolean53 = polygonsSet9.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet5.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet5.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location56 = polygonsSet4.checkPoint(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + location56 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.OUTSIDE + "'", location56.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.OUTSIDE));
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        boolean boolean16 = euclidean2DAbstractRegion15.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = euclidean2DAbstractRegion15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = euclidean2DAbstractRegion15.copySelf();
        java.lang.Class<?> wildcardClass19 = euclidean2DAbstractRegion18.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        double double6 = polygonsSet0.getSize();
        java.lang.Class<?> wildcardClass7 = polygonsSet0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        double double14 = euclidean2DAbstractRegion12.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = euclidean2DAbstractRegion12.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        double double25 = polygonsSet20.getBoundarySize();
        double double26 = polygonsSet20.getBoundarySize();
        double double27 = polygonsSet20.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet20.buildNew(euclidean2DBSPTree38);
        double double41 = polygonsSet20.getBoundarySize();
        double double42 = polygonsSet20.getBoundarySize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet0.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray16 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet0.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = polygonsSet0.getTree(false);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(vector2DArray16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree20);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        boolean boolean4 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet1.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean22 = polygonsSet21.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform23 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion24 = polygonsSet21.applyTransform(euclidean2DTransform23);
        double double25 = euclidean2DAbstractRegion24.getBoundarySize();
        boolean boolean26 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = euclidean2DAbstractRegion24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        double double30 = polygonsSet29.getBoundarySize();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet8.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        boolean boolean25 = euclidean2DAbstractRegion21.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet7.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet0.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet0.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet20.applyTransform(euclidean2DTransform68);
        double double70 = euclidean2DAbstractRegion69.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform71 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion72 = euclidean2DAbstractRegion69.applyTransform(euclidean2DTransform71);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion72);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet33.applyTransform(euclidean2DTransform45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        boolean boolean63 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        boolean boolean64 = polygonsSet31.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean65 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean66 = polygonsSet29.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform67 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion68 = polygonsSet29.applyTransform(euclidean2DTransform67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        double double71 = polygonsSet69.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = polygonsSet72.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet69.buildNew(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet29.buildNew(euclidean2DBSPTree75);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion68);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree75);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertNotNull(polygonsSet81);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = euclidean2DAbstractRegion19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = euclidean2DAbstractRegion19.applyTransform(euclidean2DTransform21);
        double double23 = euclidean2DAbstractRegion22.getBoundarySize();
        double double24 = euclidean2DAbstractRegion22.getBoundarySize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = euclidean2DAbstractRegion22.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet48.getTree(true);
        double double51 = polygonsSet48.getBoundarySize();
        double double52 = polygonsSet48.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean54 = polygonsSet53.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform55 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion56 = polygonsSet53.applyTransform(euclidean2DTransform55);
        double double57 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform58 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = polygonsSet53.applyTransform(euclidean2DTransform58);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray60 = polygonsSet53.getVertices();
        boolean boolean61 = polygonsSet48.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet53);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertNotNull(vector2DArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet41.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion54 = euclidean2DAbstractRegion53.copySelf();
        double double55 = euclidean2DAbstractRegion53.getSize();
        boolean boolean56 = polygonsSet8.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion53);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = euclidean2DAbstractRegion53.applyTransform(euclidean2DTransform57);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = euclidean2DAbstractRegion53.copySelf();
        double double60 = euclidean2DAbstractRegion53.getSize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet9.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        boolean boolean26 = euclidean2DAbstractRegion22.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet23);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet8.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet1.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet30.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet1.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet37.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        double double44 = polygonsSet42.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet45.checkPoint(euclidean2DVector49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = polygonsSet45.getTree(true);
        boolean boolean53 = polygonsSet42.isEmpty(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet41.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet37.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet56.getTree(false);
        boolean boolean59 = polygonsSet56.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = polygonsSet56.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        double double66 = polygonsSet64.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet67.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location72 = polygonsSet67.checkPoint(euclidean2DVector71);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet67.getTree(true);
        boolean boolean75 = polygonsSet64.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet63.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector78 = polygonsSet77.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = polygonsSet77.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree80);
        boolean boolean82 = polygonsSet76.isEmpty(euclidean2DBSPTree80);
        boolean boolean83 = euclidean2DAbstractRegion61.isEmpty(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet1.buildNew(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = polygonsSet1.copySelf();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNull(euclidean2DBSPTree39);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + location72 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location72.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertNotNull(euclidean2DVector78);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        boolean boolean43 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion44 = polygonsSet0.copySelf();
        double double45 = polygonsSet0.getSize();
        double double46 = polygonsSet0.getSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        double double3 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet12.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        boolean boolean29 = euclidean2DAbstractRegion25.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet26);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet11.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet4.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet1.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet44.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        double double62 = polygonsSet60.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet63.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location68 = polygonsSet63.checkPoint(euclidean2DVector67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet63.getTree(true);
        boolean boolean71 = polygonsSet60.isEmpty(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet59.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet57.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet42.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet1.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray76 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet77.buildNew(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion80 = polygonsSet77.copySelf();
        boolean boolean81 = polygonsSet77.isEmpty();
        boolean boolean82 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet77);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + location68 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location68.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(vector2DArray76);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        double double70 = polygonsSet68.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet71.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet71.getTree(true);
        boolean boolean79 = polygonsSet68.isEmpty(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree78);
        boolean boolean81 = polygonsSet80.isEmpty();
        boolean boolean82 = polygonsSet40.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet80);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform83 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion84 = polygonsSet40.applyTransform(euclidean2DTransform83);
        boolean boolean85 = euclidean2DAbstractRegion84.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean20 = polygonsSet19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet19.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet14.buildNew(euclidean2DBSPTree22);
        java.lang.Class<?> wildcardClass25 = polygonsSet24.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        boolean boolean3 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet1.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray5 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean9 = polygonsSet8.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform10 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion11 = polygonsSet8.applyTransform(euclidean2DTransform10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet12.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList16 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet18.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet18.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        double double27 = polygonsSet25.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet28.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet28.checkPoint(euclidean2DVector32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet28.getTree(true);
        boolean boolean36 = polygonsSet25.isEmpty(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet24.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        double double42 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        boolean boolean51 = polygonsSet40.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet39.buildNew(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet37.buildNew(euclidean2DBSPTree50);
        boolean boolean54 = polygonsSet18.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet17.buildNew(euclidean2DBSPTree50);
        boolean boolean56 = polygonsSet12.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet8.buildNew(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet1.buildNew(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertNotNull(vector2DArray5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(polygonsSet59);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet1.applyTransform(euclidean2DTransform2);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray44 = polygonsSet5.getVertices();
        boolean boolean45 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet5);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side47 = polygonsSet1.side(euclidean2DHyperplane46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(vector2DArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet4.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = euclidean2DAbstractRegion6.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        double double10 = polygonsSet8.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location16 = polygonsSet11.checkPoint(euclidean2DVector15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet11.getTree(true);
        boolean boolean19 = polygonsSet8.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        boolean boolean21 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet20.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        double double29 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet30.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet30.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = polygonsSet30.getTree(true);
        boolean boolean38 = polygonsSet27.isEmpty(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet26.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        double double44 = polygonsSet42.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet45.checkPoint(euclidean2DVector49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = polygonsSet45.getTree(true);
        boolean boolean53 = polygonsSet42.isEmpty(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet41.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet39.buildNew(euclidean2DBSPTree52);
        double double56 = polygonsSet55.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet58.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet74.getBarycenter();
        double double76 = polygonsSet74.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet77.buildNew(euclidean2DBSPTree78);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector81 = polygonsSet80.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location82 = polygonsSet77.checkPoint(euclidean2DVector81);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet77.getTree(true);
        boolean boolean85 = polygonsSet74.isEmpty(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet73.buildNew(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = polygonsSet71.buildNew(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet88 = polygonsSet55.buildNew(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet89 = polygonsSet20.buildNew(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray90 = polygonsSet89.getVertices();
        boolean boolean91 = euclidean2DAbstractRegion6.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet89);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree93 = polygonsSet89.getTree(false);
        java.lang.Class<?> wildcardClass94 = euclidean2DBSPTree93.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + location16 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location16.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertNotNull(euclidean2DVector81);
        org.junit.Assert.assertTrue("'" + location82 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location82.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertNotNull(polygonsSet87);
        org.junit.Assert.assertNotNull(polygonsSet88);
        org.junit.Assert.assertNotNull(polygonsSet89);
        org.junit.Assert.assertNotNull(vector2DArray90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet0.getBarycenter();
        double double6 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet0.getTree(false);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet9.applyTransform(euclidean2DTransform12);
        boolean boolean14 = polygonsSet8.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion13);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray15 = polygonsSet8.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean17 = polygonsSet16.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet16.applyTransform(euclidean2DTransform18);
        double double20 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet16.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet16.getTree(true);
        boolean boolean25 = polygonsSet8.isEmpty(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, (double) '#', 1.0d, (double) '4');
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet26.checkPoint(euclidean2DVector32);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray34 = polygonsSet26.getVertices();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList35 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList35);
        double double37 = polygonsSet36.getSize();
        double double38 = polygonsSet36.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet44.applyTransform(euclidean2DTransform56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        boolean boolean61 = euclidean2DAbstractRegion57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet58);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet43.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet36.checkPoint(euclidean2DVector62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = polygonsSet65.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = polygonsSet36.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = polygonsSet71.getTree(true);
        boolean boolean74 = polygonsSet26.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet71);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(vector2DArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree68);
        org.junit.Assert.assertNotNull(polygonsSet70);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        double double3 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform4 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet0.applyTransform(euclidean2DTransform4);
        double double6 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = polygonsSet7.buildNew(euclidean2DBSPTree8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location12 = polygonsSet7.checkPoint(euclidean2DVector11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet7.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        boolean boolean16 = polygonsSet0.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray17 = polygonsSet0.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertTrue("'" + location12 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location12.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(vector2DArray17);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet0.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet0.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion39 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = euclidean2DAbstractRegion39.getBarycenter();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion39);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform32 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet20.applyTransform(euclidean2DTransform32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        boolean boolean37 = euclidean2DAbstractRegion33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = euclidean2DAbstractRegion33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = euclidean2DAbstractRegion19.checkPoint(euclidean2DVector38);
        boolean boolean40 = euclidean2DAbstractRegion19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform41 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = euclidean2DAbstractRegion19.applyTransform(euclidean2DTransform41);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 100L, (double) 1L, (double) 100, 0.0d);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion5 = polygonsSet4.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion5);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        boolean boolean7 = polygonsSet0.isEmpty();
        double double8 = polygonsSet0.getBoundarySize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        double double50 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet51.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList55 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform60 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = polygonsSet57.applyTransform(euclidean2DTransform60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        double double66 = polygonsSet64.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet67.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location72 = polygonsSet67.checkPoint(euclidean2DVector71);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet67.getTree(true);
        boolean boolean75 = polygonsSet64.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet63.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        double double81 = polygonsSet79.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet82.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = polygonsSet85.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location87 = polygonsSet82.checkPoint(euclidean2DVector86);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = polygonsSet82.getTree(true);
        boolean boolean90 = polygonsSet79.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = polygonsSet78.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet92 = polygonsSet76.buildNew(euclidean2DBSPTree89);
        boolean boolean93 = polygonsSet57.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = polygonsSet56.buildNew(euclidean2DBSPTree89);
        boolean boolean95 = polygonsSet51.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet96 = polygonsSet20.buildNew(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray97 = polygonsSet96.getVertices();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + location72 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location72.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(polygonsSet76);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
        org.junit.Assert.assertTrue("'" + location87 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location87.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(polygonsSet91);
        org.junit.Assert.assertNotNull(polygonsSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(polygonsSet94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(polygonsSet96);
        org.junit.Assert.assertNotNull(vector2DArray97);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 0.0f, (double) (byte) 100, (double) 0.0f);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        double double36 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet38.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        double double56 = polygonsSet54.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet57.checkPoint(euclidean2DVector61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = polygonsSet57.getTree(true);
        boolean boolean65 = polygonsSet54.isEmpty(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet53.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet51.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet35.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        boolean boolean70 = polygonsSet4.isEmpty(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet71.buildNew(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = polygonsSet71.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = polygonsSet4.buildNew(euclidean2DBSPTree75);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree75);
        org.junit.Assert.assertNotNull(polygonsSet76);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet48.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = polygonsSet51.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray54 = polygonsSet51.getVertices();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertNotNull(vector2DArray54);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        boolean boolean26 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray27 = polygonsSet20.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane30 = polygonsSet20.intersection(euclidean2DSubHyperplane29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(vector2DArray27);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion85 = polygonsSet40.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = euclidean2DAbstractRegion85.getBarycenter();
        boolean boolean87 = euclidean2DAbstractRegion85.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion85);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        double double26 = polygonsSet20.getBoundarySize();
        boolean boolean27 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray29 = polygonsSet20.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet31.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        double double38 = polygonsSet36.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet39.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location44 = polygonsSet39.checkPoint(euclidean2DVector43);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = polygonsSet39.getTree(true);
        boolean boolean47 = polygonsSet36.isEmpty(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet35.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet31.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = polygonsSet50.getTree(false);
        boolean boolean53 = polygonsSet50.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = polygonsSet50.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        double double60 = polygonsSet58.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet61.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector65 = polygonsSet64.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location66 = polygonsSet61.checkPoint(euclidean2DVector65);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = polygonsSet61.getTree(true);
        boolean boolean69 = polygonsSet58.isEmpty(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = polygonsSet57.buildNew(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet71.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = polygonsSet71.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        boolean boolean76 = polygonsSet70.isEmpty(euclidean2DBSPTree74);
        boolean boolean77 = euclidean2DAbstractRegion55.isEmpty(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet80 = polygonsSet20.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = polygonsSet80.getTree(false);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertNotNull(vector2DArray29);
        org.junit.Assert.assertNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertTrue("'" + location44 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location44.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector65);
        org.junit.Assert.assertTrue("'" + location66 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location66.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(polygonsSet70);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet80);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree82);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet9.applyTransform(euclidean2DTransform12);
        boolean boolean14 = polygonsSet8.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion13);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray15 = polygonsSet8.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean17 = polygonsSet16.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet16.applyTransform(euclidean2DTransform18);
        double double20 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet16.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet16.getTree(true);
        boolean boolean25 = polygonsSet8.isEmpty(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(vector2DArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        boolean boolean43 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        double double44 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion45 = polygonsSet0.copySelf();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion45);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        double double5 = polygonsSet3.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location11 = polygonsSet6.checkPoint(euclidean2DVector10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet6.getTree(true);
        boolean boolean14 = polygonsSet3.isEmpty(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet3.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet3.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        boolean boolean33 = polygonsSet3.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet32);
        boolean boolean34 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean36 = polygonsSet35.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet35.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet3.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray42 = polygonsSet41.getVertices();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + location11 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location11.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(vector2DArray42);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet1.applyTransform(euclidean2DTransform2);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray44 = polygonsSet5.getVertices();
        boolean boolean45 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet1.getTree(false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(vector2DArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        boolean boolean20 = polygonsSet14.isEmpty(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet14.applyTransform(euclidean2DTransform21);
        java.lang.Class<?> wildcardClass23 = polygonsSet14.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet33.applyTransform(euclidean2DTransform45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        boolean boolean63 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        boolean boolean64 = polygonsSet31.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean65 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet29.copySelf();
        double double67 = euclidean2DAbstractRegion66.getBoundarySize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = euclidean2DAbstractRegion66.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = euclidean2DAbstractRegion66.getBarycenter();
        boolean boolean70 = euclidean2DAbstractRegion66.isEmpty();
        double double71 = euclidean2DAbstractRegion66.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane73 = euclidean2DAbstractRegion66.intersection(euclidean2DSubHyperplane72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean20 = polygonsSet19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet19.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet14.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet24.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray26 = polygonsSet24.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(vector2DArray26);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform22 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion23 = polygonsSet14.applyTransform(euclidean2DTransform22);
        boolean boolean24 = euclidean2DAbstractRegion12.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion23);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform25 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion26 = euclidean2DAbstractRegion23.applyTransform(euclidean2DTransform25);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion26);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean20 = polygonsSet19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet19.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet14.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet24.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = euclidean2DAbstractRegion25.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet9.applyTransform(euclidean2DTransform12);
        boolean boolean14 = polygonsSet8.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion13);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray15 = polygonsSet8.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean17 = polygonsSet16.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet16.applyTransform(euclidean2DTransform18);
        double double20 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet16.applyTransform(euclidean2DTransform21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet16.getTree(true);
        boolean boolean25 = polygonsSet8.isEmpty(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet8.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray28 = polygonsSet8.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet8.getTree(false);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(vector2DArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(vector2DArray28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList15 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet17.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet17.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet22.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet17.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion30 = euclidean2DAbstractRegion29.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion30);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet7.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList11 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform16 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet13.applyTransform(euclidean2DTransform16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet32.buildNew(euclidean2DBSPTree45);
        boolean boolean49 = polygonsSet13.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet12.buildNew(euclidean2DBSPTree45);
        boolean boolean51 = polygonsSet7.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet56.checkPoint(euclidean2DVector60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(true);
        boolean boolean64 = polygonsSet53.isEmpty(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform65 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet53.applyTransform(euclidean2DTransform65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        double double69 = polygonsSet67.getSize();
        boolean boolean70 = euclidean2DAbstractRegion66.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet67);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean73 = polygonsSet72.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = polygonsSet72.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet67.buildNew(euclidean2DBSPTree75);
        boolean boolean78 = polygonsSet52.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet67);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform79 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion80 = polygonsSet67.applyTransform(euclidean2DTransform79);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform81 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion82 = euclidean2DAbstractRegion80.applyTransform(euclidean2DTransform81);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree75);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion80);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion82);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location9 = polygonsSet6.checkPoint(euclidean2DVector8);
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet0.checkPoint(euclidean2DVector8);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + location9 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location9.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        double double5 = polygonsSet3.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location11 = polygonsSet6.checkPoint(euclidean2DVector10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet6.getTree(true);
        boolean boolean14 = polygonsSet3.isEmpty(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform15 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion16 = polygonsSet3.applyTransform(euclidean2DTransform15);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet3.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        boolean boolean33 = polygonsSet3.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet32);
        boolean boolean34 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet3);
        double double35 = polygonsSet1.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet36.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet36.getTree(false);
        boolean boolean42 = polygonsSet1.isEmpty(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + location11 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location11.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet20.buildNew(euclidean2DBSPTree36);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet37.copySelf();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertNotNull(polygonsSet37);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = euclidean2DAbstractRegion13.getBarycenter();
        boolean boolean21 = euclidean2DAbstractRegion13.isEmpty();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane23 = euclidean2DAbstractRegion13.intersection(euclidean2DSubHyperplane22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = euclidean2DAbstractRegion4.getTree(true);
        boolean boolean7 = euclidean2DAbstractRegion4.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = euclidean2DAbstractRegion4.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform29 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion30 = polygonsSet17.applyTransform(euclidean2DTransform29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        boolean boolean34 = euclidean2DAbstractRegion30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet31);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet16.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.Region.Location location37 = polygonsSet9.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform38 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion39 = polygonsSet9.applyTransform(euclidean2DTransform38);
        boolean boolean40 = euclidean2DAbstractRegion8.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion39);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location37 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location37.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        boolean boolean46 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        boolean boolean47 = euclidean2DAbstractRegion25.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet48.getTree(true);
        double double51 = polygonsSet48.getBoundarySize();
        double double52 = polygonsSet48.getBoundarySize();
        double double53 = polygonsSet48.getBoundarySize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        double double5 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform6 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet0.applyTransform(euclidean2DTransform6);
        boolean boolean8 = polygonsSet0.isEmpty();
        double double9 = polygonsSet0.getSize();
        double double10 = polygonsSet0.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DBSPTree2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        double double15 = polygonsSet0.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean51 = polygonsSet50.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet50.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet50.getTree(false);
        boolean boolean56 = polygonsSet20.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet20.copySelf();
        double double58 = polygonsSet20.getBoundarySize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 100.0f, (double) 1L, 0.0d, (double) (-1.0f));
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet5.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet11.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        double double29 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet30.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet30.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = polygonsSet30.getTree(true);
        boolean boolean38 = polygonsSet27.isEmpty(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet26.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet24.buildNew(euclidean2DBSPTree37);
        boolean boolean41 = polygonsSet5.isEmpty(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet4.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector43 = polygonsSet42.getBarycenter();
        java.lang.Class<?> wildcardClass44 = euclidean2DVector43.getClass();
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet4.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList8 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform13 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet10.applyTransform(euclidean2DTransform13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet29.buildNew(euclidean2DBSPTree42);
        boolean boolean46 = polygonsSet10.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet9.buildNew(euclidean2DBSPTree42);
        boolean boolean48 = polygonsSet4.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet0.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet0.buildNew(euclidean2DBSPTree61);
        boolean boolean66 = polygonsSet65.isEmpty();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane68 = polygonsSet65.intersection(euclidean2DSubHyperplane67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet4.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet17.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet19.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        boolean boolean36 = euclidean2DAbstractRegion32.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet17.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet17.getBarycenter();
        boolean boolean40 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform41 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = polygonsSet0.applyTransform(euclidean2DTransform41);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform44 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion45 = polygonsSet0.applyTransform(euclidean2DTransform44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = euclidean2DAbstractRegion45.applyTransform(euclidean2DTransform46);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion45);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet4.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = euclidean2DAbstractRegion6.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = euclidean2DAbstractRegion6.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet4.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet17.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet19.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        boolean boolean36 = euclidean2DAbstractRegion32.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet17.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet17.getBarycenter();
        boolean boolean40 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform41 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = polygonsSet0.applyTransform(euclidean2DTransform41);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform44 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion45 = polygonsSet0.applyTransform(euclidean2DTransform44);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray46 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = euclidean2DAbstractRegion47.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion45);
        org.junit.Assert.assertNotNull(vector2DArray46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = polygonsSet15.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet34.buildNew(euclidean2DBSPTree47);
        boolean boolean51 = polygonsSet15.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet15.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform71 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion72 = polygonsSet59.applyTransform(euclidean2DTransform71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        double double75 = polygonsSet73.getSize();
        boolean boolean76 = euclidean2DAbstractRegion72.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet73);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector77 = polygonsSet73.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location78 = polygonsSet58.checkPoint(euclidean2DVector77);
        org.apache.commons.math3.geometry.partitioning.Region.Location location79 = euclidean2DAbstractRegion53.checkPoint(euclidean2DVector77);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList80 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList80);
        double double82 = polygonsSet81.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray83 = polygonsSet81.getVertices();
        boolean boolean84 = polygonsSet81.isEmpty();
        boolean boolean85 = euclidean2DAbstractRegion53.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean87 = polygonsSet86.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = polygonsSet86.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet91 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree89);
        boolean boolean92 = euclidean2DAbstractRegion53.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree94 = euclidean2DAbstractRegion53.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet95 = polygonsSet13.buildNew(euclidean2DBSPTree94);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion96 = polygonsSet95.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion72);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector77);
        org.junit.Assert.assertTrue("'" + location78 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location78.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location79 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location79.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree94);
        org.junit.Assert.assertNotNull(polygonsSet95);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion96);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        double double48 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray49 = polygonsSet45.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform50 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet45.applyTransform(euclidean2DTransform50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = euclidean2DAbstractRegion51.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet0.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform56 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet0.applyTransform(euclidean2DTransform56);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray49);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet2.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet2.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet7.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet2.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet10.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet13.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet10.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform26 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion27 = polygonsSet25.applyTransform(euclidean2DTransform26);
        double double28 = polygonsSet25.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree9);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet15.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        double double33 = polygonsSet31.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location39 = polygonsSet34.checkPoint(euclidean2DVector38);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet34.getTree(true);
        boolean boolean42 = polygonsSet31.isEmpty(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet30.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet28.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet13.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet13.getBarycenter();
        double double47 = polygonsSet13.getBoundarySize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        double double50 = polygonsSet48.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet51.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location56 = polygonsSet51.checkPoint(euclidean2DVector55);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = polygonsSet51.getTree(true);
        boolean boolean59 = polygonsSet48.isEmpty(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion60 = polygonsSet48.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = euclidean2DAbstractRegion60.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion62 = euclidean2DAbstractRegion61.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform63 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion64 = euclidean2DAbstractRegion61.applyTransform(euclidean2DTransform63);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList65 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location70 = polygonsSet67.checkPoint(euclidean2DVector69);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray71 = polygonsSet67.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector72 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location73 = euclidean2DAbstractRegion64.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet13.checkPoint(euclidean2DVector72);
        org.apache.commons.math3.geometry.partitioning.Region.Location location75 = polygonsSet0.checkPoint(euclidean2DVector72);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + location39 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location39.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + location56 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location56.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion60);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion62);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion64);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + location70 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location70.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray71);
        org.junit.Assert.assertNotNull(euclidean2DVector72);
        org.junit.Assert.assertTrue("'" + location73 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location73.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location75 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location75.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side9 = polygonsSet0.side(euclidean2DHyperplane8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList15 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet17.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet17.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet22.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet17.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean30 = polygonsSet29.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet29.applyTransform(euclidean2DTransform31);
        double double33 = polygonsSet29.getBoundarySize();
        boolean boolean34 = polygonsSet29.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion35 = polygonsSet29.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet29.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet14.checkPoint(euclidean2DVector40);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion35);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet41.getTree(false);
        boolean boolean45 = polygonsSet40.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet47.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet47.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        boolean boolean67 = polygonsSet40.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet40.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion70 = euclidean2DAbstractRegion69.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = euclidean2DAbstractRegion69.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion74 = polygonsSet73.copySelf();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion70);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion74);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.copySelf();
        double double14 = polygonsSet0.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet4.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray7 = polygonsSet4.getVertices();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane9 = polygonsSet4.intersection(euclidean2DSubHyperplane8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(vector2DArray7);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean17 = polygonsSet16.isEmpty();
        boolean boolean18 = euclidean2DAbstractRegion15.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1.0f, 99.9999999999994d, 10.0d, (double) (short) 100);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = euclidean2DAbstractRegion15.checkPoint(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        boolean boolean30 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform45 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion46 = polygonsSet33.applyTransform(euclidean2DTransform45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet33.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        double double52 = polygonsSet50.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location58 = polygonsSet53.checkPoint(euclidean2DVector57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = polygonsSet53.getTree(true);
        boolean boolean61 = polygonsSet50.isEmpty(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet49.buildNew(euclidean2DBSPTree60);
        boolean boolean63 = polygonsSet33.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet62);
        boolean boolean64 = polygonsSet31.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        boolean boolean65 = polygonsSet29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet29.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        double double69 = polygonsSet67.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet70.buildNew(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location75 = polygonsSet70.checkPoint(euclidean2DVector74);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = polygonsSet70.getTree(true);
        boolean boolean78 = polygonsSet67.isEmpty(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform79 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion80 = polygonsSet67.applyTransform(euclidean2DTransform79);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion81 = polygonsSet67.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet67.getTree(false);
        boolean boolean84 = polygonsSet29.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray85 = polygonsSet29.getVertices();
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane87 = polygonsSet29.intersection(euclidean2DSubHyperplane86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + location58 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location58.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + location75 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location75.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion80);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion81);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(vector2DArray85);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet11.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet24.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet24.getTree(true);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList28 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList28);
        double double30 = polygonsSet29.getSize();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        double double42 = polygonsSet40.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        boolean boolean51 = polygonsSet40.isEmpty(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet40.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        double double56 = polygonsSet54.getSize();
        boolean boolean57 = euclidean2DAbstractRegion53.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet54);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet54.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet39.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet32.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet29.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet24.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Region.Location location63 = polygonsSet0.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform64 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion65 = polygonsSet0.applyTransform(euclidean2DTransform64);
        double double66 = polygonsSet0.getSize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location63 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location63.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet1.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet1.applyTransform(euclidean2DTransform42);
        boolean boolean44 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion45 = polygonsSet1.copySelf();
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion45);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) -1, 0.0d, (double) (-1L), (double) (byte) 10);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector5 = polygonsSet4.getBarycenter();
        double double6 = polygonsSet4.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 24.0d + "'", double6 == 24.0d);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet14.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray24 = polygonsSet20.getVertices();
        java.lang.Class<?> wildcardClass25 = polygonsSet20.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(vector2DArray24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet7.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList11 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform16 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet13.applyTransform(euclidean2DTransform16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet32.buildNew(euclidean2DBSPTree45);
        boolean boolean49 = polygonsSet13.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet12.buildNew(euclidean2DBSPTree45);
        boolean boolean51 = polygonsSet7.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet56.checkPoint(euclidean2DVector60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(true);
        boolean boolean64 = polygonsSet53.isEmpty(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform65 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet53.applyTransform(euclidean2DTransform65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        double double69 = polygonsSet67.getSize();
        boolean boolean70 = euclidean2DAbstractRegion66.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet67);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean73 = polygonsSet72.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = polygonsSet72.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet67.buildNew(euclidean2DBSPTree75);
        boolean boolean78 = polygonsSet52.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet67);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform79 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion80 = polygonsSet52.applyTransform(euclidean2DTransform79);
        boolean boolean81 = polygonsSet52.isEmpty();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree75);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = euclidean2DAbstractRegion15.getTree(true);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side19 = euclidean2DAbstractRegion15.side(euclidean2DHyperplane18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        boolean boolean34 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform35 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet20.applyTransform(euclidean2DTransform35);
        double double37 = polygonsSet20.getSize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet22.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        double double29 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet30.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet30.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = polygonsSet30.getTree(true);
        boolean boolean38 = polygonsSet27.isEmpty(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet26.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet22.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet41.getTree(false);
        boolean boolean44 = polygonsSet41.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet45.buildNew(euclidean2DBSPTree46);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector49 = polygonsSet48.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet45.checkPoint(euclidean2DVector49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = polygonsSet45.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet41.buildNew(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = polygonsSet41.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet20.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform71 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion72 = polygonsSet59.applyTransform(euclidean2DTransform71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        double double75 = polygonsSet73.getSize();
        boolean boolean76 = euclidean2DAbstractRegion72.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet73);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector77 = euclidean2DAbstractRegion72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location78 = euclidean2DAbstractRegion58.checkPoint(euclidean2DVector77);
        org.apache.commons.math3.geometry.partitioning.Region.Location location79 = polygonsSet6.checkPoint(euclidean2DVector77);
        double double80 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform81 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion82 = polygonsSet6.applyTransform(euclidean2DTransform81);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree24);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DVector49);
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree52);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion72);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector77);
        org.junit.Assert.assertTrue("'" + location78 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location78.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location79 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location79.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion82);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = euclidean2DAbstractRegion15.getTree(true);
        java.lang.Class<?> wildcardClass18 = euclidean2DBSPTree17.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet14.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = polygonsSet14.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree20);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        boolean boolean36 = polygonsSet35.isEmpty();
        double double37 = polygonsSet35.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet35.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet0.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet0.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet16.applyTransform(euclidean2DTransform28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        boolean boolean33 = euclidean2DAbstractRegion29.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet30);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location35 = polygonsSet14.checkPoint(euclidean2DVector34);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet14.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + location35 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location35.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        boolean boolean31 = polygonsSet30.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList32 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet34.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform37 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet34.applyTransform(euclidean2DTransform37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        double double43 = polygonsSet41.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet44.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = polygonsSet44.getTree(true);
        boolean boolean52 = polygonsSet41.isEmpty(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet40.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector57 = polygonsSet56.getBarycenter();
        double double58 = polygonsSet56.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet59.buildNew(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet59.checkPoint(euclidean2DVector63);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = polygonsSet59.getTree(true);
        boolean boolean67 = polygonsSet56.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet55.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet53.buildNew(euclidean2DBSPTree66);
        boolean boolean70 = polygonsSet34.isEmpty(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet33.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion73 = polygonsSet72.copySelf();
        boolean boolean74 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet72);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet30.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector77 = euclidean2DAbstractRegion76.getBarycenter();
        double double78 = euclidean2DAbstractRegion76.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = euclidean2DAbstractRegion76.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertNotNull(euclidean2DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
        org.junit.Assert.assertNotNull(euclidean2DVector77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree80);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray5 = polygonsSet4.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean7 = polygonsSet6.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet6.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet10.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList14 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform19 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet16.applyTransform(euclidean2DTransform19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        double double25 = polygonsSet23.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        boolean boolean34 = polygonsSet23.isEmpty(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet22.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        double double40 = polygonsSet38.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet41.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location46 = polygonsSet41.checkPoint(euclidean2DVector45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet41.getTree(true);
        boolean boolean49 = polygonsSet38.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet37.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet35.buildNew(euclidean2DBSPTree48);
        boolean boolean52 = polygonsSet16.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = polygonsSet15.buildNew(euclidean2DBSPTree48);
        boolean boolean54 = polygonsSet10.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet6.buildNew(euclidean2DBSPTree48);
        boolean boolean56 = polygonsSet4.isEmpty(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree48);
        java.lang.Class<?> wildcardClass59 = polygonsSet58.getClass();
        org.junit.Assert.assertNotNull(vector2DArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + location46 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location46.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(polygonsSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        double double14 = polygonsSet12.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet15.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet15.getTree(true);
        boolean boolean23 = polygonsSet12.isEmpty(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet12.applyTransform(euclidean2DTransform24);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion26 = polygonsSet12.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet32.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location37 = polygonsSet32.checkPoint(euclidean2DVector36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet32.getTree(true);
        boolean boolean40 = polygonsSet29.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet28.buildNew(euclidean2DBSPTree39);
        boolean boolean42 = polygonsSet12.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet45.applyTransform(euclidean2DTransform57);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = polygonsSet45.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree60 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        double double64 = polygonsSet62.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree66 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet65.buildNew(euclidean2DBSPTree66);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location70 = polygonsSet65.checkPoint(euclidean2DVector69);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet65.getTree(true);
        boolean boolean73 = polygonsSet62.isEmpty(euclidean2DBSPTree72);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet61.buildNew(euclidean2DBSPTree72);
        boolean boolean75 = polygonsSet45.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet74);
        boolean boolean76 = polygonsSet43.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet45);
        boolean boolean77 = polygonsSet41.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet45);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion78 = polygonsSet41.copySelf();
        double double79 = euclidean2DAbstractRegion78.getBoundarySize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = euclidean2DAbstractRegion78.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector81 = euclidean2DAbstractRegion78.getBarycenter();
        boolean boolean82 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion78);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector83 = euclidean2DAbstractRegion78.getBarycenter();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion26);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + location37 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location37.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + location70 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location70.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertNotNull(euclidean2DVector81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector83);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = polygonsSet4.buildNew(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform7 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion8 = polygonsSet4.applyTransform(euclidean2DTransform7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        boolean boolean40 = polygonsSet4.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet3.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.junit.Assert.assertNotNull(polygonsSet6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 0.0f, (double) (byte) 100, (double) 0.0f);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        double double9 = polygonsSet7.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = polygonsSet10.buildNew(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location15 = polygonsSet10.checkPoint(euclidean2DVector14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet10.getTree(true);
        boolean boolean18 = polygonsSet7.isEmpty(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet6.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet21.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet19.buildNew(euclidean2DBSPTree32);
        double double36 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet38.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree52 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector55 = polygonsSet54.getBarycenter();
        double double56 = polygonsSet54.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree58 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet57.buildNew(euclidean2DBSPTree58);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet60.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = polygonsSet57.checkPoint(euclidean2DVector61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = polygonsSet57.getTree(true);
        boolean boolean65 = polygonsSet54.isEmpty(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet53.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet51.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet35.buildNew(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        boolean boolean70 = polygonsSet4.isEmpty(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree72 = polygonsSet4.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean74 = polygonsSet73.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform75 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion76 = polygonsSet73.applyTransform(euclidean2DTransform75);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree78 = polygonsSet73.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet4.buildNew(euclidean2DBSPTree78);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + location15 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location15.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(euclidean2DVector55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion76);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree78);
        org.junit.Assert.assertNotNull(polygonsSet79);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double9 = polygonsSet8.getSize();
        boolean boolean10 = polygonsSet8.isEmpty();
        java.lang.Class<?> wildcardClass11 = polygonsSet8.getClass();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet7.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList11 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform16 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet13.applyTransform(euclidean2DTransform16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet32.buildNew(euclidean2DBSPTree45);
        boolean boolean49 = polygonsSet13.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet12.buildNew(euclidean2DBSPTree45);
        boolean boolean51 = polygonsSet7.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        double double53 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform54 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion55 = polygonsSet0.applyTransform(euclidean2DTransform54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        double double59 = polygonsSet56.getSize();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList60 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList60);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location65 = polygonsSet62.checkPoint(euclidean2DVector64);
        org.apache.commons.math3.geometry.partitioning.Region.Location location66 = polygonsSet56.checkPoint(euclidean2DVector64);
        boolean boolean67 = euclidean2DAbstractRegion55.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree68 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree68);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet70.getBarycenter();
        double double72 = polygonsSet70.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree74 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = polygonsSet73.buildNew(euclidean2DBSPTree74);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector77 = polygonsSet76.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location78 = polygonsSet73.checkPoint(euclidean2DVector77);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = polygonsSet73.getTree(true);
        boolean boolean81 = polygonsSet70.isEmpty(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = polygonsSet69.buildNew(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion83 = polygonsSet82.copySelf();
        boolean boolean84 = euclidean2DAbstractRegion83.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector85 = euclidean2DAbstractRegion83.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion86 = euclidean2DAbstractRegion83.copySelf();
        boolean boolean87 = polygonsSet56.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion83);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion55);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + location65 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location65.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location66 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location66.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet75);
        org.junit.Assert.assertNotNull(euclidean2DVector77);
        org.junit.Assert.assertTrue("'" + location78 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location78.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(polygonsSet82);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector85);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = euclidean2DAbstractRegion12.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = euclidean2DAbstractRegion13.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = euclidean2DAbstractRegion13.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList18 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList18);
        double double20 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet19.getVertices();
        boolean boolean22 = polygonsSet19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet19.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet17.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion26 = polygonsSet25.copySelf();
        double double27 = euclidean2DAbstractRegion26.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = euclidean2DAbstractRegion26.applyTransform(euclidean2DTransform28);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet7.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList11 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = polygonsSet13.buildNew(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform16 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion17 = polygonsSet13.applyTransform(euclidean2DTransform16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        double double37 = polygonsSet35.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        boolean boolean46 = polygonsSet35.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet32.buildNew(euclidean2DBSPTree45);
        boolean boolean49 = polygonsSet13.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet12.buildNew(euclidean2DBSPTree45);
        boolean boolean51 = polygonsSet7.isEmpty(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet0.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        double double55 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet56.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location61 = polygonsSet56.checkPoint(euclidean2DVector60);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(true);
        boolean boolean64 = polygonsSet53.isEmpty(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform65 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion66 = polygonsSet53.applyTransform(euclidean2DTransform65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        double double69 = polygonsSet67.getSize();
        boolean boolean70 = euclidean2DAbstractRegion66.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet67);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector71 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean73 = polygonsSet72.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree75 = polygonsSet72.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree75);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet67.buildNew(euclidean2DBSPTree75);
        boolean boolean78 = polygonsSet52.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet67);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform79 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion80 = polygonsSet52.applyTransform(euclidean2DTransform79);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform81 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion82 = polygonsSet52.applyTransform(euclidean2DTransform81);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNotNull(polygonsSet15);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + location61 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location61.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree75);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion80);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion82);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet0.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet28.getTree(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet15.buildNew(euclidean2DBSPTree16);
        double double18 = polygonsSet15.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet15.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform20 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion21 = polygonsSet15.applyTransform(euclidean2DTransform20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = euclidean2DAbstractRegion21.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = euclidean2DAbstractRegion21.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        double double30 = polygonsSet27.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray31 = polygonsSet27.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform32 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion33 = polygonsSet27.applyTransform(euclidean2DTransform32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = euclidean2DAbstractRegion33.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet26.buildNew(euclidean2DBSPTree35);
        boolean boolean37 = polygonsSet14.isEmpty(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean39 = polygonsSet38.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform40 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion41 = polygonsSet38.applyTransform(euclidean2DTransform40);
        double double42 = polygonsSet38.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree46 = polygonsSet44.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet44.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = polygonsSet63.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet38.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet14.buildNew(euclidean2DBSPTree65);
        boolean boolean69 = polygonsSet14.isEmpty();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion21);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray31);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList15 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location20 = polygonsSet17.checkPoint(euclidean2DVector19);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray21 = polygonsSet17.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = polygonsSet22.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet17.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet14.getBarycenter();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList31 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet33.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray37 = polygonsSet33.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet38.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet33.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet33.getTree(true);
        boolean boolean44 = polygonsSet14.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform57 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion58 = polygonsSet45.applyTransform(euclidean2DTransform57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        boolean boolean62 = euclidean2DAbstractRegion58.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet59);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet59.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean65 = polygonsSet64.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet64.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = polygonsSet59.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet69.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet14.buildNew(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + location20 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location20.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray21);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree24);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray37);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion58);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet69);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertNotNull(polygonsSet73);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion51 = polygonsSet13.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform64 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion65 = polygonsSet52.applyTransform(euclidean2DTransform64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        boolean boolean69 = euclidean2DAbstractRegion65.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet66);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = euclidean2DAbstractRegion65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = euclidean2DAbstractRegion51.checkPoint(euclidean2DVector70);
        java.lang.Class<?> wildcardClass72 = location71.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion51);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion65);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (short) 10, (double) 100, (double) (-1), (double) (byte) 100);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double5 = polygonsSet4.getSize();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList6 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform11 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion12 = polygonsSet8.applyTransform(euclidean2DTransform11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        double double17 = polygonsSet15.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet18.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location23 = polygonsSet18.checkPoint(euclidean2DVector22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = polygonsSet18.getTree(true);
        boolean boolean26 = polygonsSet15.isEmpty(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet14.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet29.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet27.buildNew(euclidean2DBSPTree40);
        boolean boolean44 = polygonsSet8.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet7.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet45.checkPoint(euclidean2DVector48);
        boolean boolean50 = polygonsSet45.isEmpty();
        boolean boolean51 = polygonsSet4.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet45);
        double double52 = polygonsSet4.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform53 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion54 = polygonsSet4.applyTransform(euclidean2DTransform53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1L, (double) 0, (double) (byte) 1, (-1.0d));
        double double60 = polygonsSet59.getBoundarySize();
        boolean boolean61 = euclidean2DAbstractRegion54.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet59);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = euclidean2DAbstractRegion54.getBarycenter();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion12);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + location23 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location23.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion54);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 6.0d + "'", double60 == 6.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet19.copySelf();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList21 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform26 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion27 = polygonsSet23.applyTransform(euclidean2DTransform26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet29.buildNew(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        double double47 = polygonsSet45.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet48.buildNew(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location53 = polygonsSet48.checkPoint(euclidean2DVector52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet48.getTree(true);
        boolean boolean56 = polygonsSet45.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet44.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet42.buildNew(euclidean2DBSPTree55);
        boolean boolean59 = polygonsSet23.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet22.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location64 = polygonsSet60.checkPoint(euclidean2DVector63);
        double double65 = polygonsSet60.getSize();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet60.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = euclidean2DAbstractRegion20.checkPoint(euclidean2DVector66);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion27);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + location53 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location53.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertTrue("'" + location64 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location64.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        java.lang.Class<?> wildcardClass85 = polygonsSet84.getClass();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray68 = polygonsSet20.getVertices();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet20.getBarycenter();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(vector2DArray68);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean20 = polygonsSet19.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform21 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion22 = polygonsSet19.applyTransform(euclidean2DTransform21);
        double double23 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform24 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet19.applyTransform(euclidean2DTransform24);
        boolean boolean26 = euclidean2DAbstractRegion18.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion25);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion27 = euclidean2DAbstractRegion18.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion27);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet0.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray16 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform17 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet0.applyTransform(euclidean2DTransform17);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray19 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion20 = polygonsSet0.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(vector2DArray16);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(vector2DArray19);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion20);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion14 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet0.copySelf();
        double double16 = polygonsSet0.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet10.getTree(true);
        boolean boolean15 = euclidean2DAbstractRegion9.isEmpty(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        double double17 = polygonsSet16.getSize();
        double double18 = polygonsSet16.getSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector70 = polygonsSet69.getBarycenter();
        double double71 = polygonsSet69.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree73 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet72.buildNew(euclidean2DBSPTree73);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet75.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet72.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree79 = polygonsSet72.getTree(true);
        boolean boolean80 = polygonsSet69.isEmpty(euclidean2DBSPTree79);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree79);
        boolean boolean82 = polygonsSet68.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet81.getTree(false);
        boolean boolean85 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet81);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean87 = polygonsSet86.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform88 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion89 = polygonsSet86.applyTransform(euclidean2DTransform88);
        double double90 = euclidean2DAbstractRegion89.getBoundarySize();
        boolean boolean91 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion89);
        double double92 = euclidean2DAbstractRegion89.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet93 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean94 = polygonsSet93.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform95 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion96 = polygonsSet93.applyTransform(euclidean2DTransform95);
        double double97 = polygonsSet93.getSize();
        boolean boolean98 = euclidean2DAbstractRegion89.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet93);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion99 = polygonsSet93.copySelf();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion99);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 10L, (double) (short) 1, (double) 100);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet4.applyTransform(euclidean2DTransform5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = euclidean2DAbstractRegion6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = euclidean2DAbstractRegion6.getTree(true);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = polygonsSet12.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet12.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet31.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet35.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet35.getTree(true);
        double double39 = polygonsSet35.getSize();
        boolean boolean40 = euclidean2DAbstractRegion6.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet35);
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertNull(euclidean2DBSPTree14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform68 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet20.applyTransform(euclidean2DTransform68);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane71 = euclidean2DAbstractRegion69.intersection(euclidean2DSubHyperplane70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        boolean boolean41 = polygonsSet40.isEmpty();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList42 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet44.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet44.applyTransform(euclidean2DTransform47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree64 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree64);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector67 = polygonsSet66.getBarycenter();
        double double68 = polygonsSet66.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet69 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet69.buildNew(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location74 = polygonsSet69.checkPoint(euclidean2DVector73);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = polygonsSet69.getTree(true);
        boolean boolean77 = polygonsSet66.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet65.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = polygonsSet63.buildNew(euclidean2DBSPTree76);
        boolean boolean80 = polygonsSet44.isEmpty(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet43.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet82 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet83 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet40.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DSubHyperplane86 = polygonsSet84.intersection(euclidean2DSubHyperplane85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(euclidean2DVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + location74 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location74.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(polygonsSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(polygonsSet84);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) '#', (double) (short) -1, 172.0d, (double) (byte) 100);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        double double5 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform6 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet0.applyTransform(euclidean2DTransform6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) 10L, (double) (short) 1, (double) 100);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        double double17 = polygonsSet15.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = polygonsSet18.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector22 = polygonsSet21.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location23 = polygonsSet18.checkPoint(euclidean2DVector22);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = polygonsSet18.getTree(true);
        boolean boolean26 = polygonsSet15.isEmpty(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet14.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion28 = polygonsSet27.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        double double31 = polygonsSet29.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = polygonsSet32.buildNew(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector36 = polygonsSet35.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location37 = polygonsSet32.checkPoint(euclidean2DVector36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = polygonsSet32.getTree(true);
        boolean boolean40 = polygonsSet29.isEmpty(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform41 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = polygonsSet29.applyTransform(euclidean2DTransform41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        double double45 = polygonsSet43.getSize();
        boolean boolean46 = euclidean2DAbstractRegion42.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet43);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet27.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform61 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion62 = polygonsSet49.applyTransform(euclidean2DTransform61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = polygonsSet63.getBarycenter();
        double double65 = polygonsSet63.getSize();
        boolean boolean66 = euclidean2DAbstractRegion62.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet63);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform67 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion68 = euclidean2DAbstractRegion62.applyTransform(euclidean2DTransform67);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = euclidean2DAbstractRegion68.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location70 = polygonsSet27.checkPoint(euclidean2DVector69);
        org.apache.commons.math3.geometry.partitioning.Region.Location location71 = polygonsSet12.checkPoint(euclidean2DVector69);
        boolean boolean72 = euclidean2DAbstractRegion7.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet20);
        org.junit.Assert.assertNotNull(euclidean2DVector22);
        org.junit.Assert.assertTrue("'" + location23 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location23.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet34);
        org.junit.Assert.assertNotNull(euclidean2DVector36);
        org.junit.Assert.assertTrue("'" + location37 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location37.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion62);
        org.junit.Assert.assertNotNull(euclidean2DVector64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion68);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertTrue("'" + location70 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location70.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location71 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.OUTSIDE + "'", location71.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.OUTSIDE));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform46 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion47 = polygonsSet34.applyTransform(euclidean2DTransform46);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet34.copySelf();
        boolean boolean49 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean51 = polygonsSet50.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform52 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion53 = polygonsSet50.applyTransform(euclidean2DTransform52);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = polygonsSet50.getTree(false);
        boolean boolean56 = polygonsSet20.isEmpty(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion57 = polygonsSet20.copySelf();
        boolean boolean58 = euclidean2DAbstractRegion57.isEmpty();
        boolean boolean59 = euclidean2DAbstractRegion57.isEmpty();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion47);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion53);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray40 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet1.getTree(true);
        boolean boolean43 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        double double48 = polygonsSet46.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet49.buildNew(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location54 = polygonsSet49.checkPoint(euclidean2DVector53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = polygonsSet49.getTree(true);
        boolean boolean57 = polygonsSet46.isEmpty(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet45.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector62 = polygonsSet61.getBarycenter();
        double double63 = polygonsSet61.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet64.buildNew(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector68 = polygonsSet67.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location69 = polygonsSet64.checkPoint(euclidean2DVector68);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = polygonsSet64.getTree(true);
        boolean boolean72 = polygonsSet61.isEmpty(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet60.buildNew(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet74 = polygonsSet58.buildNew(euclidean2DBSPTree71);
        boolean boolean75 = polygonsSet74.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector76 = polygonsSet74.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet1.checkPoint(euclidean2DVector76);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray78 = polygonsSet1.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet81 = polygonsSet79.buildNew(euclidean2DBSPTree80);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion82 = polygonsSet79.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree84 = polygonsSet79.getTree(false);
        boolean boolean85 = polygonsSet1.isEmpty(euclidean2DBSPTree84);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree84);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(vector2DArray40);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + location54 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location54.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(polygonsSet58);
        org.junit.Assert.assertNotNull(euclidean2DVector62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(euclidean2DVector68);
        org.junit.Assert.assertTrue("'" + location69 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location69.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(polygonsSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector76);
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray78);
        org.junit.Assert.assertNotNull(polygonsSet81);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion82);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree25 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = polygonsSet24.buildNew(euclidean2DBSPTree25);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector28 = polygonsSet27.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location29 = polygonsSet24.checkPoint(euclidean2DVector28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = polygonsSet24.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet20.buildNew(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet20.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray39 = polygonsSet20.getVertices();
        double double40 = polygonsSet20.getSize();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(polygonsSet26);
        org.junit.Assert.assertNotNull(euclidean2DVector28);
        org.junit.Assert.assertTrue("'" + location29 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location29.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree31);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(vector2DArray39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        double double7 = polygonsSet0.getSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet31.getTree(false);
        boolean boolean35 = polygonsSet30.isEmpty(euclidean2DBSPTree34);
        double double36 = polygonsSet30.getBoundarySize();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList37 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList37);
        double double39 = polygonsSet38.getSize();
        double double40 = polygonsSet38.getSize();
        boolean boolean41 = polygonsSet38.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet38.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean59 = polygonsSet58.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform60 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion61 = polygonsSet58.applyTransform(euclidean2DTransform60);
        double double62 = euclidean2DAbstractRegion61.getBoundarySize();
        boolean boolean63 = polygonsSet57.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion61);
        boolean boolean64 = polygonsSet30.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) euclidean2DAbstractRegion61);
        double double65 = euclidean2DAbstractRegion61.getSize();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 1, (double) ' ', (double) 0, (double) 10.0f);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet6.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet6.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet25.getTree(false);
        boolean boolean28 = polygonsSet25.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet25.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet4.buildNew(euclidean2DBSPTree40);
        org.junit.Assert.assertNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertNotNull(polygonsSet42);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(0.0d, (double) 100.0f, (double) (short) -1, (double) (short) 100);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        double double2 = polygonsSet1.getSize();
        boolean boolean3 = polygonsSet1.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = polygonsSet4.buildNew(euclidean2DBSPTree5);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector8 = polygonsSet7.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location9 = polygonsSet4.checkPoint(euclidean2DVector8);
        double double10 = polygonsSet4.getBoundarySize();
        double double11 = polygonsSet4.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = polygonsSet4.getTree(false);
        boolean boolean14 = polygonsSet1.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet4);
        boolean boolean15 = polygonsSet4.isEmpty();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(polygonsSet6);
        org.junit.Assert.assertNotNull(euclidean2DVector8);
        org.junit.Assert.assertTrue("'" + location9 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location9.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        boolean boolean45 = polygonsSet0.isEmpty();
        double double46 = polygonsSet0.getSize();
        double double47 = polygonsSet0.getBoundarySize();
        double double48 = polygonsSet0.getBoundarySize();
        double double49 = polygonsSet0.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        java.lang.Class<?> wildcardClass69 = polygonsSet68.getClass();
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        boolean boolean5 = polygonsSet4.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet4.getBarycenter();
        boolean boolean7 = polygonsSet4.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet14.getTree(true);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList18 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList18);
        double double20 = polygonsSet19.getSize();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (byte) 0, 1.0d, (double) (byte) -1, (double) 1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        double double32 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        boolean boolean41 = polygonsSet30.isEmpty(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform42 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion43 = polygonsSet30.applyTransform(euclidean2DTransform42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        boolean boolean47 = euclidean2DAbstractRegion43.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet44);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet44.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location49 = polygonsSet29.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location50 = polygonsSet22.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet19.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet14.checkPoint(euclidean2DVector48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet53.buildNew(euclidean2DBSPTree54);
        double double56 = polygonsSet53.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray57 = polygonsSet53.getVertices();
        boolean boolean58 = polygonsSet53.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = polygonsSet53.copySelf();
        boolean boolean60 = euclidean2DAbstractRegion59.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = euclidean2DAbstractRegion59.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet14.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector64 = null;
        org.apache.commons.math3.geometry.partitioning.Region.Location location65 = polygonsSet14.checkPoint(euclidean2DVector64);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion43);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + location49 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY + "'", location49.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY));
        org.junit.Assert.assertTrue("'" + location50 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location50.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + location65 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location65.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side27 = polygonsSet25.side(euclidean2DHyperplane26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        double double3 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray4 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet0.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet0.getTree(true);
        boolean boolean9 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet0.copySelf();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree38);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean1 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform2 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.applyTransform(euclidean2DTransform2);
        double double4 = polygonsSet0.getBoundarySize();
        boolean boolean5 = polygonsSet0.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet0.getVertices();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet0.copySelf();
        java.lang.Class<?> wildcardClass8 = polygonsSet0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet39.checkPoint(euclidean2DVector42);
        double double44 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = polygonsSet46.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector52 = polygonsSet51.getBarycenter();
        double double53 = polygonsSet51.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree55 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet54.buildNew(euclidean2DBSPTree55);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector58 = polygonsSet57.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location59 = polygonsSet54.checkPoint(euclidean2DVector58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet54.getTree(true);
        boolean boolean62 = polygonsSet51.isEmpty(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet50.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet46.buildNew(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree61);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet65.getTree(false);
        boolean boolean68 = polygonsSet65.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector69 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion70 = polygonsSet65.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        double double75 = polygonsSet73.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet76.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location81 = polygonsSet76.checkPoint(euclidean2DVector80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet76.getTree(true);
        boolean boolean84 = polygonsSet73.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet72.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector87 = polygonsSet86.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree89 = polygonsSet86.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet90 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree89);
        boolean boolean91 = polygonsSet85.isEmpty(euclidean2DBSPTree89);
        boolean boolean92 = euclidean2DAbstractRegion70.isEmpty(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet93 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree89);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree95 = polygonsSet93.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet96 = polygonsSet39.buildNew(euclidean2DBSPTree95);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree98 = polygonsSet96.getTree(true);
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNull(euclidean2DBSPTree48);
        org.junit.Assert.assertNotNull(euclidean2DVector52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector58);
        org.junit.Assert.assertTrue("'" + location59 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location59.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector69);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion70);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + location81 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location81.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertNotNull(euclidean2DVector87);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree95);
        org.junit.Assert.assertNotNull(polygonsSet96);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree98);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet1.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        double double8 = polygonsSet6.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = polygonsSet9.buildNew(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector13 = polygonsSet12.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location14 = polygonsSet9.checkPoint(euclidean2DVector13);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = polygonsSet9.getTree(true);
        boolean boolean17 = polygonsSet6.isEmpty(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet5.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = polygonsSet1.buildNew(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        boolean boolean23 = polygonsSet20.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet20.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion25 = polygonsSet20.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = polygonsSet26.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector30 = polygonsSet29.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location31 = polygonsSet26.checkPoint(euclidean2DVector30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree33 = polygonsSet26.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector38 = polygonsSet37.getBarycenter();
        double double39 = polygonsSet37.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = polygonsSet40.buildNew(euclidean2DBSPTree41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location45 = polygonsSet40.checkPoint(euclidean2DVector44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = polygonsSet40.getTree(true);
        boolean boolean48 = polygonsSet37.isEmpty(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet36.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector53 = polygonsSet52.getBarycenter();
        double double54 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree56 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = polygonsSet55.buildNew(euclidean2DBSPTree56);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector59 = polygonsSet58.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location60 = polygonsSet55.checkPoint(euclidean2DVector59);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet55.getTree(true);
        boolean boolean63 = polygonsSet52.isEmpty(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet51.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = polygonsSet49.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet66 = polygonsSet34.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet67 = polygonsSet20.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet70 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree69);
        org.junit.Assert.assertNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet11);
        org.junit.Assert.assertNotNull(euclidean2DVector13);
        org.junit.Assert.assertTrue("'" + location14 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location14.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(polygonsSet19);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion25);
        org.junit.Assert.assertNotNull(polygonsSet28);
        org.junit.Assert.assertNotNull(euclidean2DVector30);
        org.junit.Assert.assertTrue("'" + location31 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location31.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree33);
        org.junit.Assert.assertNotNull(euclidean2DVector38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + location45 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location45.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet57);
        org.junit.Assert.assertNotNull(euclidean2DVector59);
        org.junit.Assert.assertTrue("'" + location60 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location60.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(polygonsSet65);
        org.junit.Assert.assertNotNull(polygonsSet66);
        org.junit.Assert.assertNotNull(polygonsSet67);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = polygonsSet0.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList4 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = polygonsSet6.buildNew(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform9 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion10 = polygonsSet6.applyTransform(euclidean2DTransform9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree11 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree11);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector14 = polygonsSet13.getBarycenter();
        double double15 = polygonsSet13.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet12.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        double double30 = polygonsSet28.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet31.buildNew(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location36 = polygonsSet31.checkPoint(euclidean2DVector35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = polygonsSet31.getTree(true);
        boolean boolean39 = polygonsSet28.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet27.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = polygonsSet25.buildNew(euclidean2DBSPTree38);
        boolean boolean42 = polygonsSet6.isEmpty(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = polygonsSet5.buildNew(euclidean2DBSPTree38);
        boolean boolean44 = polygonsSet0.isEmpty(euclidean2DBSPTree38);
        boolean boolean45 = polygonsSet0.isEmpty();
        double double46 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform47 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion48 = polygonsSet0.applyTransform(euclidean2DTransform47);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree3);
        org.junit.Assert.assertNotNull(polygonsSet8);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion10);
        org.junit.Assert.assertNotNull(euclidean2DVector14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + location36 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location36.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(polygonsSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion48);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = polygonsSet2.buildNew(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform5 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion6 = polygonsSet2.applyTransform(euclidean2DTransform5);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet9 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector10 = polygonsSet9.getBarycenter();
        double double11 = polygonsSet9.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree13 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet12.buildNew(euclidean2DBSPTree13);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector16 = polygonsSet15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location17 = polygonsSet12.checkPoint(euclidean2DVector16);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = polygonsSet12.getTree(true);
        boolean boolean20 = polygonsSet9.isEmpty(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet8.buildNew(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        double double26 = polygonsSet24.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet27.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector31 = polygonsSet30.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location32 = polygonsSet27.checkPoint(euclidean2DVector31);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = polygonsSet27.getTree(true);
        boolean boolean35 = polygonsSet24.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = polygonsSet23.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet21.buildNew(euclidean2DBSPTree34);
        boolean boolean38 = polygonsSet2.isEmpty(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet1.buildNew(euclidean2DBSPTree34);
        boolean boolean40 = polygonsSet39.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side42 = polygonsSet39.side(euclidean2DHyperplane41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(polygonsSet4);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion6);
        org.junit.Assert.assertNotNull(euclidean2DVector10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector16);
        org.junit.Assert.assertTrue("'" + location17 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location17.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(euclidean2DVector31);
        org.junit.Assert.assertTrue("'" + location32 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location32.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(polygonsSet36);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet14.copySelf();
        boolean boolean16 = euclidean2DAbstractRegion15.isEmpty();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = euclidean2DAbstractRegion15.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = euclidean2DAbstractRegion15.copySelf();
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList19 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList19);
        double double21 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        double double24 = polygonsSet22.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet27 = polygonsSet25.buildNew(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector29 = polygonsSet28.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location30 = polygonsSet25.checkPoint(euclidean2DVector29);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = polygonsSet25.getTree(true);
        boolean boolean33 = polygonsSet22.isEmpty(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform34 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion35 = polygonsSet22.applyTransform(euclidean2DTransform34);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion36 = polygonsSet22.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        double double41 = polygonsSet39.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet42 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet42.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector46 = polygonsSet45.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location47 = polygonsSet42.checkPoint(euclidean2DVector46);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet42.getTree(true);
        boolean boolean50 = polygonsSet39.isEmpty(euclidean2DBSPTree49);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = polygonsSet38.buildNew(euclidean2DBSPTree49);
        boolean boolean52 = polygonsSet22.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet51);
        boolean boolean53 = polygonsSet20.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean55 = polygonsSet54.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet54.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet22.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector61 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location62 = euclidean2DAbstractRegion15.checkPoint(euclidean2DVector61);
        java.lang.Class<?> wildcardClass63 = location62.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet27);
        org.junit.Assert.assertNotNull(euclidean2DVector29);
        org.junit.Assert.assertTrue("'" + location30 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location30.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion35);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion36);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector46);
        org.junit.Assert.assertTrue("'" + location47 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location47.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(polygonsSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(euclidean2DVector61);
        org.junit.Assert.assertTrue("'" + location62 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location62.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) 100.0f, (double) 1L, 0.0d, (double) (-1.0f));
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet4.buildNew(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(polygonsSet13);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree2 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform3 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion4 = polygonsSet0.applyTransform(euclidean2DTransform3);
        double double5 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform6 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion7 = polygonsSet0.applyTransform(euclidean2DTransform6);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform8 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion9 = polygonsSet0.applyTransform(euclidean2DTransform8);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector11 = polygonsSet10.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray12 = polygonsSet10.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray13 = polygonsSet10.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray14 = polygonsSet10.getVertices();
        boolean boolean15 = polygonsSet10.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector17 = polygonsSet16.getBarycenter();
        double double18 = polygonsSet16.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree20 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = polygonsSet19.buildNew(euclidean2DBSPTree20);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector23 = polygonsSet22.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location24 = polygonsSet19.checkPoint(euclidean2DVector23);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree26 = polygonsSet19.getTree(true);
        boolean boolean27 = polygonsSet16.isEmpty(euclidean2DBSPTree26);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform28 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion29 = polygonsSet16.applyTransform(euclidean2DTransform28);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform30 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion31 = polygonsSet16.applyTransform(euclidean2DTransform30);
        boolean boolean32 = polygonsSet16.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree34 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = polygonsSet33.buildNew(euclidean2DBSPTree34);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet36.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet33.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree40 = polygonsSet33.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector45 = polygonsSet44.getBarycenter();
        double double46 = polygonsSet44.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree48 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = polygonsSet47.buildNew(euclidean2DBSPTree48);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector51 = polygonsSet50.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location52 = polygonsSet47.checkPoint(euclidean2DVector51);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet47.getTree(true);
        boolean boolean55 = polygonsSet44.isEmpty(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = polygonsSet43.buildNew(euclidean2DBSPTree54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector60 = polygonsSet59.getBarycenter();
        double double61 = polygonsSet59.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet62.buildNew(euclidean2DBSPTree63);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector66 = polygonsSet65.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location67 = polygonsSet62.checkPoint(euclidean2DVector66);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree69 = polygonsSet62.getTree(true);
        boolean boolean70 = polygonsSet59.isEmpty(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = polygonsSet58.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = polygonsSet56.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = polygonsSet41.buildNew(euclidean2DBSPTree69);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion74 = polygonsSet73.copySelf();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector75 = polygonsSet73.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location76 = polygonsSet16.checkPoint(euclidean2DVector75);
        org.apache.commons.math3.geometry.partitioning.Region.Location location77 = polygonsSet10.checkPoint(euclidean2DVector75);
        boolean boolean78 = euclidean2DAbstractRegion9.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree80 = polygonsSet10.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DHyperplane81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.geometry.partitioning.Side side82 = polygonsSet10.side(euclidean2DHyperplane81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(euclidean2DBSPTree2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion7);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion9);
        org.junit.Assert.assertNotNull(euclidean2DVector11);
        org.junit.Assert.assertNotNull(vector2DArray12);
        org.junit.Assert.assertNotNull(vector2DArray13);
        org.junit.Assert.assertNotNull(vector2DArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet21);
        org.junit.Assert.assertNotNull(euclidean2DVector23);
        org.junit.Assert.assertTrue("'" + location24 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location24.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion29);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(polygonsSet35);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree40);
        org.junit.Assert.assertNotNull(euclidean2DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet49);
        org.junit.Assert.assertNotNull(euclidean2DVector51);
        org.junit.Assert.assertTrue("'" + location52 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location52.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(polygonsSet56);
        org.junit.Assert.assertNotNull(euclidean2DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet64);
        org.junit.Assert.assertNotNull(euclidean2DVector66);
        org.junit.Assert.assertTrue("'" + location67 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location67.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(polygonsSet71);
        org.junit.Assert.assertNotNull(polygonsSet72);
        org.junit.Assert.assertNotNull(polygonsSet73);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion74);
        org.junit.Assert.assertNotNull(euclidean2DVector75);
        org.junit.Assert.assertTrue("'" + location76 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location76.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + location77 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location77.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree80);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList0 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet2.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray6 = polygonsSet2.getVertices();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = polygonsSet7.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet2.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet10.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet13.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = polygonsSet16.buildNew(euclidean2DBSPTree17);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location21 = polygonsSet16.checkPoint(euclidean2DVector20);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = polygonsSet16.getTree(true);
        boolean boolean24 = polygonsSet13.isEmpty(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet10.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion38 = polygonsSet26.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion39 = euclidean2DAbstractRegion38.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion40 = euclidean2DAbstractRegion39.copySelf();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform41 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = euclidean2DAbstractRegion39.applyTransform(euclidean2DTransform41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = euclidean2DAbstractRegion42.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet10.buildNew(euclidean2DBSPTree44);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(vector2DArray6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree9);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertNotNull(polygonsSet18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + location21 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location21.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion38);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion39);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion40);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertNotNull(polygonsSet45);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray32 = polygonsSet30.getVertices();
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray32);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform12 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion13 = polygonsSet0.applyTransform(euclidean2DTransform12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector15 = polygonsSet14.getBarycenter();
        double double16 = polygonsSet14.getSize();
        boolean boolean17 = euclidean2DAbstractRegion13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet14);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform18 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion19 = euclidean2DAbstractRegion13.applyTransform(euclidean2DTransform18);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = euclidean2DAbstractRegion13.getBarycenter();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location26 = polygonsSet21.checkPoint(euclidean2DVector25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet21.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        double double34 = polygonsSet32.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet35 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet35.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet38.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location40 = polygonsSet35.checkPoint(euclidean2DVector39);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree42 = polygonsSet35.getTree(true);
        boolean boolean43 = polygonsSet32.isEmpty(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet44 = polygonsSet31.buildNew(euclidean2DBSPTree42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector48 = polygonsSet47.getBarycenter();
        double double49 = polygonsSet47.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree51 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet50.buildNew(euclidean2DBSPTree51);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet53 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector54 = polygonsSet53.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location55 = polygonsSet50.checkPoint(euclidean2DVector54);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet50.getTree(true);
        boolean boolean58 = polygonsSet47.isEmpty(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = polygonsSet46.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet60 = polygonsSet44.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet29.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector63 = polygonsSet62.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree65 = polygonsSet62.getTree(false);
        boolean boolean66 = polygonsSet61.isEmpty(euclidean2DBSPTree65);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = polygonsSet68.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree71 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree71);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet73 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector74 = polygonsSet73.getBarycenter();
        double double75 = polygonsSet73.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet76 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree77 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = polygonsSet76.buildNew(euclidean2DBSPTree77);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet79 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector80 = polygonsSet79.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location81 = polygonsSet76.checkPoint(euclidean2DVector80);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree83 = polygonsSet76.getTree(true);
        boolean boolean84 = polygonsSet73.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = polygonsSet72.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet86 = polygonsSet68.buildNew(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet87 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree83);
        boolean boolean88 = polygonsSet61.isEmpty(euclidean2DBSPTree83);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector89 = polygonsSet61.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion90 = polygonsSet61.copySelf();
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion91 = euclidean2DAbstractRegion90.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree93 = euclidean2DAbstractRegion90.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet94 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree93);
        boolean boolean95 = euclidean2DAbstractRegion13.isEmpty(euclidean2DBSPTree93);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion96 = euclidean2DAbstractRegion13.copySelf();
        double double97 = euclidean2DAbstractRegion96.getBoundarySize();
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion13);
        org.junit.Assert.assertNotNull(euclidean2DVector15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion19);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + location26 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location26.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + location40 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location40.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(polygonsSet44);
        org.junit.Assert.assertNotNull(euclidean2DVector48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DVector54);
        org.junit.Assert.assertTrue("'" + location55 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location55.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(polygonsSet59);
        org.junit.Assert.assertNotNull(polygonsSet60);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(euclidean2DVector63);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree70);
        org.junit.Assert.assertNotNull(euclidean2DVector74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet78);
        org.junit.Assert.assertNotNull(euclidean2DVector80);
        org.junit.Assert.assertTrue("'" + location81 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location81.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(polygonsSet85);
        org.junit.Assert.assertNotNull(polygonsSet86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector89);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion90);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion91);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((double) (short) 0, (double) 10, (double) (short) 10, (double) '#');
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree19 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree19);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = polygonsSet20.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        double double27 = polygonsSet25.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet28 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet28.buildNew(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector32 = polygonsSet31.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location33 = polygonsSet28.checkPoint(euclidean2DVector32);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree35 = polygonsSet28.getTree(true);
        boolean boolean36 = polygonsSet25.isEmpty(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = polygonsSet24.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet20.buildNew(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree35);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree41 = polygonsSet39.getTree(false);
        boolean boolean42 = polygonsSet39.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet43.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector47 = polygonsSet46.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location48 = polygonsSet43.checkPoint(euclidean2DVector47);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree50 = polygonsSet43.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet51 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = polygonsSet39.buildNew(euclidean2DBSPTree50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree54 = polygonsSet39.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = polygonsSet18.buildNew(euclidean2DBSPTree54);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList56 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet57 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList56);
        double double58 = polygonsSet57.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray59 = polygonsSet57.getVertices();
        boolean boolean60 = polygonsSet18.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet57);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree62 = polygonsSet18.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = polygonsSet4.buildNew(euclidean2DBSPTree62);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet65 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree22);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector32);
        org.junit.Assert.assertTrue("'" + location33 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location33.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(polygonsSet37);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(euclidean2DVector47);
        org.junit.Assert.assertTrue("'" + location48 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location48.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree50);
        org.junit.Assert.assertNotNull(polygonsSet52);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree54);
        org.junit.Assert.assertNotNull(polygonsSet55);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree62);
        org.junit.Assert.assertNotNull(polygonsSet64);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector4 = polygonsSet3.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location5 = polygonsSet0.checkPoint(euclidean2DVector4);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        double double13 = polygonsSet11.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = polygonsSet14.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location19 = polygonsSet14.checkPoint(euclidean2DVector18);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = polygonsSet14.getTree(true);
        boolean boolean22 = polygonsSet11.isEmpty(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet10.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        double double28 = polygonsSet26.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet31 = polygonsSet29.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector33 = polygonsSet32.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location34 = polygonsSet29.checkPoint(euclidean2DVector33);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet29.getTree(true);
        boolean boolean37 = polygonsSet26.isEmpty(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet25.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet23.buildNew(euclidean2DBSPTree36);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet8.buildNew(euclidean2DBSPTree36);
        double double41 = polygonsSet40.getBoundarySize();
        double double42 = polygonsSet40.getSize();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DVector4);
        org.junit.Assert.assertTrue("'" + location5 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location5.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet16);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + location19 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location19.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet31);
        org.junit.Assert.assertNotNull(euclidean2DVector33);
        org.junit.Assert.assertTrue("'" + location34 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location34.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector2 = polygonsSet0.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree3 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree3);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        double double7 = polygonsSet5.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree9 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = polygonsSet8.buildNew(euclidean2DBSPTree9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector12 = polygonsSet11.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location13 = polygonsSet8.checkPoint(euclidean2DVector12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = polygonsSet8.getTree(true);
        boolean boolean16 = polygonsSet5.isEmpty(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = polygonsSet4.buildNew(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion18 = polygonsSet17.copySelf();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector20 = polygonsSet19.getBarycenter();
        double double21 = polygonsSet19.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree23 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = polygonsSet22.buildNew(euclidean2DBSPTree23);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector26 = polygonsSet25.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location27 = polygonsSet22.checkPoint(euclidean2DVector26);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree29 = polygonsSet22.getTree(true);
        boolean boolean30 = polygonsSet19.isEmpty(euclidean2DBSPTree29);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform31 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion32 = polygonsSet19.applyTransform(euclidean2DTransform31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        boolean boolean36 = euclidean2DAbstractRegion32.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet33);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector37 = polygonsSet33.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location38 = polygonsSet17.checkPoint(euclidean2DVector37);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector39 = polygonsSet17.getBarycenter();
        boolean boolean40 = polygonsSet0.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet17);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform41 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion42 = polygonsSet0.applyTransform(euclidean2DTransform41);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet43 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector44 = polygonsSet43.getBarycenter();
        double double45 = polygonsSet43.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet46.buildNew(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location51 = polygonsSet46.checkPoint(euclidean2DVector50);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = polygonsSet46.getTree(true);
        boolean boolean54 = polygonsSet43.isEmpty(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree57 = polygonsSet55.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet58 = polygonsSet0.buildNew(euclidean2DBSPTree57);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet59 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree57);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertNotNull(euclidean2DVector2);
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet10);
        org.junit.Assert.assertNotNull(euclidean2DVector12);
        org.junit.Assert.assertTrue("'" + location13 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location13.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(polygonsSet17);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion18);
        org.junit.Assert.assertNotNull(euclidean2DVector20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet24);
        org.junit.Assert.assertNotNull(euclidean2DVector26);
        org.junit.Assert.assertTrue("'" + location27 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location27.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion32);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(euclidean2DVector37);
        org.junit.Assert.assertTrue("'" + location38 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location38.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DVector39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion42);
        org.junit.Assert.assertNotNull(euclidean2DVector44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + location51 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location51.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree57);
        org.junit.Assert.assertNotNull(polygonsSet58);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree1 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = polygonsSet0.buildNew(euclidean2DBSPTree1);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion3 = polygonsSet0.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree5 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree7 = polygonsSet0.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray8 = polygonsSet0.getVertices();
        org.junit.Assert.assertNotNull(polygonsSet2);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion3);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree5);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree7);
        org.junit.Assert.assertNotNull(vector2DArray8);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree0 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet1 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree0);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet2 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector3 = polygonsSet2.getBarycenter();
        double double4 = polygonsSet2.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree6 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet7 = polygonsSet5.buildNew(euclidean2DBSPTree6);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet8 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector9 = polygonsSet8.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location10 = polygonsSet5.checkPoint(euclidean2DVector9);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = polygonsSet5.getTree(true);
        boolean boolean13 = polygonsSet2.isEmpty(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet14 = polygonsSet1.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree15 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet16 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree15);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector18 = polygonsSet17.getBarycenter();
        double double19 = polygonsSet17.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree21 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet22 = polygonsSet20.buildNew(euclidean2DBSPTree21);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector24 = polygonsSet23.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location25 = polygonsSet20.checkPoint(euclidean2DVector24);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree27 = polygonsSet20.getTree(true);
        boolean boolean28 = polygonsSet17.isEmpty(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet29 = polygonsSet16.buildNew(euclidean2DBSPTree27);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet14.buildNew(euclidean2DBSPTree27);
        double double31 = polygonsSet30.getSize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree32 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree32);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector35 = polygonsSet34.getBarycenter();
        double double36 = polygonsSet34.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet37 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree38 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = polygonsSet37.buildNew(euclidean2DBSPTree38);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector41 = polygonsSet40.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location42 = polygonsSet37.checkPoint(euclidean2DVector41);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree44 = polygonsSet37.getTree(true);
        boolean boolean45 = polygonsSet34.isEmpty(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet33.buildNew(euclidean2DBSPTree44);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree47 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree47);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet49 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector50 = polygonsSet49.getBarycenter();
        double double51 = polygonsSet49.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree53 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet54 = polygonsSet52.buildNew(euclidean2DBSPTree53);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet55 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector56 = polygonsSet55.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location57 = polygonsSet52.checkPoint(euclidean2DVector56);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree59 = polygonsSet52.getTree(true);
        boolean boolean60 = polygonsSet49.isEmpty(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet61 = polygonsSet48.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet62 = polygonsSet46.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet63 = polygonsSet30.buildNew(euclidean2DBSPTree59);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet64 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean65 = polygonsSet64.isEmpty();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet64.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet30.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion69 = polygonsSet68.copySelf();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree70 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet71 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree70);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet72 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector73 = polygonsSet72.getBarycenter();
        double double74 = polygonsSet72.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet75 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree76 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet77 = polygonsSet75.buildNew(euclidean2DBSPTree76);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet78 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector79 = polygonsSet78.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location80 = polygonsSet75.checkPoint(euclidean2DVector79);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree82 = polygonsSet75.getTree(true);
        boolean boolean83 = polygonsSet72.isEmpty(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet84 = polygonsSet71.buildNew(euclidean2DBSPTree82);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet85 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector86 = polygonsSet85.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree88 = polygonsSet85.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet89 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree88);
        boolean boolean90 = polygonsSet84.isEmpty(euclidean2DBSPTree88);
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector91 = polygonsSet84.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location92 = polygonsSet68.checkPoint(euclidean2DVector91);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree94 = polygonsSet68.getTree(true);
        double double95 = polygonsSet68.getBoundarySize();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree97 = polygonsSet68.getTree(true);
        org.junit.Assert.assertNotNull(euclidean2DVector3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet7);
        org.junit.Assert.assertNotNull(euclidean2DVector9);
        org.junit.Assert.assertTrue("'" + location10 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location10.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(polygonsSet14);
        org.junit.Assert.assertNotNull(euclidean2DVector18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet22);
        org.junit.Assert.assertNotNull(euclidean2DVector24);
        org.junit.Assert.assertTrue("'" + location25 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location25.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(polygonsSet29);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DVector35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet39);
        org.junit.Assert.assertNotNull(euclidean2DVector41);
        org.junit.Assert.assertTrue("'" + location42 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location42.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertNotNull(euclidean2DVector50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet54);
        org.junit.Assert.assertNotNull(euclidean2DVector56);
        org.junit.Assert.assertTrue("'" + location57 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location57.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(polygonsSet61);
        org.junit.Assert.assertNotNull(polygonsSet62);
        org.junit.Assert.assertNotNull(polygonsSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion69);
        org.junit.Assert.assertNotNull(euclidean2DVector73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet77);
        org.junit.Assert.assertNotNull(euclidean2DVector79);
        org.junit.Assert.assertTrue("'" + location80 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location80.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(polygonsSet84);
        org.junit.Assert.assertNotNull(euclidean2DVector86);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(euclidean2DVector91);
        org.junit.Assert.assertTrue("'" + location92 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location92.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree97);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet4 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((-1.0d), (double) (byte) 0, (double) (-1), (double) 10.0f);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector6 = polygonsSet5.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree8 = polygonsSet5.getTree(false);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList9 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet10 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList9);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet11 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree12 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = polygonsSet11.buildNew(euclidean2DBSPTree12);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform14 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion15 = polygonsSet11.applyTransform(euclidean2DTransform14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree16 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet17 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree16);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet18 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector19 = polygonsSet18.getBarycenter();
        double double20 = polygonsSet18.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet21 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree22 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = polygonsSet21.buildNew(euclidean2DBSPTree22);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet24 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector25 = polygonsSet24.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location26 = polygonsSet21.checkPoint(euclidean2DVector25);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree28 = polygonsSet21.getTree(true);
        boolean boolean29 = polygonsSet18.isEmpty(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet30 = polygonsSet17.buildNew(euclidean2DBSPTree28);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree31 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree31);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector34 = polygonsSet33.getBarycenter();
        double double35 = polygonsSet33.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet36 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree37 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = polygonsSet36.buildNew(euclidean2DBSPTree37);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet39 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector40 = polygonsSet39.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location41 = polygonsSet36.checkPoint(euclidean2DVector40);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree43 = polygonsSet36.getTree(true);
        boolean boolean44 = polygonsSet33.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet45 = polygonsSet32.buildNew(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = polygonsSet30.buildNew(euclidean2DBSPTree43);
        boolean boolean47 = polygonsSet11.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet48 = polygonsSet10.buildNew(euclidean2DBSPTree43);
        boolean boolean49 = polygonsSet5.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        boolean boolean51 = polygonsSet4.isEmpty(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree43);
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray53 = polygonsSet52.getVertices();
        java.lang.Class<?> wildcardClass54 = polygonsSet52.getClass();
        org.junit.Assert.assertNotNull(euclidean2DVector6);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree8);
        org.junit.Assert.assertNotNull(polygonsSet13);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion15);
        org.junit.Assert.assertNotNull(euclidean2DVector19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet23);
        org.junit.Assert.assertNotNull(euclidean2DVector25);
        org.junit.Assert.assertTrue("'" + location26 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location26.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(polygonsSet30);
        org.junit.Assert.assertNotNull(euclidean2DVector34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet38);
        org.junit.Assert.assertNotNull(euclidean2DVector40);
        org.junit.Assert.assertTrue("'" + location41 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location41.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(polygonsSet45);
        org.junit.Assert.assertNotNull(polygonsSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(polygonsSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(vector2DArray53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet0 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector1 = polygonsSet0.getBarycenter();
        double double2 = polygonsSet0.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet3 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree4 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet5 = polygonsSet3.buildNew(euclidean2DBSPTree4);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet6 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector7 = polygonsSet6.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location8 = polygonsSet3.checkPoint(euclidean2DVector7);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree10 = polygonsSet3.getTree(true);
        boolean boolean11 = polygonsSet0.isEmpty(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet12 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet13 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree10);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree14 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet15 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree14);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree17 = polygonsSet15.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree18 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet19 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree18);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet20 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector21 = polygonsSet20.getBarycenter();
        double double22 = polygonsSet20.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet23 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree24 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet25 = polygonsSet23.buildNew(euclidean2DBSPTree24);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet26 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector27 = polygonsSet26.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location28 = polygonsSet23.checkPoint(euclidean2DVector27);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree30 = polygonsSet23.getTree(true);
        boolean boolean31 = polygonsSet20.isEmpty(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet32 = polygonsSet19.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet33 = polygonsSet15.buildNew(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet34 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree30);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree36 = polygonsSet34.getTree(false);
        boolean boolean37 = polygonsSet34.isEmpty();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet38 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree39 = null;
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet40 = polygonsSet38.buildNew(euclidean2DBSPTree39);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet41 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DVector42 = polygonsSet41.getBarycenter();
        org.apache.commons.math3.geometry.partitioning.Region.Location location43 = polygonsSet38.checkPoint(euclidean2DVector42);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree45 = polygonsSet38.getTree(true);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet46 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet47 = polygonsSet34.buildNew(euclidean2DBSPTree45);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree49 = polygonsSet34.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet50 = polygonsSet13.buildNew(euclidean2DBSPTree49);
        java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>> euclidean2DSubHyperplaneList51 = new java.util.ArrayList<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>();
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet52 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet((java.util.Collection<org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>>) euclidean2DSubHyperplaneList51);
        double double53 = polygonsSet52.getSize();
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] vector2DArray54 = polygonsSet52.getVertices();
        boolean boolean55 = polygonsSet13.contains((org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>) polygonsSet52);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet56 = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet();
        boolean boolean57 = polygonsSet56.isEmpty();
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform58 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion59 = polygonsSet56.applyTransform(euclidean2DTransform58);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree61 = polygonsSet56.getTree(false);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree63 = polygonsSet56.getTree(false);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform64 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion65 = polygonsSet56.applyTransform(euclidean2DTransform64);
        org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> euclidean2DBSPTree67 = polygonsSet56.getTree(false);
        org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet polygonsSet68 = polygonsSet52.buildNew(euclidean2DBSPTree67);
        org.apache.commons.math3.geometry.partitioning.Transform<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DTransform69 = null;
        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> euclidean2DAbstractRegion70 = polygonsSet52.applyTransform(euclidean2DTransform69);
        org.junit.Assert.assertNotNull(euclidean2DVector1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet5);
        org.junit.Assert.assertNotNull(euclidean2DVector7);
        org.junit.Assert.assertTrue("'" + location8 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location8.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(euclidean2DBSPTree17);
        org.junit.Assert.assertNotNull(euclidean2DVector21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(polygonsSet25);
        org.junit.Assert.assertNotNull(euclidean2DVector27);
        org.junit.Assert.assertTrue("'" + location28 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location28.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(polygonsSet32);
        org.junit.Assert.assertNotNull(polygonsSet33);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(polygonsSet40);
        org.junit.Assert.assertNotNull(euclidean2DVector42);
        org.junit.Assert.assertTrue("'" + location43 + "' != '" + org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE + "'", location43.equals(org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE));
        org.junit.Assert.assertNotNull(euclidean2DBSPTree45);
        org.junit.Assert.assertNotNull(polygonsSet47);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree49);
        org.junit.Assert.assertNotNull(polygonsSet50);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector2DArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion59);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree61);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree63);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion65);
        org.junit.Assert.assertNotNull(euclidean2DBSPTree67);
        org.junit.Assert.assertNotNull(polygonsSet68);
        org.junit.Assert.assertNotNull(euclidean2DAbstractRegion70);
    }
}

