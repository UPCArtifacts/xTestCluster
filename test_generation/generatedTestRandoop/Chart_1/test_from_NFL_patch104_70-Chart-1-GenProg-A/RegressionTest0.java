import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.awt.Shape shape0 = org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX;
        org.junit.Assert.assertNotNull(shape0);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.jfree.chart.axis.AxisLocation axisLocation0 = null;
        org.jfree.chart.plot.PlotOrientation plotOrientation1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.util.RectangleEdge rectangleEdge2 = org.jfree.chart.plot.Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'location' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.chart.plot.Marker marker7 = null;
        org.jfree.chart.util.Layer layer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = categoryPlot4.removeRangeMarker(marker7, layer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.plot.CategoryMarker categoryMarker7 = null;
        org.jfree.chart.util.Layer layer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker((int) (short) 100, categoryMarker7, layer8, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.SortOrder sortOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setColumnRenderingOrder(sortOrder6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'order' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        boolean boolean8 = categoryPlot4.equals((java.lang.Object) (byte) -1);
        org.jfree.chart.plot.CategoryMarker categoryMarker10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker((-1), categoryMarker10, layer11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = categoryPlot4.removeAnnotation(categoryAnnotation10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.awt.Font font0 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        org.junit.Assert.assertNotNull(font0);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.Marker marker8 = null;
        org.jfree.chart.util.Layer layer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker8, layer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.awt.Shape shape0 = org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
        org.junit.Assert.assertNotNull(shape0);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        org.jfree.chart.plot.Marker marker10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker((int) (byte) 10, marker10, layer11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        categoryPlot15.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge19 = categoryPlot15.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation20 = categoryPlot15.getDomainAxisLocation();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeAxisLocation((-1), axisLocation20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(rectangleEdge19);
        org.junit.Assert.assertNotNull(axisLocation20);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        org.jfree.chart.plot.Marker marker9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = categoryPlot4.removeRangeMarker(marker9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        boolean boolean0 = org.jfree.chart.plot.CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE;
        org.junit.Assert.assertTrue("'" + boolean0 + "' != '" + true + "'", boolean0 == true);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        boolean boolean0 = org.jfree.chart.plot.CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
        org.junit.Assert.assertTrue("'" + boolean0 + "' != '" + false + "'", boolean0 == false);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        boolean boolean8 = categoryPlot4.equals((java.lang.Object) (byte) -1);
        org.jfree.chart.util.SortOrder sortOrder9 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setColumnRenderingOrder(sortOrder9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'order' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        categoryPlot4.clearSelection();
        org.jfree.chart.plot.CategoryMarker categoryMarker11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(10, categoryMarker11, layer12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.zoom((double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer8 = null;
        categoryPlot4.setRenderer(100, categoryItemRenderer8, true);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'order' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) -1);
        org.jfree.chart.plot.Marker marker13 = null;
        org.jfree.chart.util.Layer layer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = categoryPlot4.removeRangeMarker((int) (byte) -1, marker13, layer14, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        java.awt.Graphics2D graphics2D18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawBackground(graphics2D18, rectangle2D19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) 0);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'order' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        boolean boolean8 = categoryPlot4.equals((java.lang.Object) (byte) -1);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder9 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'order' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeAxis((int) (short) -1, valueAxis9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        categoryPlot4.mapDatasetToDomainAxis((int) '#', (int) '#');
        org.jfree.chart.plot.Marker marker10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = categoryPlot4.removeRangeMarker(marker10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.chart.plot.CategoryMarker categoryMarker9 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        categoryPlot11.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation14 = categoryPlot11.getRangeAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation14, false);
        org.jfree.chart.plot.CategoryMarker categoryMarker17 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(axisLocation14);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getRangeAxisLocation();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setBackgroundImageAlpha((float) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The 'alpha' value must be in the range 0.0f to 1.0f.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(axisLocation9);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.panDomainAxes((double) (short) 0, plotRenderingInfo11, point2D12);
        org.jfree.chart.event.AxisChangeEvent axisChangeEvent14 = null;
        categoryPlot4.axisChanged(axisChangeEvent14);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        int int0 = org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 10 + "'", int0 == 10);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        java.lang.Number number0 = org.jfree.chart.plot.Plot.ZERO;
        org.junit.Assert.assertEquals("'" + number0 + "' != '" + 0 + "'", number0, 0);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        categoryPlot12.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator15 = categoryPlot12.getShadowGenerator();
        boolean boolean16 = categoryPlot12.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation17 = categoryPlot12.getRangeAxisLocation();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeAxisLocation((int) (short) -1, axisLocation17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(shadowGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(axisLocation17);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        org.jfree.chart.plot.CategoryMarker categoryMarker11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker((int) (short) 0, categoryMarker11, layer12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        org.jfree.chart.plot.Marker marker10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker((int) (short) 1, marker10, layer11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        int int10 = categoryPlot4.getDatasetCount();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot15.getRangeAxisEdge();
        java.awt.Paint paint18 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        java.util.List list20 = categoryPlot15.getCategoriesForAxis(categoryAxis19);
        java.awt.Font font21 = categoryPlot15.getNoDataMessageFont();
        categoryPlot4.setNoDataMessageFont(font21);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = categoryPlot4.removeAnnotation(categoryAnnotation23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(rectangleEdge17);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(font21);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.panDomainAxes((double) (short) 0, plotRenderingInfo11, point2D12);
        org.jfree.chart.plot.Marker marker14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = categoryPlot4.removeRangeMarker(marker14, layer15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.geom.GeneralPath generalPath11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        org.jfree.chart.RenderingSource renderingSource13 = null;
        categoryPlot4.select(generalPath11, rectangle2D12, renderingSource13);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAnchor categoryAnchor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setDomainGridlinePosition(categoryAnchor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.awt.Stroke stroke0 = org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE;
        org.junit.Assert.assertNotNull(stroke0);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        boolean boolean11 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.chart.axis.CategoryAnchor categoryAnchor12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setDomainGridlinePosition(categoryAnchor12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        float float11 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = categoryPlot4.getDomainAxisForDataset(10);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        categoryPlot19.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator22 = categoryPlot19.getShadowGenerator();
        boolean boolean23 = categoryPlot19.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation24 = categoryPlot19.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation25 = categoryPlot19.getDomainAxisLocation();
        org.jfree.data.category.CategoryDataset categoryDataset26 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = null;
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer29 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = new org.jfree.chart.plot.CategoryPlot(categoryDataset26, categoryAxis27, valueAxis28, categoryItemRenderer29);
        java.awt.Paint paint31 = categoryPlot30.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge32 = categoryPlot30.getRangeAxisEdge();
        java.awt.Paint paint33 = categoryPlot30.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation34 = categoryPlot30.getOrientation();
        org.jfree.chart.util.RectangleEdge rectangleEdge35 = org.jfree.chart.plot.Plot.resolveDomainAxisLocation(axisLocation25, plotOrientation34);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setDomainAxisLocation((-1), axisLocation25, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertNull(categoryAxis13);
        org.junit.Assert.assertNotNull(shadowGenerator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(axisLocation24);
        org.junit.Assert.assertNotNull(axisLocation25);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(rectangleEdge32);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNotNull(plotOrientation34);
        org.junit.Assert.assertNotNull(rectangleEdge35);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        java.awt.Graphics2D graphics2D8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawBackground(graphics2D8, rectangle2D9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        org.jfree.chart.RenderingSource renderingSource13 = null;
        categoryPlot4.select((double) 100.0f, (double) (short) -1, rectangle2D12, renderingSource13);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        boolean boolean8 = categoryPlot4.equals((java.lang.Object) (byte) -1);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        categoryPlot4.setOutlineStroke(stroke9);
        org.jfree.chart.plot.Marker marker11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker11, layer12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        boolean boolean14 = categoryPlot4.isNotify();
        org.jfree.chart.plot.Marker marker15 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        boolean boolean7 = categoryPlot4.isRangeMinorGridlinesVisible();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        java.awt.Paint paint14 = categoryPlot13.getRangeCrosshairPaint();
        categoryPlot13.setOutlineVisible(true);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot13.setRangeCrosshairStroke(stroke17);
        categoryPlot13.setBackgroundImageAlignment((int) (byte) 0);
        java.util.List list21 = categoryPlot13.getAnnotations();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToRangeAxes((int) (short) 0, list21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        boolean boolean8 = categoryPlot4.equals((java.lang.Object) (byte) -1);
        java.awt.Graphics2D graphics2D9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        categoryPlot4.drawBackgroundImage(graphics2D9, rectangle2D10);
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        java.awt.Paint paint18 = categoryPlot17.getRangeCrosshairPaint();
        categoryPlot17.setOutlineVisible(true);
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot17.setRangeCrosshairStroke(stroke21);
        categoryPlot17.setBackgroundImageAlignment((int) (byte) 0);
        java.util.List list25 = categoryPlot17.getAnnotations();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToRangeAxes(100, list25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        categoryPlot13.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator16 = categoryPlot13.getShadowGenerator();
        boolean boolean17 = categoryPlot13.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation18 = categoryPlot13.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation19 = categoryPlot13.getDomainAxisLocation();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setDomainAxisLocation((int) (byte) -1, axisLocation19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(shadowGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(axisLocation18);
        org.junit.Assert.assertNotNull(axisLocation19);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        java.awt.Shape shape0 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        org.junit.Assert.assertNotNull(shape0);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        java.awt.Paint paint14 = categoryPlot13.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        categoryPlot19.setRangeMinorGridlinesVisible(true);
        categoryPlot19.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint24 = categoryPlot19.getRangeMinorGridlinePaint();
        categoryPlot13.setRangeMinorGridlinePaint(paint24);
        java.awt.Paint paint26 = categoryPlot13.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets27 = categoryPlot13.getInsets();
        java.lang.String str28 = categoryPlot13.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        org.jfree.data.Range range30 = categoryPlot13.getDataRange(valueAxis29);
        org.jfree.data.category.CategoryDataset categoryDataset31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot(categoryDataset31, categoryAxis32, valueAxis33, categoryItemRenderer34);
        categoryPlot35.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator38 = categoryPlot35.getShadowGenerator();
        boolean boolean39 = categoryPlot35.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation40 = categoryPlot35.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation41 = categoryPlot35.getDomainAxisLocation();
        categoryPlot13.setRangeAxisLocation(axisLocation41, false);
        org.jfree.data.category.CategoryDataset categoryDataset44 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = null;
        org.jfree.chart.axis.ValueAxis valueAxis46 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer47 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = new org.jfree.chart.plot.CategoryPlot(categoryDataset44, categoryAxis45, valueAxis46, categoryItemRenderer47);
        java.awt.Paint paint49 = categoryPlot48.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge50 = categoryPlot48.getRangeAxisEdge();
        java.awt.Paint paint51 = categoryPlot48.getRangeCrosshairPaint();
        categoryPlot13.setRangeGridlinePaint(paint51);
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot13);
        java.awt.Graphics2D graphics2D54 = null;
        java.awt.geom.Rectangle2D rectangle2D55 = null;
        java.awt.geom.Point2D point2D56 = null;
        org.jfree.chart.plot.PlotState plotState57 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo58 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot13.draw(graphics2D54, rectangle2D55, point2D56, plotState57, plotRenderingInfo58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(rectangleInsets27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Category Plot" + "'", str28, "Category Plot");
        org.junit.Assert.assertNull(range30);
        org.junit.Assert.assertNotNull(shadowGenerator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(axisLocation40);
        org.junit.Assert.assertNotNull(axisLocation41);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(rectangleEdge50);
        org.junit.Assert.assertNotNull(paint51);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        categoryPlot4.mapDatasetToDomainAxis((int) 'a', (int) (byte) 0);
        org.jfree.chart.plot.CategoryMarker categoryMarker14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker((int) (short) -1, categoryMarker14, layer15, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        double double7 = categoryPlot4.getAnchorValue();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        org.jfree.chart.plot.Marker marker9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = categoryPlot4.removeRangeMarker(marker9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.chart.plot.Plot plot8 = categoryPlot4.getRootPlot();
        org.jfree.chart.plot.CategoryMarker categoryMarker9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(plot8);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.chart.plot.Marker marker9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder28 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'order' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setRangeCrosshairValue((double) (-1), true);
        org.jfree.chart.plot.Marker marker19 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.chart.plot.Marker marker12 = null;
        org.jfree.chart.util.Layer layer13 = null;
        boolean boolean15 = categoryPlot4.removeDomainMarker((int) (byte) 0, marker12, layer13, false);
        java.awt.Graphics2D graphics2D16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawOutline(graphics2D16, rectangle2D17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke13 = categoryPlot10.getRangeGridlineStroke();
        categoryPlot4.setRangeZeroBaselineStroke(stroke13);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer21 = categoryPlot19.getRenderer(10);
        categoryPlot19.setNotify(true);
        java.awt.Paint paint24 = categoryPlot19.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeZeroBaselinePaint(paint24);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(categoryItemRenderer21);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        java.awt.Graphics2D graphics2D7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        java.awt.geom.Point2D point2D9 = null;
        org.jfree.chart.plot.PlotState plotState10 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.draw(graphics2D7, rectangle2D8, point2D9, plotState10, plotRenderingInfo11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation8 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        int int10 = categoryPlot4.getDatasetCount();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot15.getRangeAxisEdge();
        java.awt.Paint paint18 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        java.util.List list20 = categoryPlot15.getCategoriesForAxis(categoryAxis19);
        java.awt.Font font21 = categoryPlot15.getNoDataMessageFont();
        categoryPlot4.setNoDataMessageFont(font21);
        org.jfree.chart.axis.AxisLocation axisLocation24 = categoryPlot4.getRangeAxisLocation((int) 'a');
        org.jfree.chart.util.Layer layer26 = null;
        java.util.Collection collection27 = categoryPlot4.getDomainMarkers((int) (byte) 100, layer26);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(rectangleEdge17);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNotNull(axisLocation24);
        org.junit.Assert.assertNull(collection27);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = categoryPlot4.removeAnnotation(categoryAnnotation28, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        boolean boolean7 = categoryPlot4.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable8 = null;
        categoryPlot4.setDomainCrosshairColumnKey(comparable8);
        java.awt.Graphics2D graphics2D10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawBackground(graphics2D10, rectangle2D11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot26.getShadowGenerator();
        boolean boolean30 = categoryPlot26.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation31 = categoryPlot26.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot26.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation32, false);
        org.jfree.chart.plot.Marker marker35 = null;
        org.jfree.chart.util.Layer layer36 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker35, layer36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(axisLocation31);
        org.junit.Assert.assertNotNull(axisLocation32);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        boolean boolean37 = categoryPlot4.isDomainPannable();
        org.jfree.chart.util.RectangleEdge rectangleEdge39 = categoryPlot4.getDomainAxisEdge((int) (byte) 100);
        java.lang.Class<?> wildcardClass40 = categoryPlot4.getClass();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangleEdge39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.chart.event.AnnotationChangeEvent annotationChangeEvent7 = null;
        categoryPlot4.annotationChanged(annotationChangeEvent7);
        categoryPlot4.setCrosshairDatasetIndex(0);
        categoryPlot4.setRangeGridlinesVisible(true);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        categoryPlot11.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation14 = categoryPlot11.getRangeAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation14, false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = categoryPlot4.removeAnnotation(categoryAnnotation17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(axisLocation14);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        org.jfree.chart.plot.Marker marker37 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        categoryPlot4.setWeight((int) '#');
        org.jfree.chart.axis.AxisSpace axisSpace16 = categoryPlot4.getFixedDomainAxisSpace();
        org.jfree.chart.plot.Plot plot17 = categoryPlot4.getParent();
        org.junit.Assert.assertNull(axisSpace16);
        org.junit.Assert.assertNull(plot17);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.handleClick((int) (byte) 100, 0, plotRenderingInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        org.jfree.chart.util.SortOrder sortOrder10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRowRenderingOrder(sortOrder10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'order' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = categoryPlot4.removeAnnotation(categoryAnnotation6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        categoryPlot4.mapDatasetToDomainAxis((int) 'a', (int) (byte) 0);
        categoryPlot4.clearDomainAxes();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) 0);
        java.util.List list12 = categoryPlot4.getAnnotations();
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        java.awt.Paint paint18 = categoryPlot17.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge19 = categoryPlot17.getRangeAxisEdge();
        java.awt.Paint paint20 = categoryPlot17.getRangeCrosshairPaint();
        boolean boolean21 = categoryPlot17.isOutlineVisible();
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        java.awt.Paint paint27 = categoryPlot26.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset28 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis29 = null;
        org.jfree.chart.axis.ValueAxis valueAxis30 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer31 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = new org.jfree.chart.plot.CategoryPlot(categoryDataset28, categoryAxis29, valueAxis30, categoryItemRenderer31);
        categoryPlot32.setRangeMinorGridlinesVisible(true);
        categoryPlot32.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint37 = categoryPlot32.getRangeMinorGridlinePaint();
        categoryPlot26.setRangeMinorGridlinePaint(paint37);
        java.awt.Paint paint39 = categoryPlot26.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets40 = categoryPlot26.getInsets();
        java.lang.String str41 = categoryPlot26.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis42 = null;
        org.jfree.data.Range range43 = categoryPlot26.getDataRange(valueAxis42);
        org.jfree.data.category.CategoryDataset categoryDataset44 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = null;
        org.jfree.chart.axis.ValueAxis valueAxis46 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer47 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = new org.jfree.chart.plot.CategoryPlot(categoryDataset44, categoryAxis45, valueAxis46, categoryItemRenderer47);
        categoryPlot48.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator51 = categoryPlot48.getShadowGenerator();
        boolean boolean52 = categoryPlot48.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation53 = categoryPlot48.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation54 = categoryPlot48.getDomainAxisLocation();
        categoryPlot26.setRangeAxisLocation(axisLocation54, false);
        org.jfree.data.category.CategoryDataset categoryDataset57 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis58 = null;
        org.jfree.chart.axis.ValueAxis valueAxis59 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer60 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot61 = new org.jfree.chart.plot.CategoryPlot(categoryDataset57, categoryAxis58, valueAxis59, categoryItemRenderer60);
        java.awt.Paint paint62 = categoryPlot61.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge63 = categoryPlot61.getRangeAxisEdge();
        java.awt.Paint paint64 = categoryPlot61.getRangeCrosshairPaint();
        categoryPlot26.setRangeGridlinePaint(paint64);
        categoryPlot17.setParent((org.jfree.chart.plot.Plot) categoryPlot26);
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot17);
        org.jfree.chart.plot.CategoryMarker categoryMarker68 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot17.addDomainMarker(categoryMarker68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(rectangleEdge19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(rectangleInsets40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Category Plot" + "'", str41, "Category Plot");
        org.junit.Assert.assertNull(range43);
        org.junit.Assert.assertNotNull(shadowGenerator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(axisLocation53);
        org.junit.Assert.assertNotNull(axisLocation54);
        org.junit.Assert.assertNotNull(paint62);
        org.junit.Assert.assertNotNull(rectangleEdge63);
        org.junit.Assert.assertNotNull(paint64);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        org.jfree.chart.plot.CategoryMarker categoryMarker18 = null;
        org.jfree.chart.util.Layer layer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker((int) (short) 0, categoryMarker18, layer19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        boolean boolean7 = categoryPlot4.isRangeMinorGridlinesVisible();
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int9 = categoryPlot4.getRangeAxisIndex(valueAxis8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'axis' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        categoryPlot19.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation22 = categoryPlot19.getRangeAxisLocation();
        categoryPlot4.setRangeAxisLocation((int) (byte) 1, axisLocation22);
        categoryPlot4.setAnchorValue((double) 100L);
        java.awt.Graphics2D graphics2D26 = null;
        java.awt.geom.Rectangle2D rectangle2D27 = null;
        java.awt.geom.Point2D point2D28 = null;
        org.jfree.chart.plot.PlotState plotState29 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo30 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.draw(graphics2D26, rectangle2D27, point2D28, plotState29, plotRenderingInfo30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(axisLocation22);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.chart.event.AnnotationChangeEvent annotationChangeEvent7 = null;
        categoryPlot4.annotationChanged(annotationChangeEvent7);
        categoryPlot4.setCrosshairDatasetIndex(0);
        org.jfree.data.category.CategoryDataset categoryDataset11 = categoryPlot4.getDataset();
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertNull(categoryDataset11);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.plot.Marker marker6 = null;
        org.jfree.chart.util.Layer layer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = categoryPlot4.removeRangeMarker(0, marker6, layer7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.panRangeAxes((double) 100L, plotRenderingInfo12, point2D13);
        boolean boolean15 = categoryPlot4.getDrawSharedDomainAxis();
        float float16 = categoryPlot4.getBackgroundImageAlpha();
        java.awt.Graphics2D graphics2D17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawBackground(graphics2D17, rectangle2D18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 0.5f + "'", float16 == 0.5f);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        java.awt.Paint paint12 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = categoryPlot11.getRangeAxisEdge();
        java.awt.Paint paint14 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot11.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        java.awt.Paint paint21 = categoryPlot20.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke29 = categoryPlot26.getRangeGridlineStroke();
        categoryPlot20.setRangeZeroBaselineStroke(stroke29);
        categoryPlot11.setOutlineStroke(stroke29);
        categoryPlot4.setOutlineStroke(stroke29);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setBackgroundImageAlpha((float) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The 'alpha' value must be in the range 0.0f to 1.0f.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(plotOrientation15);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(stroke29);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        int int9 = categoryPlot4.getDomainAxisCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = categoryPlot4.getDomainAxisEdge((int) (byte) 10);
        org.jfree.chart.util.Layer layer13 = null;
        java.util.Collection collection14 = categoryPlot4.getRangeMarkers((int) (byte) 10, layer13);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge11);
        org.junit.Assert.assertNull(collection14);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.chart.plot.Plot plot10 = categoryPlot4.getRootPlot();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = categoryPlot4.getRangeAxisIndex(valueAxis11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'axis' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(plot10);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        boolean boolean7 = categoryPlot4.isNotify();
        org.jfree.chart.plot.Marker marker9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = categoryPlot4.removeRangeMarker((int) (byte) 1, marker9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.CategoryMarker categoryMarker11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker11, layer12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
        org.junit.Assert.assertNotNull(font10);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        java.util.List list20 = categoryPlot4.getAnnotations();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        float float0 = org.jfree.chart.plot.Plot.DEFAULT_FOREGROUND_ALPHA;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 1.0f + "'", float0 == 1.0f);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        categoryPlot24.setRangeMinorGridlinesVisible(true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.chart.event.AnnotationChangeEvent annotationChangeEvent7 = null;
        categoryPlot4.annotationChanged(annotationChangeEvent7);
        categoryPlot4.setCrosshairDatasetIndex(0);
        double double11 = categoryPlot4.getRangeCrosshairValue();
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.zoom(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = categoryPlot4.removeAnnotation(categoryAnnotation7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo19 = null;
        java.awt.geom.Point2D point2D20 = null;
        categoryPlot4.zoomRangeAxes(100.0d, plotRenderingInfo19, point2D20, true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 1.0d);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier7 = categoryPlot4.getDrawingSupplier();
        org.jfree.chart.plot.Marker marker8 = null;
        org.jfree.chart.util.Layer layer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker8, layer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertNotNull(drawingSupplier7);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = categoryPlot4.getLegendItems();
        java.awt.Stroke stroke9 = categoryPlot4.getRangeGridlineStroke();
        java.awt.Graphics2D graphics2D10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        java.awt.geom.Point2D point2D12 = null;
        org.jfree.chart.plot.PlotState plotState13 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo14 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.draw(graphics2D10, rectangle2D11, point2D12, plotState13, plotRenderingInfo14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertNotNull(legendItemCollection8);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        double double7 = categoryPlot4.getAnchorValue();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.zoom((double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        java.awt.Graphics2D graphics2D10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawBackground(graphics2D10, rectangle2D11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot26.getShadowGenerator();
        boolean boolean30 = categoryPlot26.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation31 = categoryPlot26.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot26.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation32, false);
        org.jfree.chart.util.Layer layer35 = null;
        java.util.Collection collection36 = categoryPlot4.getRangeMarkers(layer35);
        categoryPlot4.setRangeCrosshairValue((double) 10L);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(axisLocation31);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNull(collection36);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        boolean boolean37 = categoryPlot4.isDomainPannable();
        org.jfree.chart.util.RectangleEdge rectangleEdge39 = categoryPlot4.getDomainAxisEdge((int) (byte) 100);
        org.jfree.chart.plot.Marker marker41 = null;
        org.jfree.chart.util.Layer layer42 = null;
        boolean boolean44 = categoryPlot4.removeDomainMarker((int) (byte) 0, marker41, layer42, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangleEdge39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer8 = null;
        categoryPlot4.setRenderer(100, categoryItemRenderer8, true);
        org.jfree.chart.plot.Marker marker11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker11, layer12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.lang.Object obj9 = categoryPlot4.clone();
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        boolean boolean11 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        categoryPlot4.setRenderer((int) (byte) 10, categoryItemRenderer13, true);
        java.awt.Graphics2D graphics2D16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        java.awt.geom.Point2D point2D18 = null;
        org.jfree.chart.plot.PlotState plotState19 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo20 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.draw(graphics2D16, rectangle2D17, point2D18, plotState19, plotRenderingInfo20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.panRangeAxes((double) 1L, plotRenderingInfo11, point2D12);
        org.jfree.chart.plot.Marker marker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker((int) (byte) 0, marker15, layer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        boolean boolean11 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.chart.plot.CategoryMarker categoryMarker12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        categoryPlot4.setForegroundAlpha(100.0f);
        org.jfree.chart.util.RectangleEdge rectangleEdge12 = categoryPlot4.getRangeAxisEdge((int) '#');
        java.awt.Paint paint13 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.data.event.DatasetChangeEvent datasetChangeEvent14 = null;
        categoryPlot4.datasetChanged(datasetChangeEvent14);
        org.jfree.chart.util.Layer layer16 = null;
        java.util.Collection collection17 = categoryPlot4.getDomainMarkers(layer16);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rectangleEdge12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(collection17);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        org.jfree.chart.axis.AxisLocation axisLocation17 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeAxisLocation(axisLocation17, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'location' for index 0 not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        boolean boolean11 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        categoryPlot4.setRenderer((int) (byte) 10, categoryItemRenderer13, true);
        boolean boolean16 = categoryPlot4.isRangePannable();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot26.getShadowGenerator();
        boolean boolean30 = categoryPlot26.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation31 = categoryPlot26.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot26.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation32, false);
        org.jfree.chart.util.Layer layer35 = null;
        java.util.Collection collection36 = categoryPlot4.getRangeMarkers(layer35);
        java.awt.Image image37 = null;
        categoryPlot4.setBackgroundImage(image37);
        java.awt.Graphics2D graphics2D39 = null;
        java.awt.geom.Rectangle2D rectangle2D40 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawOutline(graphics2D39, rectangle2D40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(axisLocation31);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNull(collection36);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        java.awt.Stroke stroke10 = categoryPlot4.getRangeMinorGridlineStroke();
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.RenderingSource renderingSource14 = null;
        categoryPlot4.select((double) 100L, (double) 100, rectangle2D13, renderingSource14);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
        org.junit.Assert.assertNotNull(stroke10);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        int int0 = org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 10 + "'", int0 == 10);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        boolean boolean11 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        categoryPlot4.setRenderer((int) (byte) 10, categoryItemRenderer13, true);
        java.awt.Stroke stroke16 = categoryPlot4.getOutlineStroke();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = categoryPlot4.getRenderer();
        org.jfree.data.category.CategoryDataset categoryDataset19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer22 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = new org.jfree.chart.plot.CategoryPlot(categoryDataset19, categoryAxis20, valueAxis21, categoryItemRenderer22);
        java.awt.Paint paint24 = categoryPlot23.getRangeCrosshairPaint();
        categoryPlot23.setOutlineVisible(true);
        java.awt.Stroke stroke27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot23.setRangeCrosshairStroke(stroke27);
        categoryPlot23.setBackgroundImageAlignment((int) (byte) 0);
        java.util.List list31 = categoryPlot23.getAnnotations();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToDomainAxes((int) (short) 0, list31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(categoryItemRenderer17);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(list31);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.ValueAxis valueAxis7 = categoryPlot4.getRangeAxis((int) (byte) 100);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(valueAxis7);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = categoryPlot4.getRendererForDataset(categoryDataset11);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.awt.Graphics2D graphics2D15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawOutline(graphics2D15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNull(categoryItemRenderer12);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        double double7 = categoryPlot4.getAnchorValue();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        org.jfree.chart.util.RectangleEdge rectangleEdge9 = categoryPlot4.getRangeAxisEdge();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.handleClick(1, 1, plotRenderingInfo12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(rectangleEdge9);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        boolean boolean9 = categoryPlot4.canSelectByRegion();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        categoryPlot20.setRangeMinorGridlinesVisible(true);
        categoryPlot20.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint25 = categoryPlot20.getRangeMinorGridlinePaint();
        categoryPlot14.setRangeMinorGridlinePaint(paint25);
        java.awt.Paint paint27 = categoryPlot14.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets28 = categoryPlot14.getInsets();
        categoryPlot4.setAxisOffset(rectangleInsets28);
        boolean boolean30 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset32 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis33 = null;
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer35 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = new org.jfree.chart.plot.CategoryPlot(categoryDataset32, categoryAxis33, valueAxis34, categoryItemRenderer35);
        java.awt.Paint paint37 = categoryPlot36.getRangeCrosshairPaint();
        categoryPlot36.setOutlineVisible(true);
        java.awt.Stroke stroke40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot36.setRangeCrosshairStroke(stroke40);
        categoryPlot36.setRangePannable(true);
        org.jfree.data.category.CategoryDataset categoryDataset45 = categoryPlot36.getDataset((int) 'a');
        org.jfree.chart.axis.CategoryAxis categoryAxis46 = null;
        java.util.List list47 = categoryPlot36.getCategoriesForAxis(categoryAxis46);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToRangeAxes((int) (byte) 10, list47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(rectangleInsets28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertNull(categoryDataset45);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        categoryPlot4.mapDatasetToDomainAxis((int) 'a', (int) (byte) 0);
        double double13 = categoryPlot4.getAnchorValue();
        org.jfree.chart.axis.ValueAxis valueAxis14 = categoryPlot4.getRangeAxis();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        categoryPlot4.setRenderer(categoryItemRenderer15, true);
        categoryPlot4.clearDomainMarkers();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNull(valueAxis14);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        categoryPlot4.setForegroundAlpha((float) 0L);
        categoryPlot4.setDomainGridlinesVisible(true);
        org.jfree.chart.util.Layer layer11 = null;
        java.util.Collection collection12 = categoryPlot4.getRangeMarkers(layer11);
        org.jfree.chart.plot.Marker marker13 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(collection12);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        categoryPlot4.setForegroundAlpha(100.0f);
        org.jfree.chart.util.RectangleEdge rectangleEdge12 = categoryPlot4.getRangeAxisEdge((int) '#');
        boolean boolean13 = categoryPlot4.canSelectByRegion();
        categoryPlot4.clearRangeMarkers((int) (short) -1);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rectangleEdge12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        categoryPlot4.setWeight((int) '#');
        categoryPlot4.mapDatasetToDomainAxis((int) (short) 1, (int) (byte) 1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation19 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation19, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        boolean boolean7 = categoryPlot4.isNotify();
        categoryPlot4.setWeight(0);
        categoryPlot4.setDrawSharedDomainAxis(false);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        org.jfree.chart.plot.Marker marker36 = null;
        org.jfree.chart.util.Layer layer37 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker36, layer37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.panRangeAxes((double) 100L, plotRenderingInfo12, point2D13);
        boolean boolean15 = categoryPlot4.getDrawSharedDomainAxis();
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot4.getDomainAxisEdge((int) (short) 1);
        org.jfree.chart.axis.AxisSpace axisSpace18 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace18, true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(rectangleEdge17);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        categoryPlot4.setRangeAxis((int) (byte) 1, valueAxis12);
        categoryPlot4.setOutlineVisible(true);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        categoryPlot4.clearRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        categoryPlot16.setDomainCrosshairRowKey((java.lang.Comparable) 10.0f);
        java.awt.Paint paint22 = categoryPlot16.getBackgroundPaint();
        categoryPlot4.setOutlinePaint(paint22);
        boolean boolean24 = categoryPlot4.isDomainCrosshairVisible();
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        categoryPlot4.setRangeAxis(100, valueAxis26);
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        org.jfree.chart.axis.AxisLocation axisLocation13 = categoryPlot4.getRangeAxisLocation((int) (byte) -1);
        org.jfree.chart.plot.Marker marker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = categoryPlot4.removeRangeMarker(1, marker15, layer16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(axisLocation13);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        double double7 = categoryPlot4.getAnchorValue();
        org.jfree.data.general.DatasetGroup datasetGroup8 = categoryPlot4.getDatasetGroup();
        org.jfree.chart.plot.Marker marker10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(15, marker10, layer11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(datasetGroup8);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.Marker marker8 = null;
        boolean boolean9 = categoryPlot4.removeDomainMarker(marker8);
        org.jfree.chart.plot.Marker marker11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = categoryPlot4.removeRangeMarker((int) (byte) 100, marker11, layer12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        boolean boolean14 = categoryPlot4.isNotify();
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder15 = categoryPlot4.getDatasetRenderingOrder();
        int int16 = categoryPlot4.getDatasetCount();
        java.awt.Paint paint17 = categoryPlot4.getBackgroundPaint();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(datasetRenderingOrder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeAxis((int) (byte) -1, valueAxis11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        org.jfree.chart.plot.CategoryMarker categoryMarker17 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        boolean boolean11 = categoryPlot4.isRangeCrosshairLockedOnData();
        java.lang.Object obj12 = categoryPlot4.clone();
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        java.awt.Paint paint18 = categoryPlot17.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge19 = categoryPlot17.getRangeAxisEdge();
        java.awt.Paint paint20 = categoryPlot17.getRangeCrosshairPaint();
        java.awt.Stroke stroke21 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        categoryPlot17.setRangeMinorGridlineStroke(stroke21);
        categoryPlot4.setDomainGridlineStroke(stroke21);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(rectangleEdge19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        org.jfree.chart.axis.AxisLocation axisLocation13 = categoryPlot4.getRangeAxisLocation((int) (byte) -1);
        boolean boolean14 = categoryPlot4.isRangeZoomable();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(axisLocation13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.AxisLocation axisLocation20 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation21 = categoryPlot4.getDomainAxisLocation();
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        categoryPlot4.setDataset(1, categoryDataset23);
        org.jfree.chart.util.RectangleEdge rectangleEdge25 = categoryPlot4.getDomainAxisEdge();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNotNull(axisLocation20);
        org.junit.Assert.assertNotNull(axisLocation21);
        org.junit.Assert.assertNotNull(rectangleEdge25);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.panRangeAxes(100.0d, plotRenderingInfo11, point2D12);
        org.jfree.chart.plot.Marker marker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = categoryPlot4.removeRangeMarker((int) (short) 0, marker15, layer16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        org.jfree.chart.axis.AxisSpace axisSpace10 = categoryPlot4.getFixedRangeAxisSpace();
        org.jfree.chart.plot.CategoryMarker categoryMarker11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNull(axisSpace10);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.panRangeAxes((double) 100L, plotRenderingInfo12, point2D13);
        boolean boolean15 = categoryPlot4.getDrawSharedDomainAxis();
        org.jfree.chart.plot.Marker marker17 = null;
        org.jfree.chart.util.Layer layer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(1, marker17, layer18, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.lang.Object obj7 = categoryPlot4.clone();
        int int8 = categoryPlot4.getDomainAxisCount();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        categoryPlot4.setDataset(categoryDataset9);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        java.awt.Paint paint12 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = categoryPlot11.getRangeAxisEdge();
        java.awt.Paint paint14 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot11.getOrientation();
        categoryPlot4.setOrientation(plotOrientation15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(plotOrientation15);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        categoryPlot4.setWeight((int) '#');
        org.jfree.chart.axis.AxisSpace axisSpace16 = categoryPlot4.getFixedDomainAxisSpace();
        org.jfree.data.category.CategoryDataset categoryDataset18 = categoryPlot4.getDataset((int) (byte) -1);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) 0);
        org.junit.Assert.assertNull(axisSpace16);
        org.junit.Assert.assertNull(categoryDataset18);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis((int) '4', valueAxis11);
        org.jfree.chart.axis.AxisSpace axisSpace13 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace13);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        categoryPlot4.setRenderer(categoryItemRenderer15);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNull(comparable9);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        categoryPlot12.setOutlineVisible(true);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot12.setRangeCrosshairStroke(stroke16);
        categoryPlot12.configureDomainAxes();
        categoryPlot12.setDomainCrosshairColumnKey((java.lang.Comparable) (byte) 100);
        java.awt.Stroke stroke21 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        categoryPlot12.setDomainCrosshairStroke(stroke21);
        double double23 = categoryPlot12.getAnchorValue();
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot12);
        org.jfree.chart.axis.AxisSpace axisSpace25 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace25);
        org.jfree.chart.util.SortOrder sortOrder27 = categoryPlot4.getColumnRenderingOrder();
        org.jfree.chart.plot.CategoryMarker categoryMarker28 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(sortOrder27);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.chart.plot.Marker marker8 = null;
        org.jfree.chart.util.Layer layer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = categoryPlot4.removeRangeMarker(marker8, layer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.chart.plot.Plot plot10 = categoryPlot4.getRootPlot();
        org.jfree.chart.event.MarkerChangeEvent markerChangeEvent11 = null;
        categoryPlot4.markerChanged(markerChangeEvent11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = categoryPlot4.removeAnnotation(categoryAnnotation13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(plot10);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer29 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRenderer((int) (byte) -1, categoryItemRenderer29, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        boolean boolean12 = categoryPlot4.canSelectByPoint();
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        categoryPlot17.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator20 = categoryPlot17.getShadowGenerator();
        boolean boolean21 = categoryPlot17.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation22 = categoryPlot17.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation23 = categoryPlot17.getDomainAxisLocation();
        org.jfree.data.category.CategoryDataset categoryDataset24 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = null;
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer27 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = new org.jfree.chart.plot.CategoryPlot(categoryDataset24, categoryAxis25, valueAxis26, categoryItemRenderer27);
        java.awt.Paint paint29 = categoryPlot28.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge30 = categoryPlot28.getRangeAxisEdge();
        java.awt.Paint paint31 = categoryPlot28.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation32 = categoryPlot28.getOrientation();
        org.jfree.chart.util.RectangleEdge rectangleEdge33 = org.jfree.chart.plot.Plot.resolveDomainAxisLocation(axisLocation23, plotOrientation32);
        categoryPlot4.setRangeAxisLocation(axisLocation23, false);
        org.jfree.chart.plot.PlotOrientation plotOrientation36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.util.RectangleEdge rectangleEdge37 = org.jfree.chart.plot.Plot.resolveDomainAxisLocation(axisLocation23, plotOrientation36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'orientation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(shadowGenerator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(axisLocation22);
        org.junit.Assert.assertNotNull(axisLocation23);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(rectangleEdge30);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(plotOrientation32);
        org.junit.Assert.assertNotNull(rectangleEdge33);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        boolean boolean7 = categoryPlot4.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable8 = null;
        categoryPlot4.setDomainCrosshairColumnKey(comparable8);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder10 = categoryPlot4.getDatasetRenderingOrder();
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = categoryPlot4.getDomainAxisForDataset((int) (short) 1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(datasetRenderingOrder10);
        org.junit.Assert.assertNull(categoryAxis12);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        categoryPlot4.setDomainAxis((int) '#', categoryAxis12);
        float float14 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        categoryPlot4.setDomainAxis(0, categoryAxis16, false);
        java.awt.Graphics2D graphics2D19 = null;
        java.awt.geom.Rectangle2D rectangle2D20 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawBackground(graphics2D19, rectangle2D20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        float float28 = categoryPlot24.getBackgroundImageAlpha();
        java.awt.Paint paint29 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot24.setNoDataMessagePaint(paint29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.5f + "'", float28 == 0.5f);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot26.getShadowGenerator();
        boolean boolean30 = categoryPlot26.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation31 = categoryPlot26.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot26.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation32, false);
        org.jfree.data.category.CategoryDataset categoryDataset35 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis36 = null;
        org.jfree.chart.axis.ValueAxis valueAxis37 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer38 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = new org.jfree.chart.plot.CategoryPlot(categoryDataset35, categoryAxis36, valueAxis37, categoryItemRenderer38);
        java.awt.Paint paint40 = categoryPlot39.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge41 = categoryPlot39.getRangeAxisEdge();
        java.awt.Paint paint42 = categoryPlot39.getRangeCrosshairPaint();
        categoryPlot4.setRangeGridlinePaint(paint42);
        java.awt.geom.GeneralPath generalPath44 = null;
        java.awt.geom.Rectangle2D rectangle2D45 = null;
        org.jfree.chart.RenderingSource renderingSource46 = null;
        categoryPlot4.select(generalPath44, rectangle2D45, renderingSource46);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(axisLocation31);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNotNull(rectangleEdge41);
        org.junit.Assert.assertNotNull(paint42);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        categoryPlot4.setRangeCrosshairVisible(true);
        org.jfree.chart.plot.Marker marker12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.panRangeAxes((double) 100L, plotRenderingInfo12, point2D13);
        boolean boolean15 = categoryPlot4.getDrawSharedDomainAxis();
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = new org.jfree.chart.plot.CategoryPlot(categoryDataset17, categoryAxis18, valueAxis19, categoryItemRenderer20);
        categoryPlot21.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        categoryPlot21.setRangeGridlineStroke(stroke24);
        org.jfree.data.category.CategoryDataset categoryDataset26 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = null;
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer29 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = new org.jfree.chart.plot.CategoryPlot(categoryDataset26, categoryAxis27, valueAxis28, categoryItemRenderer29);
        categoryPlot30.setRangeMinorGridlinesVisible(true);
        java.util.List list33 = categoryPlot30.getCategories();
        categoryPlot30.setRangeCrosshairValue((double) '#');
        categoryPlot30.configureRangeAxes();
        float float37 = categoryPlot30.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis39 = categoryPlot30.getDomainAxisForDataset(10);
        boolean boolean40 = categoryPlot21.equals((java.lang.Object) categoryAxis39);
        org.jfree.data.category.CategoryDataset categoryDataset41 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis42 = null;
        org.jfree.chart.axis.ValueAxis valueAxis43 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer44 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot45 = new org.jfree.chart.plot.CategoryPlot(categoryDataset41, categoryAxis42, valueAxis43, categoryItemRenderer44);
        categoryPlot45.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator48 = categoryPlot45.getShadowGenerator();
        boolean boolean49 = categoryPlot45.isDomainZoomable();
        categoryPlot45.mapDatasetToDomainAxis((int) (short) 0, (int) (short) 1);
        org.jfree.chart.axis.AxisLocation axisLocation53 = categoryPlot45.getDomainAxisLocation();
        categoryPlot21.setDomainAxisLocation(axisLocation53, true);
        categoryPlot4.setRangeAxisLocation((int) (short) 100, axisLocation53, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNull(list33);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 1.0f + "'", float37 == 1.0f);
        org.junit.Assert.assertNull(categoryAxis39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shadowGenerator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(axisLocation53);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        categoryPlot4.clearRangeMarkers();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis((int) '4', valueAxis11);
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        java.awt.Paint paint18 = categoryPlot17.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge19 = categoryPlot17.getRangeAxisEdge();
        boolean boolean20 = categoryPlot17.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable21 = null;
        categoryPlot17.setDomainCrosshairColumnKey(comparable21);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder23 = categoryPlot17.getDatasetRenderingOrder();
        categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder23);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(rectangleEdge19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(datasetRenderingOrder23);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.awt.Paint paint0 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        org.junit.Assert.assertNotNull(paint0);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation8 = categoryPlot4.getOrientation();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis(0, valueAxis11, true);
        org.jfree.data.general.DatasetGroup datasetGroup14 = categoryPlot4.getDatasetGroup();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(plotOrientation8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNull(datasetGroup14);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis((int) '4', valueAxis11);
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        java.awt.Paint paint18 = categoryPlot17.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge19 = categoryPlot17.getRangeAxisEdge();
        boolean boolean20 = categoryPlot17.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable21 = null;
        categoryPlot17.setDomainCrosshairColumnKey(comparable21);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder23 = categoryPlot17.getDatasetRenderingOrder();
        categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder23);
        boolean boolean25 = categoryPlot4.isRangeCrosshairVisible();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(rectangleEdge19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(datasetRenderingOrder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer8 = null;
        categoryPlot4.setRenderer(100, categoryItemRenderer8, true);
        categoryPlot4.setRangeCrosshairVisible(true);
        org.junit.Assert.assertNull(categoryItemRenderer6);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo19 = null;
        java.awt.geom.Point2D point2D20 = null;
        categoryPlot4.zoomRangeAxes(100.0d, plotRenderingInfo19, point2D20, true);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        java.awt.Paint paint28 = categoryPlot27.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge29 = categoryPlot27.getRangeAxisEdge();
        categoryPlot27.mapDatasetToDomainAxis((int) '#', (int) '#');
        boolean boolean33 = categoryPlot4.equals((java.lang.Object) categoryPlot27);
        categoryPlot27.setRangeZeroBaselineVisible(false);
        org.jfree.chart.axis.AxisSpace axisSpace36 = categoryPlot27.getFixedRangeAxisSpace();
        org.jfree.chart.axis.CategoryAnchor categoryAnchor37 = categoryPlot27.getDomainGridlinePosition();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo40 = null;
        java.awt.geom.Point2D point2D41 = null;
        categoryPlot27.zoomRangeAxes((-1.0d), (double) (short) 100, plotRenderingInfo40, point2D41);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(rectangleEdge29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(axisSpace36);
        org.junit.Assert.assertNotNull(categoryAnchor37);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) -1);
        categoryPlot4.setBackgroundImageAlpha((float) 1L);
        org.jfree.chart.plot.Marker marker14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = categoryPlot4.removeRangeMarker(marker14, layer15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        categoryPlot4.setForegroundAlpha((float) 0L);
        java.lang.Class<?> wildcardClass9 = categoryPlot4.getClass();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset9 = categoryPlot4.getDataset();
        org.jfree.chart.plot.CategoryMarker categoryMarker10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryDataset9);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        boolean boolean7 = categoryPlot4.isRangeGridlinesVisible();
        java.lang.String str8 = categoryPlot4.getPlotType();
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Category Plot" + "'", str8, "Category Plot");
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureDomainAxes();
        java.awt.Paint paint11 = categoryPlot4.getDomainCrosshairPaint();
        categoryPlot4.clearRangeMarkers((int) (short) 0);
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        boolean boolean10 = categoryPlot4.isSubplot();
        org.jfree.data.event.DatasetChangeEvent datasetChangeEvent11 = null;
        categoryPlot4.datasetChanged(datasetChangeEvent11);
        categoryPlot4.clearRangeMarkers();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getRangeAxisLocation();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        categoryPlot14.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge18 = categoryPlot14.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation19 = categoryPlot14.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation20 = categoryPlot14.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation20, false);
        categoryPlot4.setRangeMinorGridlinesVisible(false);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToDomainAxis((int) (short) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires 'index' >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(rectangleEdge18);
        org.junit.Assert.assertNotNull(axisLocation19);
        org.junit.Assert.assertNotNull(axisLocation20);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation8 = categoryPlot4.getOrientation();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        java.awt.Graphics2D graphics2D10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawBackground(graphics2D10, rectangle2D11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(plotOrientation8);
        org.junit.Assert.assertNull(comparable9);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        categoryPlot4.setDomainAxis((int) '#', categoryAxis12);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = categoryPlot18.getRenderer(10);
        double double21 = categoryPlot18.getRangeCrosshairValue();
        java.awt.geom.Rectangle2D rectangle2D24 = null;
        org.jfree.chart.RenderingSource renderingSource25 = null;
        categoryPlot18.select((double) 0.0f, (double) ' ', rectangle2D24, renderingSource25);
        java.awt.Paint paint27 = categoryPlot18.getRangeZeroBaselinePaint();
        categoryPlot4.setRangeCrosshairPaint(paint27);
        org.jfree.chart.plot.Marker marker30 = null;
        org.jfree.chart.util.Layer layer31 = null;
        boolean boolean32 = categoryPlot4.removeDomainMarker(15, marker30, layer31);
        org.junit.Assert.assertNull(categoryItemRenderer20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        java.awt.Paint paint12 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = categoryPlot11.getRangeAxisEdge();
        java.awt.Paint paint14 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot11.getOrientation();
        categoryPlot4.setOrientation(plotOrientation15);
        org.jfree.data.category.CategoryDataset categoryDataset18 = categoryPlot4.getDataset((int) (short) -1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation19 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation19, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(plotOrientation15);
        org.junit.Assert.assertNull(categoryDataset18);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        int int9 = categoryPlot4.getDomainAxisCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = categoryPlot4.getDomainAxisEdge((int) (byte) 10);
        org.jfree.chart.plot.Marker marker13 = null;
        org.jfree.chart.util.Layer layer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(100, marker13, layer14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge11);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        int int10 = categoryPlot4.getDatasetCount();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        java.awt.Paint paint14 = categoryPlot13.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge15 = categoryPlot13.getRangeAxisEdge();
        boolean boolean16 = categoryPlot13.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable17 = null;
        categoryPlot13.setDomainCrosshairColumnKey(comparable17);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder19 = categoryPlot13.getDatasetRenderingOrder();
        categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder19);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = categoryPlot4.removeAnnotation(categoryAnnotation21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(rectangleEdge15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(datasetRenderingOrder19);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        categoryPlot18.setRangeMinorGridlinesVisible(true);
        categoryPlot18.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint23 = categoryPlot18.getRangeMinorGridlinePaint();
        categoryPlot12.setRangeMinorGridlinePaint(paint23);
        java.awt.Paint paint25 = categoryPlot12.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets26 = categoryPlot12.getInsets();
        categoryPlot4.setInsets(rectangleInsets26);
        categoryPlot4.configureRangeAxes();
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(rectangleInsets26);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        java.awt.Stroke stroke37 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset38 = categoryPlot4.getDataset();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertNull(categoryDataset38);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer8 = null;
        categoryPlot4.setRenderer(100, categoryItemRenderer8, true);
        org.jfree.chart.event.AxisChangeEvent axisChangeEvent11 = null;
        categoryPlot4.axisChanged(axisChangeEvent11);
        org.jfree.chart.plot.CategoryMarker categoryMarker13 = null;
        org.jfree.chart.util.Layer layer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker13, layer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isSubplot();
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        boolean boolean9 = categoryPlot4.isDomainPannable();
        org.jfree.chart.axis.ValueAxis valueAxis11 = categoryPlot4.getRangeAxisForDataset(10);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = categoryPlot4.removeAnnotation(categoryAnnotation12, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(valueAxis11);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        categoryPlot12.setOutlineVisible(true);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot12.setRangeCrosshairStroke(stroke16);
        categoryPlot12.configureDomainAxes();
        categoryPlot12.setDomainCrosshairColumnKey((java.lang.Comparable) (byte) 100);
        java.awt.Stroke stroke21 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        categoryPlot12.setDomainCrosshairStroke(stroke21);
        double double23 = categoryPlot12.getAnchorValue();
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot12);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        categoryPlot29.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        int int34 = categoryPlot29.getDomainAxisCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge36 = categoryPlot29.getDomainAxisEdge((int) (byte) 10);
        org.jfree.data.category.CategoryDataset categoryDataset37 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis38 = null;
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer40 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot41 = new org.jfree.chart.plot.CategoryPlot(categoryDataset37, categoryAxis38, valueAxis39, categoryItemRenderer40);
        java.awt.Paint paint42 = categoryPlot41.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset43 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer46 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot47 = new org.jfree.chart.plot.CategoryPlot(categoryDataset43, categoryAxis44, valueAxis45, categoryItemRenderer46);
        categoryPlot47.setRangeMinorGridlinesVisible(true);
        categoryPlot47.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint52 = categoryPlot47.getRangeMinorGridlinePaint();
        categoryPlot41.setRangeMinorGridlinePaint(paint52);
        java.awt.Paint paint54 = categoryPlot41.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets55 = categoryPlot41.getInsets();
        java.lang.String str56 = categoryPlot41.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis57 = null;
        org.jfree.data.Range range58 = categoryPlot41.getDataRange(valueAxis57);
        org.jfree.data.category.CategoryDataset categoryDataset59 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis60 = null;
        org.jfree.chart.axis.ValueAxis valueAxis61 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer62 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot63 = new org.jfree.chart.plot.CategoryPlot(categoryDataset59, categoryAxis60, valueAxis61, categoryItemRenderer62);
        categoryPlot63.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator66 = categoryPlot63.getShadowGenerator();
        boolean boolean67 = categoryPlot63.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation68 = categoryPlot63.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation69 = categoryPlot63.getDomainAxisLocation();
        categoryPlot41.setRangeAxisLocation(axisLocation69, false);
        org.jfree.data.category.CategoryDataset categoryDataset72 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis73 = null;
        org.jfree.chart.axis.ValueAxis valueAxis74 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer75 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot76 = new org.jfree.chart.plot.CategoryPlot(categoryDataset72, categoryAxis73, valueAxis74, categoryItemRenderer75);
        java.awt.Paint paint77 = categoryPlot76.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge78 = categoryPlot76.getRangeAxisEdge();
        java.awt.Paint paint79 = categoryPlot76.getRangeCrosshairPaint();
        categoryPlot41.setRangeGridlinePaint(paint79);
        categoryPlot29.setRangeMinorGridlinePaint(paint79);
        categoryPlot12.setRangeMinorGridlinePaint(paint79);
        org.jfree.chart.util.Layer layer84 = null;
        java.util.Collection collection85 = categoryPlot12.getDomainMarkers((int) (byte) 1, layer84);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge36);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(paint52);
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertNotNull(rectangleInsets55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Category Plot" + "'", str56, "Category Plot");
        org.junit.Assert.assertNull(range58);
        org.junit.Assert.assertNotNull(shadowGenerator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(axisLocation68);
        org.junit.Assert.assertNotNull(axisLocation69);
        org.junit.Assert.assertNotNull(paint77);
        org.junit.Assert.assertNotNull(rectangleEdge78);
        org.junit.Assert.assertNotNull(paint79);
        org.junit.Assert.assertNull(collection85);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = categoryPlot4.getRendererForDataset(categoryDataset11);
        java.awt.Stroke stroke13 = categoryPlot4.getRangeGridlineStroke();
        org.jfree.chart.axis.AxisSpace axisSpace14 = categoryPlot4.getFixedRangeAxisSpace();
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        java.awt.Paint paint20 = categoryPlot19.getRangeCrosshairPaint();
        categoryPlot19.setOutlineVisible(true);
        java.awt.Stroke stroke23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot19.setRangeCrosshairStroke(stroke23);
        categoryPlot19.setRangePannable(true);
        org.jfree.data.category.CategoryDataset categoryDataset28 = categoryPlot19.getDataset((int) 'a');
        org.jfree.data.category.CategoryDataset categoryDataset29 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis30 = null;
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer32 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot(categoryDataset29, categoryAxis30, valueAxis31, categoryItemRenderer32);
        categoryPlot33.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator36 = categoryPlot33.getShadowGenerator();
        boolean boolean37 = categoryPlot33.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation38 = categoryPlot33.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation39 = categoryPlot33.getDomainAxisLocation();
        categoryPlot19.setRangeAxisLocation(axisLocation39, true);
        org.jfree.data.category.CategoryDataset categoryDataset42 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis43 = null;
        org.jfree.chart.axis.ValueAxis valueAxis44 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer45 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot46 = new org.jfree.chart.plot.CategoryPlot(categoryDataset42, categoryAxis43, valueAxis44, categoryItemRenderer45);
        java.awt.Paint paint47 = categoryPlot46.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge48 = categoryPlot46.getRangeAxisEdge();
        java.awt.Paint paint49 = categoryPlot46.getRangeCrosshairPaint();
        categoryPlot19.setRangeCrosshairPaint(paint49);
        categoryPlot4.setRangeGridlinePaint(paint49);
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNull(categoryItemRenderer12);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(axisSpace14);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNull(categoryDataset28);
        org.junit.Assert.assertNotNull(shadowGenerator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(axisLocation38);
        org.junit.Assert.assertNotNull(axisLocation39);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertNotNull(rectangleEdge48);
        org.junit.Assert.assertNotNull(paint49);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation8 = categoryPlot4.getOrientation();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis(0, valueAxis11, true);
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = categoryPlot4.getDomainAxisForDataset((int) (byte) 1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(plotOrientation8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNull(categoryAxis15);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.plot.CategoryMarker categoryMarker9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(10, categoryMarker9, layer10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        categoryPlot4.setDomainAxis((int) '#', categoryAxis12);
        categoryPlot4.setRangeCrosshairVisible(false);
        org.jfree.chart.plot.CategoryMarker categoryMarker17 = null;
        org.jfree.chart.util.Layer layer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(0, categoryMarker17, layer18, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        float float11 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.axis.AxisSpace axisSpace12 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace12);
        int int14 = categoryPlot4.getWeight();
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        java.awt.Paint paint14 = categoryPlot13.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge15 = categoryPlot13.getRangeAxisEdge();
        boolean boolean16 = categoryPlot13.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable17 = null;
        categoryPlot13.setDomainCrosshairColumnKey(comparable17);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder19 = categoryPlot13.getDatasetRenderingOrder();
        categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder19);
        org.jfree.chart.plot.Marker marker21 = null;
        org.jfree.chart.util.Layer layer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = categoryPlot4.removeRangeMarker(marker21, layer22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(rectangleEdge15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(datasetRenderingOrder19);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot26.getShadowGenerator();
        boolean boolean30 = categoryPlot26.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation31 = categoryPlot26.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot26.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation32, false);
        java.awt.Stroke stroke35 = categoryPlot4.getDomainGridlineStroke();
        int int36 = categoryPlot4.getWeight();
        java.awt.Paint paint37 = categoryPlot4.getDomainCrosshairPaint();
        org.jfree.chart.axis.ValueAxis valueAxis38 = null;
        org.jfree.data.Range range39 = categoryPlot4.getDataRange(valueAxis38);
        categoryPlot4.configureRangeAxes();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(axisLocation31);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNull(range39);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        categoryPlot4.setRangeGridlineStroke(stroke7);
        java.lang.Class<?> wildcardClass9 = stroke7.getClass();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        categoryPlot4.setDomainGridlinesVisible(true);
        org.jfree.chart.axis.AxisSpace axisSpace11 = categoryPlot4.getFixedRangeAxisSpace();
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(axisSpace11);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        boolean boolean9 = categoryPlot4.canSelectByRegion();
        org.jfree.chart.plot.CategoryMarker categoryMarker10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.Marker marker8 = null;
        boolean boolean9 = categoryPlot4.removeDomainMarker(marker8);
        categoryPlot4.setRangePannable(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation10 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo13 = null;
        java.awt.geom.Point2D point2D14 = null;
        categoryPlot4.zoomDomainAxes((double) '#', (double) (-1L), plotRenderingInfo13, point2D14);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = categoryPlot4.removeAnnotation(categoryAnnotation16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertNotNull(axisLocation10);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.AxisLocation axisLocation20 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation21 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation22 = categoryPlot4.getRangeAxisLocation();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer24 = categoryPlot4.getRenderer((int) 'a');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo26 = null;
        java.awt.geom.Point2D point2D27 = null;
        categoryPlot4.panDomainAxes(35.0d, plotRenderingInfo26, point2D27);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNotNull(axisLocation20);
        org.junit.Assert.assertNotNull(axisLocation21);
        org.junit.Assert.assertNotNull(axisLocation22);
        org.junit.Assert.assertNull(categoryItemRenderer24);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        boolean boolean9 = categoryPlot4.isRangeCrosshairVisible();
        org.jfree.chart.util.ShadowGenerator shadowGenerator10 = categoryPlot4.getShadowGenerator();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = categoryPlot16.getRenderer(10);
        categoryPlot16.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier21 = categoryPlot16.getDrawingSupplier();
        org.jfree.chart.axis.AxisLocation axisLocation23 = categoryPlot16.getDomainAxisLocation((int) (short) 10);
        categoryPlot4.setRangeAxisLocation((int) (byte) 100, axisLocation23);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shadowGenerator10);
        org.junit.Assert.assertNull(categoryItemRenderer18);
        org.junit.Assert.assertNotNull(drawingSupplier21);
        org.junit.Assert.assertNotNull(axisLocation23);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        categoryPlot4.setWeight((int) '#');
        org.jfree.chart.axis.AxisSpace axisSpace16 = categoryPlot4.getFixedDomainAxisSpace();
        org.jfree.data.category.CategoryDataset categoryDataset18 = categoryPlot4.getDataset((int) (byte) -1);
        java.awt.Paint paint19 = categoryPlot4.getRangeMinorGridlinePaint();
        org.junit.Assert.assertNull(axisSpace16);
        org.junit.Assert.assertNull(categoryDataset18);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.setOutlineVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        java.util.List list19 = categoryPlot16.getCategories();
        categoryPlot16.setRangeCrosshairValue((double) '#');
        categoryPlot16.configureDomainAxes();
        java.awt.Paint paint23 = categoryPlot16.getDomainCrosshairPaint();
        categoryPlot4.setRangeGridlinePaint(paint23);
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        categoryPlot4.setDomainAxis(0, categoryAxis26, true);
        java.awt.Paint paint29 = categoryPlot4.getNoDataMessagePaint();
        java.awt.geom.Rectangle2D rectangle2D32 = null;
        org.jfree.chart.RenderingSource renderingSource33 = null;
        categoryPlot4.select(0.0d, (double) (-1L), rectangle2D32, renderingSource33);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        int int10 = categoryPlot4.getDatasetCount();
        categoryPlot4.clearRangeMarkers();
        categoryPlot4.setBackgroundAlpha((float) '4');
        java.awt.Stroke stroke14 = categoryPlot4.getRangeGridlineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        java.awt.Paint paint20 = categoryPlot19.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge21 = categoryPlot19.getRangeAxisEdge();
        java.awt.Paint paint22 = categoryPlot19.getRangeCrosshairPaint();
        boolean boolean23 = categoryPlot19.isOutlineVisible();
        org.jfree.data.category.CategoryDataset categoryDataset24 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = null;
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer27 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = new org.jfree.chart.plot.CategoryPlot(categoryDataset24, categoryAxis25, valueAxis26, categoryItemRenderer27);
        java.awt.Paint paint29 = categoryPlot28.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset30 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = new org.jfree.chart.plot.CategoryPlot(categoryDataset30, categoryAxis31, valueAxis32, categoryItemRenderer33);
        categoryPlot34.setRangeMinorGridlinesVisible(true);
        categoryPlot34.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint39 = categoryPlot34.getRangeMinorGridlinePaint();
        categoryPlot28.setRangeMinorGridlinePaint(paint39);
        java.awt.Paint paint41 = categoryPlot28.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets42 = categoryPlot28.getInsets();
        java.awt.Stroke stroke43 = categoryPlot28.getRangeZeroBaselineStroke();
        categoryPlot19.setRangeZeroBaselineStroke(stroke43);
        org.jfree.data.category.CategoryDataset categoryDataset45 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis46 = null;
        org.jfree.chart.axis.ValueAxis valueAxis47 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer48 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot49 = new org.jfree.chart.plot.CategoryPlot(categoryDataset45, categoryAxis46, valueAxis47, categoryItemRenderer48);
        java.awt.Paint paint50 = categoryPlot49.getRangeCrosshairPaint();
        categoryPlot49.setOutlineVisible(true);
        java.awt.Stroke stroke53 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot49.setRangeCrosshairStroke(stroke53);
        categoryPlot19.setRangeMinorGridlineStroke(stroke53);
        categoryPlot4.setRangeGridlineStroke(stroke53);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(rectangleEdge21);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNotNull(rectangleInsets42);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(stroke53);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        float float28 = categoryPlot24.getBackgroundImageAlpha();
        org.jfree.chart.plot.Marker marker29 = null;
        org.jfree.chart.util.Layer layer30 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot24.addRangeMarker(marker29, layer30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.5f + "'", float28 == 0.5f);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        boolean boolean11 = categoryPlot4.isRangeGridlinesVisible();
        float float12 = categoryPlot4.getBackgroundImageAlpha();
        boolean boolean13 = categoryPlot4.isRangePannable();
        org.jfree.chart.plot.Marker marker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = categoryPlot4.removeRangeMarker(100, marker15, layer16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.5f + "'", float12 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot26.getShadowGenerator();
        boolean boolean30 = categoryPlot26.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation31 = categoryPlot26.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot26.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation32, false);
        org.jfree.data.category.CategoryDataset categoryDataset35 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis36 = null;
        org.jfree.chart.axis.ValueAxis valueAxis37 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer38 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = new org.jfree.chart.plot.CategoryPlot(categoryDataset35, categoryAxis36, valueAxis37, categoryItemRenderer38);
        java.awt.Paint paint40 = categoryPlot39.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge41 = categoryPlot39.getRangeAxisEdge();
        java.awt.Paint paint42 = categoryPlot39.getRangeCrosshairPaint();
        categoryPlot4.setRangeGridlinePaint(paint42);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer45 = null;
        categoryPlot4.setRenderer(0, categoryItemRenderer45);
        java.lang.String str47 = categoryPlot4.getPlotType();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(axisLocation31);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNotNull(rectangleEdge41);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Category Plot" + "'", str47, "Category Plot");
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.zoomRangeAxes(35.0d, (double) 100.0f, plotRenderingInfo10, point2D11);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent13 = null;
        categoryPlot4.notifyListeners(plotChangeEvent13);
        org.jfree.chart.axis.AxisSpace axisSpace15 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace15, true);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        categoryPlot4.setRenderer(categoryItemRenderer18);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        categoryPlot12.setOutlineVisible(true);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot12.setRangeCrosshairStroke(stroke16);
        categoryPlot12.configureDomainAxes();
        categoryPlot12.setDomainCrosshairColumnKey((java.lang.Comparable) (byte) 100);
        java.awt.Stroke stroke21 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        categoryPlot12.setDomainCrosshairStroke(stroke21);
        double double23 = categoryPlot12.getAnchorValue();
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot12);
        java.awt.Paint paint25 = categoryPlot12.getNoDataMessagePaint();
        org.jfree.data.category.CategoryDataset categoryDataset27 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis28 = null;
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = new org.jfree.chart.plot.CategoryPlot(categoryDataset27, categoryAxis28, valueAxis29, categoryItemRenderer30);
        java.awt.Paint paint32 = categoryPlot31.getRangeCrosshairPaint();
        categoryPlot31.setOutlineVisible(true);
        java.awt.Stroke stroke35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot31.setRangeCrosshairStroke(stroke35);
        categoryPlot31.setRangePannable(true);
        org.jfree.chart.axis.AxisLocation axisLocation40 = categoryPlot31.getRangeAxisLocation((int) (byte) -1);
        categoryPlot12.setRangeAxisLocation((int) (short) 0, axisLocation40);
        categoryPlot12.setBackgroundImageAlignment((int) (short) -1);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertNotNull(axisLocation40);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = categoryPlot4.getRendererForDataset(categoryDataset11);
        java.awt.Stroke stroke13 = categoryPlot4.getRangeGridlineStroke();
        org.jfree.chart.plot.CategoryMarker categoryMarker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker((int) (byte) 0, categoryMarker15, layer16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNull(categoryItemRenderer12);
        org.junit.Assert.assertNotNull(stroke13);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.RenderingSource renderingSource10 = null;
        categoryPlot4.select((double) (byte) 1, (double) (-1), rectangle2D9, renderingSource10);
        org.jfree.chart.axis.AxisLocation axisLocation13 = categoryPlot4.getRangeAxisLocation((int) (byte) 10);
        java.awt.Graphics2D graphics2D14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        categoryPlot4.drawBackgroundImage(graphics2D14, rectangle2D15);
        org.junit.Assert.assertNotNull(axisLocation13);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.setAnchorValue(1.0d, true);
        categoryPlot4.setForegroundAlpha((float) (short) 0);
        categoryPlot4.mapDatasetToDomainAxis((int) 'a', 1);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        double double7 = categoryPlot4.getRangeCrosshairValue();
        categoryPlot4.mapDatasetToDomainAxis(10, 100);
        org.jfree.chart.axis.AxisLocation axisLocation12 = categoryPlot4.getRangeAxisLocation((int) (short) 0);
        java.awt.Graphics2D graphics2D13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawOutline(graphics2D13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(axisLocation12);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.panRangeAxes((double) 1L, plotRenderingInfo11, point2D12);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        java.awt.Paint paint19 = categoryPlot18.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge20 = categoryPlot18.getRangeAxisEdge();
        java.awt.Paint paint21 = categoryPlot18.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        java.util.List list23 = categoryPlot18.getCategoriesForAxis(categoryAxis22);
        java.awt.Font font24 = categoryPlot18.getNoDataMessageFont();
        boolean boolean25 = categoryPlot18.isRangeGridlinesVisible();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer27 = null;
        categoryPlot18.setRenderer((int) (byte) 10, categoryItemRenderer27, true);
        java.awt.Stroke stroke30 = categoryPlot18.getOutlineStroke();
        org.jfree.chart.util.ShadowGenerator shadowGenerator31 = categoryPlot18.getShadowGenerator();
        categoryPlot4.setShadowGenerator(shadowGenerator31);
        org.jfree.chart.plot.Marker marker34 = null;
        org.jfree.chart.util.Layer layer35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = categoryPlot4.removeRangeMarker((int) '4', marker34, layer35, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(rectangleEdge20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(font24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNotNull(shadowGenerator31);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        double double7 = categoryPlot4.getRangeCrosshairValue();
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        org.jfree.chart.RenderingSource renderingSource11 = null;
        categoryPlot4.select((double) 0.0f, (double) ' ', rectangle2D10, renderingSource11);
        categoryPlot4.setNotify(false);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToDomainAxis((int) (byte) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires 'index' >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        boolean boolean14 = categoryPlot4.isNotify();
        categoryPlot4.setOutlineVisible(false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        java.awt.Stroke stroke37 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.chart.plot.Marker marker38 = null;
        boolean boolean39 = categoryPlot4.removeDomainMarker(marker38);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        float float28 = categoryPlot24.getBackgroundImageAlpha();
        java.awt.Paint paint29 = categoryPlot24.getRangeGridlinePaint();
        int int30 = categoryPlot24.getBackgroundImageAlignment();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.5f + "'", float28 == 0.5f);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 15 + "'", int30 == 15);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        categoryPlot4.setForegroundAlpha(100.0f);
        org.jfree.chart.util.RectangleEdge rectangleEdge12 = categoryPlot4.getRangeAxisEdge((int) '#');
        java.awt.Paint paint13 = categoryPlot4.getRangeMinorGridlinePaint();
        float float14 = categoryPlot4.getBackgroundImageAlpha();
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rectangleEdge12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.5f + "'", float14 == 0.5f);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        int int10 = categoryPlot4.getDatasetCount();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot15.getRangeAxisEdge();
        java.awt.Paint paint18 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        java.util.List list20 = categoryPlot15.getCategoriesForAxis(categoryAxis19);
        java.awt.Font font21 = categoryPlot15.getNoDataMessageFont();
        categoryPlot4.setNoDataMessageFont(font21);
        org.jfree.chart.axis.AxisLocation axisLocation24 = categoryPlot4.getRangeAxisLocation((int) 'a');
        org.jfree.chart.plot.Marker marker25 = null;
        org.jfree.chart.util.Layer layer26 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker25, layer26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(rectangleEdge17);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNotNull(axisLocation24);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        boolean boolean9 = categoryPlot4.isRangeCrosshairVisible();
        org.jfree.chart.util.ShadowGenerator shadowGenerator10 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.plot.PlotOrientation plotOrientation11 = categoryPlot4.getOrientation();
        org.jfree.chart.axis.AxisLocation axisLocation12 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.util.Layer layer14 = null;
        java.util.Collection collection15 = categoryPlot4.getDomainMarkers((int) 'a', layer14);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shadowGenerator10);
        org.junit.Assert.assertNotNull(plotOrientation11);
        org.junit.Assert.assertNotNull(axisLocation12);
        org.junit.Assert.assertNull(collection15);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        int int10 = categoryPlot4.getBackgroundImageAlignment();
        org.jfree.chart.plot.Marker marker12 = null;
        org.jfree.chart.util.Layer layer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = categoryPlot4.removeRangeMarker((int) (byte) 10, marker12, layer13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 15 + "'", int10 == 15);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        categoryPlot12.setOutlineVisible(true);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot12.setRangeCrosshairStroke(stroke16);
        categoryPlot12.configureDomainAxes();
        categoryPlot12.setDomainCrosshairColumnKey((java.lang.Comparable) (byte) 100);
        java.awt.Stroke stroke21 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        categoryPlot12.setDomainCrosshairStroke(stroke21);
        double double23 = categoryPlot12.getAnchorValue();
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot12);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        categoryPlot29.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        int int34 = categoryPlot29.getDomainAxisCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge36 = categoryPlot29.getDomainAxisEdge((int) (byte) 10);
        org.jfree.data.category.CategoryDataset categoryDataset37 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis38 = null;
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer40 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot41 = new org.jfree.chart.plot.CategoryPlot(categoryDataset37, categoryAxis38, valueAxis39, categoryItemRenderer40);
        java.awt.Paint paint42 = categoryPlot41.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset43 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer46 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot47 = new org.jfree.chart.plot.CategoryPlot(categoryDataset43, categoryAxis44, valueAxis45, categoryItemRenderer46);
        categoryPlot47.setRangeMinorGridlinesVisible(true);
        categoryPlot47.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint52 = categoryPlot47.getRangeMinorGridlinePaint();
        categoryPlot41.setRangeMinorGridlinePaint(paint52);
        java.awt.Paint paint54 = categoryPlot41.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets55 = categoryPlot41.getInsets();
        java.lang.String str56 = categoryPlot41.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis57 = null;
        org.jfree.data.Range range58 = categoryPlot41.getDataRange(valueAxis57);
        org.jfree.data.category.CategoryDataset categoryDataset59 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis60 = null;
        org.jfree.chart.axis.ValueAxis valueAxis61 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer62 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot63 = new org.jfree.chart.plot.CategoryPlot(categoryDataset59, categoryAxis60, valueAxis61, categoryItemRenderer62);
        categoryPlot63.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator66 = categoryPlot63.getShadowGenerator();
        boolean boolean67 = categoryPlot63.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation68 = categoryPlot63.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation69 = categoryPlot63.getDomainAxisLocation();
        categoryPlot41.setRangeAxisLocation(axisLocation69, false);
        org.jfree.data.category.CategoryDataset categoryDataset72 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis73 = null;
        org.jfree.chart.axis.ValueAxis valueAxis74 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer75 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot76 = new org.jfree.chart.plot.CategoryPlot(categoryDataset72, categoryAxis73, valueAxis74, categoryItemRenderer75);
        java.awt.Paint paint77 = categoryPlot76.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge78 = categoryPlot76.getRangeAxisEdge();
        java.awt.Paint paint79 = categoryPlot76.getRangeCrosshairPaint();
        categoryPlot41.setRangeGridlinePaint(paint79);
        categoryPlot29.setRangeMinorGridlinePaint(paint79);
        categoryPlot12.setRangeMinorGridlinePaint(paint79);
        java.lang.String str83 = categoryPlot12.getNoDataMessage();
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge36);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(paint52);
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertNotNull(rectangleInsets55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Category Plot" + "'", str56, "Category Plot");
        org.junit.Assert.assertNull(range58);
        org.junit.Assert.assertNotNull(shadowGenerator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(axisLocation68);
        org.junit.Assert.assertNotNull(axisLocation69);
        org.junit.Assert.assertNotNull(paint77);
        org.junit.Assert.assertNotNull(rectangleEdge78);
        org.junit.Assert.assertNotNull(paint79);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        org.jfree.data.category.CategoryDataset categoryDataset13 = categoryPlot4.getDataset((int) 'a');
        java.awt.Paint paint14 = org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT;
        categoryPlot4.setDomainCrosshairPaint(paint14);
        org.jfree.chart.plot.Marker marker16 = null;
        org.jfree.chart.util.Layer layer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker16, layer17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNull(categoryDataset13);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        int int10 = categoryPlot4.getDatasetCount();
        org.jfree.chart.util.Layer layer11 = null;
        java.util.Collection collection12 = categoryPlot4.getDomainMarkers(layer11);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) (byte) 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(collection12);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset9 = categoryPlot4.getDataset();
        java.util.List list10 = categoryPlot4.getAnnotations();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryDataset9);
        org.junit.Assert.assertNotNull(list10);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.zoomRangeAxes(0.0d, plotRenderingInfo12, point2D13);
        double double15 = categoryPlot4.getRangeCrosshairValue();
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.awt.Paint paint20 = categoryPlot4.getDomainCrosshairPaint();
        org.jfree.chart.plot.Marker marker21 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        categoryPlot4.setRangeCrosshairLockedOnData(true);
        categoryPlot4.setOutlineVisible(false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.panRangeAxes(100.0d, plotRenderingInfo11, point2D12);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo15 = null;
        java.awt.geom.Point2D point2D16 = null;
        categoryPlot4.zoomDomainAxes((double) 100.0f, plotRenderingInfo15, point2D16, true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.zoomDomainAxes(0.0d, plotRenderingInfo11, point2D12, true);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        java.awt.Paint paint20 = categoryPlot19.getRangeCrosshairPaint();
        categoryPlot19.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge23 = categoryPlot19.getDomainAxisEdge();
        org.jfree.chart.util.SortOrder sortOrder24 = categoryPlot19.getColumnRenderingOrder();
        categoryPlot4.setRowRenderingOrder(sortOrder24);
        boolean boolean26 = categoryPlot4.getDrawSharedDomainAxis();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(rectangleEdge23);
        org.junit.Assert.assertNotNull(sortOrder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setRangeCrosshairValue((double) (-1), true);
        org.jfree.chart.axis.AxisSpace axisSpace19 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace19, false);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        java.awt.Paint paint27 = categoryPlot26.getRangeCrosshairPaint();
        boolean boolean28 = categoryPlot26.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset29 = null;
        categoryPlot26.setDataset(categoryDataset29);
        org.jfree.data.category.CategoryDataset categoryDataset32 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis33 = null;
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer35 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = new org.jfree.chart.plot.CategoryPlot(categoryDataset32, categoryAxis33, valueAxis34, categoryItemRenderer35);
        categoryPlot36.setRangeMinorGridlinesVisible(true);
        categoryPlot36.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D43 = null;
        org.jfree.chart.RenderingSource renderingSource44 = null;
        categoryPlot36.select((double) (-1L), (double) (short) -1, rectangle2D43, renderingSource44);
        org.jfree.data.category.CategoryDataset categoryDataset47 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis48 = null;
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer50 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot51 = new org.jfree.chart.plot.CategoryPlot(categoryDataset47, categoryAxis48, valueAxis49, categoryItemRenderer50);
        categoryPlot51.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation54 = categoryPlot51.getRangeAxisLocation();
        categoryPlot36.setRangeAxisLocation((int) (byte) 1, axisLocation54);
        categoryPlot26.setRangeAxisLocation((int) (short) 1, axisLocation54, false);
        int int58 = categoryPlot26.getDomainAxisCount();
        boolean boolean59 = categoryPlot26.isDomainPannable();
        org.jfree.chart.util.RectangleEdge rectangleEdge61 = categoryPlot26.getDomainAxisEdge((int) (byte) 100);
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot26);
        org.jfree.chart.axis.CategoryAxis categoryAxis64 = null;
        categoryPlot4.setDomainAxis((int) (byte) 0, categoryAxis64, false);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(axisLocation54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(rectangleEdge61);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.chart.plot.Plot plot8 = categoryPlot4.getRootPlot();
        categoryPlot4.setWeight((int) '4');
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        categoryPlot15.setOutlineVisible(true);
        java.awt.Image image19 = categoryPlot15.getBackgroundImage();
        java.awt.Paint paint20 = categoryPlot15.getRangeMinorGridlinePaint();
        categoryPlot4.setNoDataMessagePaint(paint20);
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int23 = categoryPlot4.getDomainAxisIndex(categoryAxis22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'axis' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(plot8);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(image19);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        java.awt.Paint paint6 = categoryPlot4.getBackgroundPaint();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint6);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.util.Layer layer9 = null;
        java.util.Collection collection10 = categoryPlot4.getRangeMarkers(layer9);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = categoryPlot4.removeAnnotation(categoryAnnotation11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNull(collection10);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        boolean boolean11 = categoryPlot4.isRangeGridlinesVisible();
        float float12 = categoryPlot4.getBackgroundImageAlpha();
        boolean boolean13 = categoryPlot4.isRangePannable();
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder14 = categoryPlot4.getDatasetRenderingOrder();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.5f + "'", float12 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(datasetRenderingOrder14);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        float float0 = org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_ALPHA;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 1.0f + "'", float0 == 1.0f);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        categoryPlot4.setWeight((int) '#');
        float float16 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        int int18 = categoryPlot4.getIndexOf(categoryItemRenderer17);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot26.getShadowGenerator();
        boolean boolean30 = categoryPlot26.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation31 = categoryPlot26.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot26.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation32, false);
        java.awt.Stroke stroke35 = categoryPlot4.getDomainGridlineStroke();
        int int36 = categoryPlot4.getWeight();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = categoryPlot4.removeAnnotation(categoryAnnotation37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(axisLocation31);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.setOutlineVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        java.util.List list19 = categoryPlot16.getCategories();
        categoryPlot16.setRangeCrosshairValue((double) '#');
        categoryPlot16.configureDomainAxes();
        java.awt.Paint paint23 = categoryPlot16.getDomainCrosshairPaint();
        categoryPlot4.setRangeGridlinePaint(paint23);
        java.lang.String str25 = categoryPlot4.getPlotType();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation26 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Category Plot" + "'", str25, "Category Plot");
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        boolean boolean9 = categoryPlot4.isRangeCrosshairVisible();
        org.jfree.chart.util.ShadowGenerator shadowGenerator10 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.plot.PlotOrientation plotOrientation11 = categoryPlot4.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        java.awt.Paint paint17 = categoryPlot16.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset18 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot(categoryDataset18, categoryAxis19, valueAxis20, categoryItemRenderer21);
        categoryPlot22.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke25 = categoryPlot22.getRangeGridlineStroke();
        categoryPlot16.setRangeZeroBaselineStroke(stroke25);
        categoryPlot4.setRangeGridlineStroke(stroke25);
        org.jfree.data.general.DatasetGroup datasetGroup28 = categoryPlot4.getDatasetGroup();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shadowGenerator10);
        org.junit.Assert.assertNotNull(plotOrientation11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(datasetGroup28);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = categoryPlot4.getLegendItems();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.panRangeAxes((double) (short) 0, plotRenderingInfo10, point2D11);
        org.jfree.chart.plot.Marker marker14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = categoryPlot4.removeRangeMarker((-1), marker14, layer15, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertNotNull(legendItemCollection8);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        categoryPlot4.setForegroundAlpha(100.0f);
        org.jfree.chart.axis.CategoryAnchor categoryAnchor11 = categoryPlot4.getDomainGridlinePosition();
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.CategoryAxis[] categoryAxisArray13 = new org.jfree.chart.axis.CategoryAxis[] { categoryAxis12 };
        categoryPlot4.setDomainAxes(categoryAxisArray13);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(categoryAnchor11);
        org.junit.Assert.assertNotNull(categoryAxisArray13);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        categoryPlot4.clearSelection();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        categoryPlot4.setDataset(categoryDataset10);
        java.lang.Object obj12 = categoryPlot4.clone();
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        categoryPlot17.setRangeMinorGridlinesVisible(true);
        java.util.List list20 = categoryPlot17.getCategories();
        categoryPlot17.setRangeCrosshairValue((double) '#');
        categoryPlot17.configureRangeAxes();
        org.jfree.chart.plot.Marker marker25 = null;
        org.jfree.chart.util.Layer layer26 = null;
        boolean boolean28 = categoryPlot17.removeDomainMarker((int) (byte) 0, marker25, layer26, false);
        categoryPlot17.setDomainGridlinesVisible(false);
        categoryPlot17.clearDomainMarkers();
        org.jfree.chart.axis.CategoryAxis[] categoryAxisArray32 = new org.jfree.chart.axis.CategoryAxis[] {};
        categoryPlot17.setDomainAxes(categoryAxisArray32);
        categoryPlot4.setDomainAxes(categoryAxisArray32);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(categoryAxisArray32);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = categoryPlot4.getRendererForDataset(categoryDataset11);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        int int15 = categoryPlot4.getBackgroundImageAlignment();
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNull(categoryItemRenderer12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 15 + "'", int15 == 15);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.mapDatasetToRangeAxis((int) (short) 100, (int) 'a');
        org.jfree.chart.plot.Marker marker13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = categoryPlot4.removeRangeMarker(marker13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset9 = categoryPlot4.getDataset();
        org.jfree.chart.axis.AxisSpace axisSpace10 = categoryPlot4.getFixedRangeAxisSpace();
        org.jfree.chart.event.MarkerChangeEvent markerChangeEvent11 = null;
        categoryPlot4.markerChanged(markerChangeEvent11);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryDataset9);
        org.junit.Assert.assertNull(axisSpace10);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        categoryPlot4.setDataset(categoryDataset11);
        categoryPlot4.clearRangeMarkers();
        org.junit.Assert.assertNull(list7);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        int int10 = categoryPlot4.getBackgroundImageAlignment();
        java.awt.Paint paint11 = categoryPlot4.getNoDataMessagePaint();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        java.util.List list19 = categoryPlot16.getCategories();
        categoryPlot16.setRangeCrosshairValue((double) '#');
        categoryPlot16.configureDomainAxes();
        java.awt.geom.GeneralPath generalPath23 = null;
        java.awt.geom.Rectangle2D rectangle2D24 = null;
        org.jfree.chart.RenderingSource renderingSource25 = null;
        categoryPlot16.select(generalPath23, rectangle2D24, renderingSource25);
        org.jfree.chart.util.SortOrder sortOrder27 = categoryPlot16.getColumnRenderingOrder();
        categoryPlot4.setColumnRenderingOrder(sortOrder27);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 15 + "'", int10 == 15);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(sortOrder27);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) ' ', false);
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis(valueAxis11);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = categoryPlot4.removeAnnotation(categoryAnnotation22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureDomainAxes();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = categoryPlot4.getLegendItems();
        java.awt.Stroke stroke9 = categoryPlot4.getRangeGridlineStroke();
        boolean boolean11 = categoryPlot4.equals((java.lang.Object) 0.0d);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = categoryPlot4.getRendererForDataset(categoryDataset12);
        org.jfree.chart.util.SortOrder sortOrder14 = categoryPlot4.getColumnRenderingOrder();
        categoryPlot4.setRangeCrosshairLockedOnData(false);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertNotNull(legendItemCollection8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryItemRenderer13);
        org.junit.Assert.assertNotNull(sortOrder14);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        double double7 = categoryPlot4.getRangeCrosshairValue();
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        org.jfree.chart.RenderingSource renderingSource11 = null;
        categoryPlot4.select((double) 0.0f, (double) ' ', rectangle2D10, renderingSource11);
        java.awt.Paint paint13 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.axis.CategoryAnchor categoryAnchor14 = categoryPlot4.getDomainGridlinePosition();
        java.awt.Font font15 = categoryPlot4.getNoDataMessageFont();
        categoryPlot4.setRangeCrosshairLockedOnData(true);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(categoryAnchor14);
        org.junit.Assert.assertNotNull(font15);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        int int10 = categoryPlot4.getBackgroundImageAlignment();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = categoryPlot4.getRenderer((int) '4');
        org.jfree.chart.plot.Marker marker14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker((int) ' ', marker14, layer15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 15 + "'", int10 == 15);
        org.junit.Assert.assertNull(categoryItemRenderer12);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        int int10 = categoryPlot4.getDatasetCount();
        categoryPlot4.clearRangeMarkers();
        categoryPlot4.setBackgroundAlpha((float) '4');
        java.awt.Stroke stroke14 = categoryPlot4.getRangeGridlineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        categoryPlot19.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        java.awt.Paint paint28 = categoryPlot27.getRangeCrosshairPaint();
        categoryPlot27.setOutlineVisible(true);
        java.awt.Stroke stroke31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot27.setRangeCrosshairStroke(stroke31);
        categoryPlot27.configureDomainAxes();
        categoryPlot27.setDomainCrosshairColumnKey((java.lang.Comparable) (byte) 100);
        java.awt.Stroke stroke36 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        categoryPlot27.setDomainCrosshairStroke(stroke36);
        double double38 = categoryPlot27.getAnchorValue();
        categoryPlot19.setParent((org.jfree.chart.plot.Plot) categoryPlot27);
        org.jfree.chart.axis.AxisSpace axisSpace40 = null;
        categoryPlot19.setFixedRangeAxisSpace(axisSpace40);
        org.jfree.chart.util.SortOrder sortOrder42 = categoryPlot19.getColumnRenderingOrder();
        categoryPlot4.setRowRenderingOrder(sortOrder42);
        org.jfree.chart.axis.ValueAxis[] valueAxisArray44 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeAxes(valueAxisArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(sortOrder42);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        boolean boolean8 = categoryPlot4.equals((java.lang.Object) (byte) -1);
        org.jfree.chart.plot.CategoryMarker categoryMarker10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker((int) '#', categoryMarker10, layer11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.util.SortOrder sortOrder9 = categoryPlot4.getColumnRenderingOrder();
        java.lang.String str10 = categoryPlot4.getNoDataMessage();
        java.awt.Paint paint11 = categoryPlot4.getRangeGridlinePaint();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(sortOrder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.panRangeAxes((double) 100L, plotRenderingInfo12, point2D13);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        java.awt.Paint paint20 = categoryPlot19.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge21 = categoryPlot19.getRangeAxisEdge();
        java.awt.Paint paint22 = categoryPlot19.getRangeCrosshairPaint();
        categoryPlot19.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo26 = null;
        java.awt.geom.Point2D point2D27 = null;
        categoryPlot19.panRangeAxes((double) 1L, plotRenderingInfo26, point2D27);
        categoryPlot19.clearSelection();
        org.jfree.data.category.CategoryDataset categoryDataset30 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = new org.jfree.chart.plot.CategoryPlot(categoryDataset30, categoryAxis31, valueAxis32, categoryItemRenderer33);
        categoryPlot34.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis39 = null;
        org.jfree.chart.axis.ValueAxis valueAxis40 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer41 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot42 = new org.jfree.chart.plot.CategoryPlot(categoryDataset38, categoryAxis39, valueAxis40, categoryItemRenderer41);
        java.awt.Paint paint43 = categoryPlot42.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset44 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = null;
        org.jfree.chart.axis.ValueAxis valueAxis46 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer47 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = new org.jfree.chart.plot.CategoryPlot(categoryDataset44, categoryAxis45, valueAxis46, categoryItemRenderer47);
        categoryPlot48.setRangeMinorGridlinesVisible(true);
        categoryPlot48.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint53 = categoryPlot48.getRangeMinorGridlinePaint();
        categoryPlot42.setRangeMinorGridlinePaint(paint53);
        java.awt.Paint paint55 = categoryPlot42.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets56 = categoryPlot42.getInsets();
        categoryPlot34.setInsets(rectangleInsets56);
        categoryPlot19.setInsets(rectangleInsets56, true);
        categoryPlot4.setAxisOffset(rectangleInsets56);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(rectangleEdge21);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertNotNull(rectangleInsets56);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        java.awt.Paint paint17 = categoryPlot16.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge18 = categoryPlot16.getRangeAxisEdge();
        java.awt.Paint paint19 = categoryPlot16.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation20 = categoryPlot16.getOrientation();
        java.lang.Comparable comparable21 = categoryPlot16.getDomainCrosshairRowKey();
        java.awt.Stroke stroke22 = categoryPlot16.getRangeMinorGridlineStroke();
        categoryPlot4.setRangeZeroBaselineStroke(stroke22);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleEdge18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(plotOrientation20);
        org.junit.Assert.assertNull(comparable21);
        org.junit.Assert.assertNotNull(stroke22);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.chart.event.AnnotationChangeEvent annotationChangeEvent7 = null;
        categoryPlot4.annotationChanged(annotationChangeEvent7);
        categoryPlot4.setCrosshairDatasetIndex(0);
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.RenderingSource renderingSource14 = null;
        categoryPlot4.select((double) (byte) 100, (double) 0.0f, rectangle2D13, renderingSource14);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        org.jfree.chart.axis.AxisLocation axisLocation13 = categoryPlot4.getRangeAxisLocation((int) (byte) -1);
        categoryPlot4.clearRangeMarkers((int) '4');
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        categoryPlot20.setRangeMinorGridlinesVisible(true);
        categoryPlot20.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot20.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis28 = null;
        categoryPlot20.setDomainAxis((int) '#', categoryAxis28);
        categoryPlot20.setRangeCrosshairVisible(false);
        boolean boolean32 = categoryPlot4.equals((java.lang.Object) categoryPlot20);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(axisLocation13);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        int int10 = categoryPlot4.getBackgroundImageAlignment();
        java.awt.Paint paint11 = categoryPlot4.getNoDataMessagePaint();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        java.awt.Paint paint17 = categoryPlot16.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset18 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot(categoryDataset18, categoryAxis19, valueAxis20, categoryItemRenderer21);
        categoryPlot22.setRangeMinorGridlinesVisible(true);
        categoryPlot22.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint27 = categoryPlot22.getRangeMinorGridlinePaint();
        categoryPlot16.setRangeMinorGridlinePaint(paint27);
        java.awt.Paint paint29 = categoryPlot16.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets30 = categoryPlot16.getInsets();
        java.lang.String str31 = categoryPlot16.getPlotType();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot16.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation33 = categoryPlot16.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation34 = categoryPlot16.getRangeAxisLocation();
        categoryPlot4.setDomainAxisLocation(axisLocation34, true);
        org.jfree.chart.LegendItemCollection legendItemCollection37 = null;
        categoryPlot4.setFixedLegendItems(legendItemCollection37);
        org.jfree.chart.axis.AxisSpace axisSpace39 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace39);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 15 + "'", int10 == 15);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(rectangleInsets30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Category Plot" + "'", str31, "Category Plot");
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNotNull(axisLocation33);
        org.junit.Assert.assertNotNull(axisLocation34);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        categoryPlot4.setRangeCrosshairVisible(true);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setDomainCrosshairVisible(false);
        org.junit.Assert.assertNull(categoryItemRenderer6);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureDomainAxes();
        java.awt.Paint paint11 = categoryPlot4.getDomainCrosshairPaint();
        boolean boolean12 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        categoryPlot17.setRangeMinorGridlinesVisible(true);
        java.util.List list20 = categoryPlot17.getCategories();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo22 = null;
        java.awt.geom.Point2D point2D23 = null;
        categoryPlot17.zoomRangeAxes((double) 1.0f, plotRenderingInfo22, point2D23, true);
        org.jfree.data.category.CategoryDataset categoryDataset26 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = null;
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer29 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = new org.jfree.chart.plot.CategoryPlot(categoryDataset26, categoryAxis27, valueAxis28, categoryItemRenderer29);
        java.awt.Paint paint31 = categoryPlot30.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset32 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis33 = null;
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer35 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = new org.jfree.chart.plot.CategoryPlot(categoryDataset32, categoryAxis33, valueAxis34, categoryItemRenderer35);
        categoryPlot36.setRangeMinorGridlinesVisible(true);
        categoryPlot36.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint41 = categoryPlot36.getRangeMinorGridlinePaint();
        categoryPlot30.setRangeMinorGridlinePaint(paint41);
        java.awt.Paint paint43 = categoryPlot30.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets44 = categoryPlot30.getInsets();
        java.lang.String str45 = categoryPlot30.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis46 = null;
        org.jfree.data.Range range47 = categoryPlot30.getDataRange(valueAxis46);
        org.jfree.data.category.CategoryDataset categoryDataset48 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis49 = null;
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer51 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot52 = new org.jfree.chart.plot.CategoryPlot(categoryDataset48, categoryAxis49, valueAxis50, categoryItemRenderer51);
        categoryPlot52.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator55 = categoryPlot52.getShadowGenerator();
        boolean boolean56 = categoryPlot52.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation57 = categoryPlot52.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation58 = categoryPlot52.getDomainAxisLocation();
        categoryPlot30.setRangeAxisLocation(axisLocation58, false);
        org.jfree.data.category.CategoryDataset categoryDataset61 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis62 = null;
        org.jfree.chart.axis.ValueAxis valueAxis63 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer64 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot65 = new org.jfree.chart.plot.CategoryPlot(categoryDataset61, categoryAxis62, valueAxis63, categoryItemRenderer64);
        java.awt.Paint paint66 = categoryPlot65.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge67 = categoryPlot65.getRangeAxisEdge();
        java.awt.Paint paint68 = categoryPlot65.getRangeCrosshairPaint();
        categoryPlot30.setRangeGridlinePaint(paint68);
        categoryPlot17.setRangeGridlinePaint(paint68);
        categoryPlot4.setRangeMinorGridlinePaint(paint68);
        org.jfree.chart.util.RectangleEdge rectangleEdge72 = categoryPlot4.getDomainAxisEdge();
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(list20);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(rectangleInsets44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Category Plot" + "'", str45, "Category Plot");
        org.junit.Assert.assertNull(range47);
        org.junit.Assert.assertNotNull(shadowGenerator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(axisLocation57);
        org.junit.Assert.assertNotNull(axisLocation58);
        org.junit.Assert.assertNotNull(paint66);
        org.junit.Assert.assertNotNull(rectangleEdge67);
        org.junit.Assert.assertNotNull(paint68);
        org.junit.Assert.assertNotNull(rectangleEdge72);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        float float11 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = categoryPlot4.getDomainAxisForDataset(10);
        org.jfree.chart.util.RectangleInsets rectangleInsets14 = org.jfree.chart.plot.Plot.DEFAULT_INSETS;
        categoryPlot4.setAxisOffset(rectangleInsets14);
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertNull(categoryAxis13);
        org.junit.Assert.assertNotNull(rectangleInsets14);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        int int10 = categoryPlot4.getCrosshairDatasetIndex();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        int int10 = categoryPlot4.getDatasetCount();
        org.jfree.chart.util.Layer layer11 = null;
        java.util.Collection collection12 = categoryPlot4.getDomainMarkers(layer11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = collection12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(collection12);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.setOutlineVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        java.util.List list19 = categoryPlot16.getCategories();
        categoryPlot16.setRangeCrosshairValue((double) '#');
        categoryPlot16.configureDomainAxes();
        java.awt.Paint paint23 = categoryPlot16.getDomainCrosshairPaint();
        categoryPlot4.setRangeGridlinePaint(paint23);
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        categoryPlot4.setDomainAxis(0, categoryAxis26, true);
        java.awt.Paint paint29 = categoryPlot4.getNoDataMessagePaint();
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder30 = categoryPlot4.getDatasetRenderingOrder();
        org.jfree.chart.plot.Marker marker31 = null;
        org.jfree.chart.util.Layer layer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = categoryPlot4.removeRangeMarker(marker31, layer32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(datasetRenderingOrder30);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        double double7 = categoryPlot4.getAnchorValue();
        org.jfree.data.general.DatasetGroup datasetGroup8 = categoryPlot4.getDatasetGroup();
        java.awt.Image image9 = categoryPlot4.getBackgroundImage();
        java.util.List list11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToDomainAxes(0, list11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(datasetGroup8);
        org.junit.Assert.assertNull(image9);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge16 = categoryPlot14.getRangeAxisEdge();
        java.awt.Paint paint17 = categoryPlot14.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        java.util.List list19 = categoryPlot14.getCategoriesForAxis(categoryAxis18);
        categoryPlot14.setBackgroundImageAlignment((int) (byte) -1);
        categoryPlot14.setRangePannable(true);
        java.awt.Stroke stroke24 = categoryPlot14.getRangeMinorGridlineStroke();
        categoryPlot4.setDomainCrosshairStroke(stroke24);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(rectangleEdge16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(stroke24);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        double double7 = categoryPlot4.getRangeCrosshairValue();
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        org.jfree.chart.RenderingSource renderingSource11 = null;
        categoryPlot4.select((double) 0.0f, (double) ' ', rectangle2D10, renderingSource11);
        categoryPlot4.setNotify(false);
        float float15 = categoryPlot4.getBackgroundAlpha();
        org.jfree.chart.plot.Marker marker17 = null;
        org.jfree.chart.util.Layer layer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker((int) (byte) 0, marker17, layer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        categoryPlot4.setForegroundAlpha((float) 0L);
        boolean boolean9 = categoryPlot4.getDrawSharedDomainAxis();
        categoryPlot4.mapDatasetToRangeAxis(0, 0);
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = categoryPlot4.getDomainAxis((int) (short) -1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(categoryAxis14);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        boolean boolean11 = categoryPlot4.isRangeCrosshairLockedOnData();
        java.lang.Object obj12 = categoryPlot4.clone();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        categoryPlot14.setOutlineVisible(true);
        java.awt.Stroke stroke18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot14.setRangeCrosshairStroke(stroke18);
        categoryPlot14.setRangePannable(true);
        org.jfree.chart.axis.AxisLocation axisLocation23 = categoryPlot14.getRangeAxisLocation((int) (byte) -1);
        java.awt.Stroke stroke24 = categoryPlot14.getDomainGridlineStroke();
        java.awt.Stroke stroke25 = categoryPlot14.getRangeGridlineStroke();
        categoryPlot4.setDomainCrosshairStroke(stroke25);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(axisLocation23);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(stroke25);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        categoryPlot4.setRangeCrosshairVisible(true);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator19 = categoryPlot16.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection20 = categoryPlot16.getLegendItems();
        java.awt.Paint paint21 = categoryPlot16.getRangeZeroBaselinePaint();
        boolean boolean22 = categoryPlot4.equals((java.lang.Object) categoryPlot16);
        java.awt.Font font23 = categoryPlot16.getNoDataMessageFont();
        java.awt.geom.Rectangle2D rectangle2D26 = null;
        org.jfree.chart.RenderingSource renderingSource27 = null;
        categoryPlot16.select(0.0d, (double) 1L, rectangle2D26, renderingSource27);
        org.jfree.data.category.CategoryDataset categoryDataset29 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis30 = null;
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer32 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot(categoryDataset29, categoryAxis30, valueAxis31, categoryItemRenderer32);
        java.awt.Paint paint34 = categoryPlot33.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge35 = categoryPlot33.getRangeAxisEdge();
        java.awt.Paint paint36 = categoryPlot33.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation37 = categoryPlot33.getOrientation();
        java.lang.Comparable comparable38 = categoryPlot33.getDomainCrosshairRowKey();
        java.awt.Stroke stroke39 = categoryPlot33.getOutlineStroke();
        categoryPlot16.setRangeMinorGridlineStroke(stroke39);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(shadowGenerator19);
        org.junit.Assert.assertNotNull(legendItemCollection20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(font23);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(rectangleEdge35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(plotOrientation37);
        org.junit.Assert.assertNull(comparable38);
        org.junit.Assert.assertNotNull(stroke39);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        boolean boolean0 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE;
        org.junit.Assert.assertTrue("'" + boolean0 + "' != '" + false + "'", boolean0 == false);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        int int11 = categoryPlot4.indexOf(categoryDataset10);
        org.jfree.data.category.CategoryDataset categoryDataset12 = categoryPlot4.getDataset();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(categoryDataset12);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        categoryPlot4.setRenderer(categoryItemRenderer10);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.data.general.DatasetGroup datasetGroup10 = categoryPlot4.getDatasetGroup();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(datasetGroup10);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = categoryPlot4.removeAnnotation(categoryAnnotation9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.Marker marker8 = null;
        boolean boolean9 = categoryPlot4.removeDomainMarker(marker8);
        java.awt.Paint paint10 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT;
        categoryPlot4.setRangeCrosshairPaint(paint10);
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int13 = categoryPlot4.getDomainAxisIndex(categoryAxis12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'axis' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.zoomRangeAxes((double) (short) -1, plotRenderingInfo10, point2D11, false);
        java.awt.Font font14 = categoryPlot4.getNoDataMessageFont();
        categoryPlot4.setRangeCrosshairValue((double) (short) 100);
        categoryPlot4.configureRangeAxes();
        categoryPlot4.setRangeCrosshairValue((double) (byte) 100, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(font14);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        categoryPlot4.setCrosshairDatasetIndex((int) '4');
        boolean boolean38 = categoryPlot4.isRangeGridlinesVisible();
        java.awt.Stroke stroke39 = null;
        categoryPlot4.setOutlineStroke(stroke39);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        categoryPlot4.clearSelection();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        categoryPlot4.setDataset(categoryDataset10);
        java.lang.Object obj12 = categoryPlot4.clone();
        org.jfree.chart.plot.CategoryMarker categoryMarker13 = null;
        org.jfree.chart.util.Layer layer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker13, layer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer8 = null;
        categoryPlot4.setRenderer(100, categoryItemRenderer8, true);
        org.jfree.chart.event.AxisChangeEvent axisChangeEvent11 = null;
        categoryPlot4.axisChanged(axisChangeEvent11);
        java.awt.Graphics2D graphics2D13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        categoryPlot4.drawBackgroundImage(graphics2D13, rectangle2D14);
        org.jfree.chart.plot.Marker marker16 = null;
        org.jfree.chart.util.Layer layer17 = null;
        boolean boolean18 = categoryPlot4.removeDomainMarker(marker16, layer17);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        categoryPlot4.setForegroundAlpha((float) 0L);
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.data.Range range10 = categoryPlot4.getDataRange(valueAxis9);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(range10);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        boolean boolean11 = categoryPlot4.isRangeCrosshairLockedOnData();
        categoryPlot4.setWeight((int) (byte) 0);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        categoryPlot18.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator21 = categoryPlot18.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection22 = categoryPlot18.getLegendItems();
        java.awt.Stroke stroke23 = categoryPlot18.getRangeGridlineStroke();
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder24 = categoryPlot18.getDatasetRenderingOrder();
        categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder24);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shadowGenerator21);
        org.junit.Assert.assertNotNull(legendItemCollection22);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(datasetRenderingOrder24);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        boolean boolean10 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot15.getRangeAxisEdge();
        double double18 = categoryPlot15.getAnchorValue();
        boolean boolean19 = categoryPlot15.isOutlineVisible();
        boolean boolean20 = categoryPlot4.equals((java.lang.Object) categoryPlot15);
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.data.Range range22 = categoryPlot15.getDataRange(valueAxis21);
        java.lang.String str23 = categoryPlot15.getNoDataMessage();
        java.util.List list24 = categoryPlot15.getAnnotations();
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = categoryPlot15.getDomainAxis();
        categoryPlot15.mapDatasetToDomainAxis(10, (int) (short) 100);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(rectangleEdge17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(range22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNull(categoryAxis25);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        boolean boolean9 = categoryPlot4.canSelectByRegion();
        org.jfree.chart.plot.CategoryMarker categoryMarker10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker10, layer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        double double7 = categoryPlot4.getRangeCrosshairValue();
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        org.jfree.chart.RenderingSource renderingSource11 = null;
        categoryPlot4.select((double) 0.0f, (double) ' ', rectangle2D10, renderingSource11);
        java.awt.Paint paint13 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = categoryPlot4.getRenderer();
        org.jfree.chart.plot.Marker marker16 = null;
        org.jfree.chart.util.Layer layer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = categoryPlot4.removeRangeMarker((int) (byte) 1, marker16, layer17, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(categoryItemRenderer14);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.panRangeAxes((double) 1L, plotRenderingInfo11, point2D12);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        java.awt.Paint paint19 = categoryPlot18.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge20 = categoryPlot18.getRangeAxisEdge();
        java.awt.Paint paint21 = categoryPlot18.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        java.util.List list23 = categoryPlot18.getCategoriesForAxis(categoryAxis22);
        java.awt.Font font24 = categoryPlot18.getNoDataMessageFont();
        boolean boolean25 = categoryPlot18.isRangeGridlinesVisible();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer27 = null;
        categoryPlot18.setRenderer((int) (byte) 10, categoryItemRenderer27, true);
        java.awt.Stroke stroke30 = categoryPlot18.getOutlineStroke();
        org.jfree.chart.util.ShadowGenerator shadowGenerator31 = categoryPlot18.getShadowGenerator();
        categoryPlot4.setShadowGenerator(shadowGenerator31);
        java.lang.String str33 = categoryPlot4.getPlotType();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer34 = null;
        categoryPlot4.setRenderer(categoryItemRenderer34, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(rectangleEdge20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(font24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNotNull(shadowGenerator31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Category Plot" + "'", str33, "Category Plot");
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        categoryPlot4.setDomainAxis((int) '#', categoryAxis12);
        org.jfree.chart.axis.AxisSpace axisSpace14 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace14);
        java.lang.Comparable comparable16 = categoryPlot4.getDomainCrosshairRowKey();
        org.junit.Assert.assertNull(comparable16);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.util.Layer layer9 = null;
        java.util.Collection collection10 = categoryPlot4.getRangeMarkers(layer9);
        java.awt.Paint paint11 = categoryPlot4.getOutlinePaint();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = categoryPlot4.removeAnnotation(categoryAnnotation12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNull(collection10);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.Marker marker8 = null;
        boolean boolean9 = categoryPlot4.removeDomainMarker(marker8);
        java.awt.Paint paint10 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT;
        categoryPlot4.setRangeCrosshairPaint(paint10);
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = categoryPlot4.getDomainAxis();
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        categoryPlot17.setRangeMinorGridlinesVisible(true);
        categoryPlot17.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        int int22 = categoryPlot17.getDomainAxisCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge24 = categoryPlot17.getDomainAxisEdge((int) (byte) 10);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        java.awt.Paint paint30 = categoryPlot29.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot(categoryDataset31, categoryAxis32, valueAxis33, categoryItemRenderer34);
        categoryPlot35.setRangeMinorGridlinesVisible(true);
        categoryPlot35.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint40 = categoryPlot35.getRangeMinorGridlinePaint();
        categoryPlot29.setRangeMinorGridlinePaint(paint40);
        java.awt.Paint paint42 = categoryPlot29.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets43 = categoryPlot29.getInsets();
        java.lang.String str44 = categoryPlot29.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.data.Range range46 = categoryPlot29.getDataRange(valueAxis45);
        org.jfree.data.category.CategoryDataset categoryDataset47 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis48 = null;
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer50 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot51 = new org.jfree.chart.plot.CategoryPlot(categoryDataset47, categoryAxis48, valueAxis49, categoryItemRenderer50);
        categoryPlot51.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator54 = categoryPlot51.getShadowGenerator();
        boolean boolean55 = categoryPlot51.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation56 = categoryPlot51.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation57 = categoryPlot51.getDomainAxisLocation();
        categoryPlot29.setRangeAxisLocation(axisLocation57, false);
        org.jfree.data.category.CategoryDataset categoryDataset60 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis61 = null;
        org.jfree.chart.axis.ValueAxis valueAxis62 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer63 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot64 = new org.jfree.chart.plot.CategoryPlot(categoryDataset60, categoryAxis61, valueAxis62, categoryItemRenderer63);
        java.awt.Paint paint65 = categoryPlot64.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge66 = categoryPlot64.getRangeAxisEdge();
        java.awt.Paint paint67 = categoryPlot64.getRangeCrosshairPaint();
        categoryPlot29.setRangeGridlinePaint(paint67);
        categoryPlot17.setRangeMinorGridlinePaint(paint67);
        categoryPlot4.setRangeCrosshairPaint(paint67);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryAxis12);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge24);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(rectangleInsets43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Category Plot" + "'", str44, "Category Plot");
        org.junit.Assert.assertNull(range46);
        org.junit.Assert.assertNotNull(shadowGenerator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(axisLocation56);
        org.junit.Assert.assertNotNull(axisLocation57);
        org.junit.Assert.assertNotNull(paint65);
        org.junit.Assert.assertNotNull(rectangleEdge66);
        org.junit.Assert.assertNotNull(paint67);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = categoryPlot4.getLegendItems();
        java.awt.Stroke stroke9 = categoryPlot4.getRangeGridlineStroke();
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder10 = categoryPlot4.getDatasetRenderingOrder();
        org.jfree.chart.axis.AxisLocation axisLocation11 = categoryPlot4.getRangeAxisLocation();
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int13 = categoryPlot4.getRangeAxisIndex(valueAxis12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'axis' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertNotNull(legendItemCollection8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(datasetRenderingOrder10);
        org.junit.Assert.assertNotNull(axisLocation11);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        categoryPlot4.setDomainAxis((int) '#', categoryAxis12);
        java.awt.Stroke stroke14 = categoryPlot4.getDomainGridlineStroke();
        categoryPlot4.setCrosshairDatasetIndex(1);
        categoryPlot4.mapDatasetToDomainAxis(15, (-1));
        org.junit.Assert.assertNotNull(stroke14);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.zoomRangeAxes(35.0d, (double) 100.0f, plotRenderingInfo10, point2D11);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent13 = null;
        categoryPlot4.notifyListeners(plotChangeEvent13);
        org.jfree.chart.axis.AxisSpace axisSpace15 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace15, true);
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setDomainAxis((int) (short) -1, categoryAxis19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setRangeCrosshairValue((double) (-1), true);
        org.jfree.chart.axis.AxisSpace axisSpace19 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace19, false);
        float float22 = categoryPlot4.getForegroundAlpha();
        java.awt.geom.Rectangle2D rectangle2D25 = null;
        org.jfree.chart.RenderingSource renderingSource26 = null;
        categoryPlot4.select((double) 100, (double) (byte) 0, rectangle2D25, renderingSource26);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 1.0f + "'", float22 == 1.0f);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.chart.plot.CategoryMarker categoryMarker9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker((int) (byte) 0, categoryMarker9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.zoomRangeAxes(35.0d, (double) 100.0f, plotRenderingInfo10, point2D11);
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = categoryPlot4.getRendererForDataset(categoryDataset13);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = null;
        java.awt.geom.Point2D point2D17 = null;
        categoryPlot4.zoomDomainAxes((double) 100L, plotRenderingInfo16, point2D17);
        org.jfree.chart.axis.ValueAxis[] valueAxisArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeAxes(valueAxisArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryItemRenderer14);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        categoryPlot4.clearSelection();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        categoryPlot4.setDataset(categoryDataset10);
        java.lang.Object obj12 = categoryPlot4.clone();
        org.jfree.chart.plot.CategoryMarker categoryMarker14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker((int) (short) -1, categoryMarker14, layer15, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        boolean boolean7 = categoryPlot4.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable8 = null;
        categoryPlot4.setDomainCrosshairColumnKey(comparable8);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = categoryPlot4.removeAnnotation(categoryAnnotation10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setRangeCrosshairValue((double) (-1), true);
        boolean boolean19 = categoryPlot4.isSubplot();
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.setOutlineVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        java.util.List list19 = categoryPlot16.getCategories();
        categoryPlot16.setRangeCrosshairValue((double) '#');
        categoryPlot16.configureDomainAxes();
        java.awt.Paint paint23 = categoryPlot16.getDomainCrosshairPaint();
        categoryPlot4.setRangeGridlinePaint(paint23);
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        categoryPlot4.setDomainAxis(0, categoryAxis26, true);
        java.awt.Paint paint29 = categoryPlot4.getNoDataMessagePaint();
        categoryPlot4.setRangePannable(true);
        org.jfree.data.category.CategoryDataset categoryDataset33 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis34 = null;
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer36 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = new org.jfree.chart.plot.CategoryPlot(categoryDataset33, categoryAxis34, valueAxis35, categoryItemRenderer36);
        java.awt.Paint paint38 = categoryPlot37.getRangeCrosshairPaint();
        categoryPlot37.setOutlineVisible(true);
        java.awt.Image image41 = categoryPlot37.getBackgroundImage();
        java.lang.Comparable comparable42 = categoryPlot37.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis44 = null;
        categoryPlot37.setRangeAxis((int) '4', valueAxis44);
        org.jfree.data.category.CategoryDataset categoryDataset46 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis47 = null;
        org.jfree.chart.axis.ValueAxis valueAxis48 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer49 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot50 = new org.jfree.chart.plot.CategoryPlot(categoryDataset46, categoryAxis47, valueAxis48, categoryItemRenderer49);
        java.awt.Paint paint51 = categoryPlot50.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge52 = categoryPlot50.getRangeAxisEdge();
        boolean boolean53 = categoryPlot50.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable54 = null;
        categoryPlot50.setDomainCrosshairColumnKey(comparable54);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder56 = categoryPlot50.getDatasetRenderingOrder();
        categoryPlot37.setDatasetRenderingOrder(datasetRenderingOrder56);
        org.jfree.chart.axis.CategoryAxis categoryAxis58 = null;
        java.util.List list59 = categoryPlot37.getCategoriesForAxis(categoryAxis58);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToDomainAxes(100, list59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(image41);
        org.junit.Assert.assertNull(comparable42);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNotNull(rectangleEdge52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(datasetRenderingOrder56);
        org.junit.Assert.assertNotNull(list59);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        java.awt.Stroke stroke37 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.chart.axis.ValueAxis valueAxis38 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int39 = categoryPlot4.getRangeAxisIndex(valueAxis38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'axis' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(stroke37);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.chart.plot.Marker marker12 = null;
        org.jfree.chart.util.Layer layer13 = null;
        boolean boolean15 = categoryPlot4.removeDomainMarker((int) (byte) 0, marker12, layer13, false);
        categoryPlot4.setDomainGridlinesVisible(false);
        java.awt.Paint paint18 = categoryPlot4.getRangeGridlinePaint();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo22 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.handleClick((int) (short) 0, (int) '#', plotRenderingInfo22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(stroke19);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        categoryPlot12.setOutlineVisible(true);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot12.setRangeCrosshairStroke(stroke16);
        categoryPlot12.configureDomainAxes();
        categoryPlot12.setDomainCrosshairColumnKey((java.lang.Comparable) (byte) 100);
        java.awt.Stroke stroke21 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        categoryPlot12.setDomainCrosshairStroke(stroke21);
        double double23 = categoryPlot12.getAnchorValue();
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot12);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation25 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot12.addAnnotation(categoryAnnotation25, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset9 = categoryPlot4.getDataset();
        org.jfree.chart.axis.AxisSpace axisSpace10 = categoryPlot4.getFixedRangeAxisSpace();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        categoryPlot15.setRangeMinorGridlinesVisible(true);
        boolean boolean18 = categoryPlot15.isRangeZeroBaselineVisible();
        org.jfree.chart.util.Layer layer19 = null;
        java.util.Collection collection20 = categoryPlot15.getDomainMarkers(layer19);
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.chart.axis.ValueAxis[] valueAxisArray22 = new org.jfree.chart.axis.ValueAxis[] { valueAxis21 };
        categoryPlot15.setRangeAxes(valueAxisArray22);
        categoryPlot4.setRangeAxes(valueAxisArray22);
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.data.Range range26 = categoryPlot4.getDataRange(valueAxis25);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryDataset9);
        org.junit.Assert.assertNull(axisSpace10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(collection20);
        org.junit.Assert.assertNotNull(valueAxisArray22);
        org.junit.Assert.assertNull(range26);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset9 = categoryPlot4.getDataset();
        org.jfree.chart.axis.AxisSpace axisSpace10 = categoryPlot4.getFixedRangeAxisSpace();
        boolean boolean11 = categoryPlot4.canSelectByPoint();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = categoryPlot16.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = categoryPlot16.getDomainAxis();
        org.jfree.data.category.CategoryDataset categoryDataset19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer22 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = new org.jfree.chart.plot.CategoryPlot(categoryDataset19, categoryAxis20, valueAxis21, categoryItemRenderer22);
        categoryPlot23.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator26 = categoryPlot23.getShadowGenerator();
        boolean boolean27 = categoryPlot23.isDomainZoomable();
        categoryPlot23.setForegroundAlpha(100.0f);
        org.jfree.chart.axis.CategoryAnchor categoryAnchor30 = categoryPlot23.getDomainGridlinePosition();
        categoryPlot16.setDomainGridlinePosition(categoryAnchor30);
        categoryPlot4.setDomainGridlinePosition(categoryAnchor30);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryDataset9);
        org.junit.Assert.assertNull(axisSpace10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(categoryAxis17);
        org.junit.Assert.assertNull(categoryAxis18);
        org.junit.Assert.assertNotNull(shadowGenerator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(categoryAnchor30);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.lang.Object obj7 = categoryPlot4.clone();
        org.jfree.chart.plot.Marker marker9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(15, marker9, layer10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.chart.plot.Plot plot8 = categoryPlot4.getRootPlot();
        boolean boolean9 = categoryPlot4.isRangeMinorGridlinesVisible();
        org.junit.Assert.assertNotNull(plot8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        categoryPlot4.clearRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        categoryPlot16.setDomainCrosshairRowKey((java.lang.Comparable) 10.0f);
        java.awt.Paint paint22 = categoryPlot16.getBackgroundPaint();
        categoryPlot4.setOutlinePaint(paint22);
        boolean boolean24 = categoryPlot4.isDomainCrosshairVisible();
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) (short) 1);
        org.jfree.chart.plot.Marker marker27 = null;
        org.jfree.chart.util.Layer layer28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = categoryPlot4.removeRangeMarker(marker27, layer28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        categoryPlot12.setOutlineVisible(true);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot12.setRangeCrosshairStroke(stroke16);
        categoryPlot12.configureDomainAxes();
        categoryPlot12.setDomainCrosshairColumnKey((java.lang.Comparable) (byte) 100);
        java.awt.Stroke stroke21 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        categoryPlot12.setDomainCrosshairStroke(stroke21);
        double double23 = categoryPlot12.getAnchorValue();
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot12);
        java.awt.Paint paint25 = categoryPlot12.getNoDataMessagePaint();
        org.jfree.data.category.CategoryDataset categoryDataset27 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis28 = null;
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = new org.jfree.chart.plot.CategoryPlot(categoryDataset27, categoryAxis28, valueAxis29, categoryItemRenderer30);
        java.awt.Paint paint32 = categoryPlot31.getRangeCrosshairPaint();
        categoryPlot31.setOutlineVisible(true);
        java.awt.Stroke stroke35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot31.setRangeCrosshairStroke(stroke35);
        categoryPlot31.setRangePannable(true);
        org.jfree.chart.axis.AxisLocation axisLocation40 = categoryPlot31.getRangeAxisLocation((int) (byte) -1);
        categoryPlot12.setRangeAxisLocation((int) (short) 0, axisLocation40);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo43 = null;
        java.awt.geom.Point2D point2D44 = null;
        categoryPlot12.panDomainAxes((double) 1L, plotRenderingInfo43, point2D44);
        boolean boolean46 = categoryPlot12.isRangeCrosshairVisible();
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertNotNull(axisLocation40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        float float11 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = categoryPlot4.getDomainAxisForDataset(10);
        boolean boolean14 = categoryPlot4.getDrawSharedDomainAxis();
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertNull(categoryAxis13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        float float28 = categoryPlot24.getBackgroundImageAlpha();
        org.jfree.chart.util.RectangleInsets rectangleInsets29 = categoryPlot24.getAxisOffset();
        categoryPlot24.setRangeCrosshairValue((double) (short) 1, false);
        java.awt.Graphics2D graphics2D33 = null;
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        categoryPlot24.drawBackgroundImage(graphics2D33, rectangle2D34);
        java.lang.Comparable comparable36 = null;
        categoryPlot24.setDomainCrosshairRowKey(comparable36);
        java.awt.Stroke stroke38 = categoryPlot24.getDomainGridlineStroke();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.5f + "'", float28 == 0.5f);
        org.junit.Assert.assertNotNull(rectangleInsets29);
        org.junit.Assert.assertNotNull(stroke38);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        categoryPlot4.setRangeGridlineStroke(stroke7);
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        categoryPlot13.setRangeMinorGridlinesVisible(true);
        java.util.List list16 = categoryPlot13.getCategories();
        categoryPlot13.setRangeCrosshairValue((double) '#');
        categoryPlot13.configureRangeAxes();
        float float20 = categoryPlot13.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = categoryPlot13.getDomainAxisForDataset(10);
        boolean boolean23 = categoryPlot4.equals((java.lang.Object) categoryAxis22);
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.data.Range range25 = categoryPlot4.getDataRange(valueAxis24);
        categoryPlot4.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace27 = categoryPlot4.getFixedRangeAxisSpace();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(list16);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 1.0f + "'", float20 == 1.0f);
        org.junit.Assert.assertNull(categoryAxis22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(range25);
        org.junit.Assert.assertNull(axisSpace27);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        java.awt.Paint paint12 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = categoryPlot11.getRangeAxisEdge();
        java.awt.Paint paint14 = categoryPlot11.getRangeCrosshairPaint();
        java.awt.Stroke stroke15 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        categoryPlot11.setRangeMinorGridlineStroke(stroke15);
        categoryPlot4.setRangeMinorGridlineStroke(stroke15);
        java.awt.Graphics2D graphics2D18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        categoryPlot4.drawBackgroundImage(graphics2D18, rectangle2D19);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(stroke15);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        java.awt.Paint paint14 = categoryPlot13.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        categoryPlot19.setRangeMinorGridlinesVisible(true);
        categoryPlot19.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint24 = categoryPlot19.getRangeMinorGridlinePaint();
        categoryPlot13.setRangeMinorGridlinePaint(paint24);
        java.awt.Paint paint26 = categoryPlot13.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets27 = categoryPlot13.getInsets();
        java.lang.String str28 = categoryPlot13.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        org.jfree.data.Range range30 = categoryPlot13.getDataRange(valueAxis29);
        org.jfree.data.category.CategoryDataset categoryDataset31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot(categoryDataset31, categoryAxis32, valueAxis33, categoryItemRenderer34);
        categoryPlot35.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator38 = categoryPlot35.getShadowGenerator();
        boolean boolean39 = categoryPlot35.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation40 = categoryPlot35.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation41 = categoryPlot35.getDomainAxisLocation();
        categoryPlot13.setRangeAxisLocation(axisLocation41, false);
        org.jfree.data.category.CategoryDataset categoryDataset44 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = null;
        org.jfree.chart.axis.ValueAxis valueAxis46 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer47 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = new org.jfree.chart.plot.CategoryPlot(categoryDataset44, categoryAxis45, valueAxis46, categoryItemRenderer47);
        java.awt.Paint paint49 = categoryPlot48.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge50 = categoryPlot48.getRangeAxisEdge();
        java.awt.Paint paint51 = categoryPlot48.getRangeCrosshairPaint();
        categoryPlot13.setRangeGridlinePaint(paint51);
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot13);
        org.jfree.chart.util.ShadowGenerator shadowGenerator54 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo56 = null;
        java.awt.geom.Point2D point2D57 = null;
        categoryPlot4.panRangeAxes((double) 0, plotRenderingInfo56, point2D57);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo60 = null;
        java.awt.geom.Point2D point2D61 = null;
        categoryPlot4.panRangeAxes(1.0d, plotRenderingInfo60, point2D61);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) (-1), true);
        categoryPlot4.setRangeMinorGridlinesVisible(false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(rectangleInsets27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Category Plot" + "'", str28, "Category Plot");
        org.junit.Assert.assertNull(range30);
        org.junit.Assert.assertNotNull(shadowGenerator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(axisLocation40);
        org.junit.Assert.assertNotNull(axisLocation41);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(rectangleEdge50);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNotNull(shadowGenerator54);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.zoomDomainAxes(0.0d, plotRenderingInfo11, point2D12, true);
        org.jfree.chart.plot.Marker marker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker15, layer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        categoryPlot4.setRangeCrosshairVisible(false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        categoryPlot4.mapDatasetToDomainAxis((int) 'a', (int) (byte) 0);
        double double13 = categoryPlot4.getAnchorValue();
        java.awt.Paint paint14 = categoryPlot4.getNoDataMessagePaint();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setBackgroundImageAlpha((float) 15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The 'alpha' value must be in the range 0.0f to 1.0f.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        categoryPlot4.setDomainAxis((int) '#', categoryAxis12);
        org.jfree.chart.axis.AxisSpace axisSpace14 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace14);
        categoryPlot4.clearAnnotations();
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        categoryPlot11.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation14 = categoryPlot11.getRangeAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation14, false);
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = new org.jfree.chart.plot.CategoryPlot(categoryDataset17, categoryAxis18, valueAxis19, categoryItemRenderer20);
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = categoryPlot21.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = categoryPlot21.getDomainAxis();
        org.jfree.chart.event.AnnotationChangeEvent annotationChangeEvent24 = null;
        categoryPlot21.annotationChanged(annotationChangeEvent24);
        org.jfree.chart.renderer.category.CategoryItemRenderer[] categoryItemRendererArray26 = new org.jfree.chart.renderer.category.CategoryItemRenderer[] {};
        categoryPlot21.setRenderers(categoryItemRendererArray26);
        categoryPlot4.setRenderers(categoryItemRendererArray26);
        categoryPlot4.clearSelection();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = categoryPlot4.removeAnnotation(categoryAnnotation30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(axisLocation14);
        org.junit.Assert.assertNull(categoryAxis22);
        org.junit.Assert.assertNull(categoryAxis23);
        org.junit.Assert.assertNotNull(categoryItemRendererArray26);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        java.awt.Paint paint12 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = categoryPlot11.getRangeAxisEdge();
        java.awt.Paint paint14 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot11.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        java.awt.Paint paint21 = categoryPlot20.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke29 = categoryPlot26.getRangeGridlineStroke();
        categoryPlot20.setRangeZeroBaselineStroke(stroke29);
        categoryPlot11.setOutlineStroke(stroke29);
        categoryPlot4.setOutlineStroke(stroke29);
        java.awt.Stroke stroke33 = categoryPlot4.getOutlineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset34 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis35 = null;
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = new org.jfree.chart.plot.CategoryPlot(categoryDataset34, categoryAxis35, valueAxis36, categoryItemRenderer37);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer40 = categoryPlot38.getRenderer(10);
        categoryPlot38.setNotify(true);
        java.awt.Paint paint43 = categoryPlot38.getRangeMinorGridlinePaint();
        categoryPlot38.setOutlineVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset46 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis47 = null;
        org.jfree.chart.axis.ValueAxis valueAxis48 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer49 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot50 = new org.jfree.chart.plot.CategoryPlot(categoryDataset46, categoryAxis47, valueAxis48, categoryItemRenderer49);
        categoryPlot50.setRangeMinorGridlinesVisible(true);
        java.util.List list53 = categoryPlot50.getCategories();
        categoryPlot50.setRangeCrosshairValue((double) '#');
        categoryPlot50.configureDomainAxes();
        java.awt.Paint paint57 = categoryPlot50.getDomainCrosshairPaint();
        categoryPlot38.setRangeGridlinePaint(paint57);
        org.jfree.chart.axis.CategoryAxis categoryAxis60 = null;
        categoryPlot38.setDomainAxis(0, categoryAxis60, true);
        boolean boolean63 = categoryPlot38.isRangeCrosshairLockedOnData();
        org.jfree.data.category.CategoryDataset categoryDataset64 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis65 = null;
        org.jfree.chart.axis.ValueAxis valueAxis66 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer67 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot68 = new org.jfree.chart.plot.CategoryPlot(categoryDataset64, categoryAxis65, valueAxis66, categoryItemRenderer67);
        java.awt.Paint paint69 = categoryPlot68.getRangeCrosshairPaint();
        boolean boolean70 = categoryPlot68.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset71 = null;
        categoryPlot68.setDataset(categoryDataset71);
        org.jfree.chart.renderer.category.CategoryItemRenderer[] categoryItemRendererArray73 = new org.jfree.chart.renderer.category.CategoryItemRenderer[] {};
        categoryPlot68.setRenderers(categoryItemRendererArray73);
        categoryPlot38.setRenderers(categoryItemRendererArray73);
        categoryPlot4.setRenderers(categoryItemRendererArray73);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(plotOrientation15);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNull(categoryItemRenderer40);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(list53);
        org.junit.Assert.assertNotNull(paint57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(paint69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(categoryItemRendererArray73);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        double double7 = categoryPlot4.getAnchorValue();
        org.jfree.chart.util.Layer layer9 = null;
        java.util.Collection collection10 = categoryPlot4.getRangeMarkers((int) (byte) 0, layer9);
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = categoryPlot4.getDomainAxis((int) (byte) 100);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(collection10);
        org.junit.Assert.assertNull(categoryAxis12);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        java.awt.Stroke stroke16 = categoryPlot4.getRangeMinorGridlineStroke();
        org.jfree.chart.util.Layer layer18 = null;
        java.util.Collection collection19 = categoryPlot4.getDomainMarkers((int) ' ', layer18);
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = categoryPlot24.getRenderer(10);
        categoryPlot24.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier29 = categoryPlot24.getDrawingSupplier();
        java.awt.Font font30 = categoryPlot24.getNoDataMessageFont();
        java.awt.Stroke stroke31 = categoryPlot24.getRangeCrosshairStroke();
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = categoryPlot24.getDomainAxis();
        org.jfree.chart.util.RectangleInsets rectangleInsets33 = categoryPlot24.getInsets();
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot24);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.zoom((double) 15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(collection19);
        org.junit.Assert.assertNull(categoryItemRenderer26);
        org.junit.Assert.assertNotNull(drawingSupplier29);
        org.junit.Assert.assertNotNull(font30);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNull(categoryAxis32);
        org.junit.Assert.assertNotNull(rectangleInsets33);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = categoryPlot4.getLegendItems();
        java.awt.Stroke stroke9 = categoryPlot4.getRangeGridlineStroke();
        java.awt.Graphics2D graphics2D10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        categoryPlot4.drawBackgroundImage(graphics2D10, rectangle2D11);
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        java.awt.Paint paint18 = categoryPlot17.getRangeCrosshairPaint();
        boolean boolean19 = categoryPlot17.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        categoryPlot17.setDataset(categoryDataset20);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        categoryPlot27.setRangeMinorGridlinesVisible(true);
        categoryPlot27.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        org.jfree.chart.RenderingSource renderingSource35 = null;
        categoryPlot27.select((double) (-1L), (double) (short) -1, rectangle2D34, renderingSource35);
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis39 = null;
        org.jfree.chart.axis.ValueAxis valueAxis40 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer41 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot42 = new org.jfree.chart.plot.CategoryPlot(categoryDataset38, categoryAxis39, valueAxis40, categoryItemRenderer41);
        categoryPlot42.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation45 = categoryPlot42.getRangeAxisLocation();
        categoryPlot27.setRangeAxisLocation((int) (byte) 1, axisLocation45);
        categoryPlot17.setRangeAxisLocation((int) (short) 1, axisLocation45, false);
        int int49 = categoryPlot17.getDomainAxisCount();
        boolean boolean50 = categoryPlot17.isDomainPannable();
        org.jfree.chart.util.RectangleEdge rectangleEdge52 = categoryPlot17.getDomainAxisEdge((int) (byte) 100);
        org.jfree.chart.util.RectangleInsets rectangleInsets53 = categoryPlot17.getAxisOffset();
        categoryPlot4.setInsets(rectangleInsets53, true);
        org.jfree.chart.event.AxisChangeEvent axisChangeEvent56 = null;
        categoryPlot4.axisChanged(axisChangeEvent56);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertNotNull(legendItemCollection8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(axisLocation45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(rectangleEdge52);
        org.junit.Assert.assertNotNull(rectangleInsets53);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        boolean boolean10 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot15.getRangeAxisEdge();
        double double18 = categoryPlot15.getAnchorValue();
        boolean boolean19 = categoryPlot15.isOutlineVisible();
        boolean boolean20 = categoryPlot4.equals((java.lang.Object) categoryPlot15);
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.data.Range range22 = categoryPlot15.getDataRange(valueAxis21);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo25 = null;
        java.awt.geom.Point2D point2D26 = null;
        categoryPlot15.zoomDomainAxes((double) (byte) -1, (double) 0.0f, plotRenderingInfo25, point2D26);
        java.awt.Paint paint28 = categoryPlot15.getRangeGridlinePaint();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(rectangleEdge17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(range22);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = new org.jfree.chart.plot.CategoryPlot(categoryDataset17, categoryAxis18, valueAxis19, categoryItemRenderer20);
        categoryPlot21.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke24 = categoryPlot21.getRangeGridlineStroke();
        categoryPlot15.setRangeZeroBaselineStroke(stroke24);
        categoryPlot4.setDomainCrosshairStroke(stroke24);
        categoryPlot4.setAnchorValue(35.0d);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(stroke24);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        java.awt.Paint paint12 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = categoryPlot11.getRangeAxisEdge();
        java.awt.Paint paint14 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot11.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        java.awt.Paint paint21 = categoryPlot20.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke29 = categoryPlot26.getRangeGridlineStroke();
        categoryPlot20.setRangeZeroBaselineStroke(stroke29);
        categoryPlot11.setOutlineStroke(stroke29);
        categoryPlot4.setOutlineStroke(stroke29);
        java.awt.Stroke stroke33 = categoryPlot4.getOutlineStroke();
        org.jfree.chart.plot.Marker marker35 = null;
        org.jfree.chart.util.Layer layer36 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = categoryPlot4.removeRangeMarker((int) (byte) 100, marker35, layer36, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(plotOrientation15);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(stroke33);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        boolean boolean28 = categoryPlot4.isRangeGridlinesVisible();
        double double29 = categoryPlot4.getAnchorValue();
        org.jfree.chart.axis.CategoryAxis[] categoryAxisArray30 = new org.jfree.chart.axis.CategoryAxis[] {};
        categoryPlot4.setDomainAxes(categoryAxisArray30);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(categoryAxisArray30);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        categoryPlot4.setRangeCrosshairLockedOnData(true);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        java.awt.Paint paint17 = categoryPlot16.getRangeCrosshairPaint();
        categoryPlot16.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge20 = categoryPlot16.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation21 = categoryPlot16.getDomainAxisLocation();
        boolean boolean22 = categoryPlot16.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        java.awt.Paint paint28 = categoryPlot27.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge29 = categoryPlot27.getRangeAxisEdge();
        double double30 = categoryPlot27.getAnchorValue();
        boolean boolean31 = categoryPlot27.isOutlineVisible();
        boolean boolean32 = categoryPlot16.equals((java.lang.Object) categoryPlot27);
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.data.Range range34 = categoryPlot27.getDataRange(valueAxis33);
        java.lang.String str35 = categoryPlot27.getNoDataMessage();
        java.util.List list36 = categoryPlot27.getAnnotations();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToRangeAxes((-1), list36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires 'index' >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleEdge20);
        org.junit.Assert.assertNotNull(axisLocation21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(rectangleEdge29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(range34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(list36);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        boolean boolean11 = categoryPlot4.isRangeCrosshairLockedOnData();
        categoryPlot4.setWeight((int) (byte) 0);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = null;
        java.awt.geom.Point2D point2D17 = null;
        categoryPlot4.zoomDomainAxes((double) (-1L), (double) 1, plotRenderingInfo16, point2D17);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        java.awt.Paint paint14 = categoryPlot13.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        categoryPlot19.setRangeMinorGridlinesVisible(true);
        categoryPlot19.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint24 = categoryPlot19.getRangeMinorGridlinePaint();
        categoryPlot13.setRangeMinorGridlinePaint(paint24);
        java.awt.Paint paint26 = categoryPlot13.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets27 = categoryPlot13.getInsets();
        java.lang.String str28 = categoryPlot13.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        org.jfree.data.Range range30 = categoryPlot13.getDataRange(valueAxis29);
        org.jfree.data.category.CategoryDataset categoryDataset31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot(categoryDataset31, categoryAxis32, valueAxis33, categoryItemRenderer34);
        categoryPlot35.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator38 = categoryPlot35.getShadowGenerator();
        boolean boolean39 = categoryPlot35.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation40 = categoryPlot35.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation41 = categoryPlot35.getDomainAxisLocation();
        categoryPlot13.setRangeAxisLocation(axisLocation41, false);
        org.jfree.data.category.CategoryDataset categoryDataset44 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = null;
        org.jfree.chart.axis.ValueAxis valueAxis46 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer47 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = new org.jfree.chart.plot.CategoryPlot(categoryDataset44, categoryAxis45, valueAxis46, categoryItemRenderer47);
        java.awt.Paint paint49 = categoryPlot48.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge50 = categoryPlot48.getRangeAxisEdge();
        java.awt.Paint paint51 = categoryPlot48.getRangeCrosshairPaint();
        categoryPlot13.setRangeGridlinePaint(paint51);
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot13);
        categoryPlot4.setBackgroundImageAlignment((int) (short) 10);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 10);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(rectangleInsets27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Category Plot" + "'", str28, "Category Plot");
        org.junit.Assert.assertNull(range30);
        org.junit.Assert.assertNotNull(shadowGenerator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(axisLocation40);
        org.junit.Assert.assertNotNull(axisLocation41);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(rectangleEdge50);
        org.junit.Assert.assertNotNull(paint51);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder10 = categoryPlot4.getDatasetRenderingOrder();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        categoryPlot4.setDataset(0, categoryDataset12);
        categoryPlot4.setWeight((int) '#');
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(datasetRenderingOrder10);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        categoryPlot11.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator14 = categoryPlot11.getShadowGenerator();
        boolean boolean15 = categoryPlot11.isDomainZoomable();
        categoryPlot11.setForegroundAlpha(100.0f);
        org.jfree.chart.axis.CategoryAnchor categoryAnchor18 = categoryPlot11.getDomainGridlinePosition();
        categoryPlot4.setDomainGridlinePosition(categoryAnchor18);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = null;
        categoryPlot4.setRenderer(categoryItemRenderer20);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertNotNull(shadowGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(categoryAnchor18);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (-1.0f), true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier19 = categoryPlot4.getDrawingSupplier();
        java.awt.Stroke stroke20 = categoryPlot4.getRangeGridlineStroke();
        org.junit.Assert.assertNotNull(drawingSupplier19);
        org.junit.Assert.assertNotNull(stroke20);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.chart.plot.Plot plot8 = categoryPlot4.getRootPlot();
        categoryPlot4.setWeight((int) '4');
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        categoryPlot15.setOutlineVisible(true);
        java.awt.Image image19 = categoryPlot15.getBackgroundImage();
        java.awt.Paint paint20 = categoryPlot15.getRangeMinorGridlinePaint();
        categoryPlot4.setNoDataMessagePaint(paint20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        java.awt.Paint paint27 = categoryPlot26.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge28 = categoryPlot26.getRangeAxisEdge();
        java.awt.Paint paint29 = categoryPlot26.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation30 = categoryPlot26.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot(categoryDataset31, categoryAxis32, valueAxis33, categoryItemRenderer34);
        java.awt.Paint paint36 = categoryPlot35.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset37 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis38 = null;
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer40 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot41 = new org.jfree.chart.plot.CategoryPlot(categoryDataset37, categoryAxis38, valueAxis39, categoryItemRenderer40);
        categoryPlot41.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke44 = categoryPlot41.getRangeGridlineStroke();
        categoryPlot35.setRangeZeroBaselineStroke(stroke44);
        categoryPlot26.setOutlineStroke(stroke44);
        categoryPlot4.setRangeGridlineStroke(stroke44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation48 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation48, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(plot8);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(image19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(rectangleEdge28);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(plotOrientation30);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(stroke44);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        categoryPlot4.setWeight((int) '#');
        org.jfree.chart.axis.AxisSpace axisSpace16 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace16, false);
        categoryPlot4.setRangeCrosshairValue((double) (-1));
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (-1.0f), true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier19 = categoryPlot4.getDrawingSupplier();
        java.lang.Class<?> wildcardClass20 = categoryPlot4.getClass();
        org.junit.Assert.assertNotNull(drawingSupplier19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        categoryPlot4.mapDatasetToDomainAxis((int) 'a', (int) (byte) 0);
        double double13 = categoryPlot4.getAnchorValue();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = categoryPlot4.getRendererForDataset(categoryDataset11);
        java.awt.Stroke stroke13 = categoryPlot4.getRangeGridlineStroke();
        categoryPlot4.setNotify(true);
        boolean boolean16 = categoryPlot4.isDomainZoomable();
        org.jfree.chart.util.RectangleEdge rectangleEdge18 = categoryPlot4.getRangeAxisEdge((int) (short) -1);
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNull(categoryItemRenderer12);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(rectangleEdge18);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation8 = categoryPlot4.getOrientation();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis(0, valueAxis11, true);
        java.util.List list14 = categoryPlot4.getAnnotations();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        categoryPlot4.setRenderer((int) (short) 0, categoryItemRenderer16);
        org.jfree.chart.util.SortOrder sortOrder18 = categoryPlot4.getColumnRenderingOrder();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(plotOrientation8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(sortOrder18);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = categoryPlot4.getRendererForDataset(categoryDataset11);
        java.awt.Stroke stroke13 = categoryPlot4.getRangeGridlineStroke();
        java.awt.Graphics2D graphics2D14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo17 = null;
        org.jfree.chart.plot.CategoryCrosshairState categoryCrosshairState18 = null;
        boolean boolean19 = categoryPlot4.render(graphics2D14, rectangle2D15, (int) '4', plotRenderingInfo17, categoryCrosshairState18);
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNull(categoryItemRenderer12);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        boolean boolean9 = categoryPlot4.canSelectByRegion();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        categoryPlot20.setRangeMinorGridlinesVisible(true);
        categoryPlot20.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint25 = categoryPlot20.getRangeMinorGridlinePaint();
        categoryPlot14.setRangeMinorGridlinePaint(paint25);
        java.awt.Paint paint27 = categoryPlot14.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets28 = categoryPlot14.getInsets();
        categoryPlot4.setAxisOffset(rectangleInsets28);
        boolean boolean30 = categoryPlot4.isSubplot();
        java.awt.Stroke stroke31 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset33 = null;
        categoryPlot4.setDataset((int) 'a', categoryDataset33);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(rectangleInsets28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(stroke31);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        boolean boolean9 = categoryPlot4.canSelectByRegion();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        categoryPlot20.setRangeMinorGridlinesVisible(true);
        categoryPlot20.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint25 = categoryPlot20.getRangeMinorGridlinePaint();
        categoryPlot14.setRangeMinorGridlinePaint(paint25);
        java.awt.Paint paint27 = categoryPlot14.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets28 = categoryPlot14.getInsets();
        categoryPlot4.setAxisOffset(rectangleInsets28);
        org.jfree.data.category.CategoryDataset categoryDataset30 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = new org.jfree.chart.plot.CategoryPlot(categoryDataset30, categoryAxis31, valueAxis32, categoryItemRenderer33);
        java.awt.Paint paint35 = categoryPlot34.getRangeCrosshairPaint();
        categoryPlot34.setOutlineVisible(true);
        java.awt.Stroke stroke38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot34.setRangeCrosshairStroke(stroke38);
        categoryPlot34.setBackgroundImageAlignment((int) (byte) 0);
        java.util.List list42 = categoryPlot34.getAnnotations();
        org.jfree.chart.axis.ValueAxis valueAxis43 = categoryPlot34.getRangeAxis();
        org.jfree.chart.util.RectangleInsets rectangleInsets44 = categoryPlot34.getInsets();
        categoryPlot4.setAxisOffset(rectangleInsets44);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(rectangleInsets28);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNull(valueAxis43);
        org.junit.Assert.assertNotNull(rectangleInsets44);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.RenderingSource renderingSource10 = null;
        categoryPlot4.select((double) (byte) 1, (double) (-1), rectangle2D9, renderingSource10);
        org.jfree.chart.axis.AxisLocation axisLocation13 = categoryPlot4.getRangeAxisLocation((int) (byte) 10);
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = categoryPlot4.getRangeAxisIndex(valueAxis14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'axis' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(axisLocation13);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) -1);
        categoryPlot4.setBackgroundImageAlpha((float) 1L);
        double double14 = categoryPlot4.getAnchorValue();
        boolean boolean15 = categoryPlot4.isSubplot();
        categoryPlot4.setAnchorValue((double) (byte) 10);
        java.lang.Object obj18 = categoryPlot4.clone();
        java.awt.Paint paint19 = categoryPlot4.getBackgroundPaint();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        boolean boolean8 = categoryPlot4.equals((java.lang.Object) (byte) -1);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        categoryPlot4.setOutlineStroke(stroke9);
        org.jfree.chart.axis.AxisSpace axisSpace11 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace11, false);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent14 = null;
        categoryPlot4.notifyListeners(plotChangeEvent14);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        boolean boolean10 = categoryPlot4.isSubplot();
        org.jfree.data.event.DatasetChangeEvent datasetChangeEvent11 = null;
        categoryPlot4.datasetChanged(datasetChangeEvent11);
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        java.awt.Paint paint18 = categoryPlot17.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer22 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = new org.jfree.chart.plot.CategoryPlot(categoryDataset19, categoryAxis20, valueAxis21, categoryItemRenderer22);
        categoryPlot23.setRangeMinorGridlinesVisible(true);
        categoryPlot23.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint28 = categoryPlot23.getRangeMinorGridlinePaint();
        categoryPlot17.setRangeMinorGridlinePaint(paint28);
        categoryPlot4.setRangeGridlinePaint(paint28);
        categoryPlot4.setForegroundAlpha((float) 10);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo35 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.handleClick((int) (byte) 0, 100, plotRenderingInfo35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer8 = null;
        categoryPlot4.setRenderer(100, categoryItemRenderer8, true);
        org.jfree.chart.event.AxisChangeEvent axisChangeEvent11 = null;
        categoryPlot4.axisChanged(axisChangeEvent11);
        java.awt.Graphics2D graphics2D13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        categoryPlot4.drawBackgroundImage(graphics2D13, rectangle2D14);
        java.lang.Class<?> wildcardClass16 = categoryPlot4.getClass();
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) 0);
        java.util.List list12 = categoryPlot4.getAnnotations();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo15 = null;
        java.awt.geom.Point2D point2D16 = null;
        categoryPlot4.zoomDomainAxes((double) 1L, 0.0d, plotRenderingInfo15, point2D16);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent6 = null;
        categoryPlot4.notifyListeners(plotChangeEvent6);
        org.junit.Assert.assertNull(categoryAxis5);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        boolean boolean7 = categoryPlot4.isNotify();
        int int8 = categoryPlot4.getCrosshairDatasetIndex();
        org.jfree.chart.LegendItemCollection legendItemCollection9 = categoryPlot4.getFixedLegendItems();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge16 = categoryPlot14.getRangeAxisEdge();
        double double17 = categoryPlot14.getAnchorValue();
        org.jfree.data.general.DatasetGroup datasetGroup18 = categoryPlot14.getDatasetGroup();
        boolean boolean19 = categoryPlot14.isNotify();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset26 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = null;
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer29 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = new org.jfree.chart.plot.CategoryPlot(categoryDataset26, categoryAxis27, valueAxis28, categoryItemRenderer29);
        categoryPlot30.setRangeMinorGridlinesVisible(true);
        categoryPlot30.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint35 = categoryPlot30.getRangeMinorGridlinePaint();
        categoryPlot24.setRangeMinorGridlinePaint(paint35);
        java.awt.Paint paint37 = categoryPlot24.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets38 = categoryPlot24.getInsets();
        java.lang.String str39 = categoryPlot24.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis40 = null;
        org.jfree.data.Range range41 = categoryPlot24.getDataRange(valueAxis40);
        org.jfree.data.category.CategoryDataset categoryDataset42 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis43 = null;
        org.jfree.chart.axis.ValueAxis valueAxis44 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer45 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot46 = new org.jfree.chart.plot.CategoryPlot(categoryDataset42, categoryAxis43, valueAxis44, categoryItemRenderer45);
        categoryPlot46.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator49 = categoryPlot46.getShadowGenerator();
        boolean boolean50 = categoryPlot46.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation51 = categoryPlot46.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation52 = categoryPlot46.getDomainAxisLocation();
        categoryPlot24.setRangeAxisLocation(axisLocation52, false);
        java.awt.Stroke stroke55 = categoryPlot24.getDomainGridlineStroke();
        int int56 = categoryPlot24.getWeight();
        java.awt.Paint paint57 = categoryPlot24.getDomainCrosshairPaint();
        categoryPlot14.setOutlinePaint(paint57);
        categoryPlot4.setRangeZeroBaselinePaint(paint57);
        java.awt.geom.Rectangle2D rectangle2D62 = null;
        org.jfree.chart.RenderingSource renderingSource63 = null;
        categoryPlot4.select(10.0d, (double) 100, rectangle2D62, renderingSource63);
        categoryPlot4.clearRangeAxes();
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(legendItemCollection9);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(rectangleEdge16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNull(datasetGroup18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(rectangleInsets38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Category Plot" + "'", str39, "Category Plot");
        org.junit.Assert.assertNull(range41);
        org.junit.Assert.assertNotNull(shadowGenerator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(axisLocation51);
        org.junit.Assert.assertNotNull(axisLocation52);
        org.junit.Assert.assertNotNull(stroke55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(paint57);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        categoryPlot4.setDomainAxis((int) '#', categoryAxis12);
        float float14 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        categoryPlot4.setDomainAxis(0, categoryAxis16, false);
        org.jfree.chart.axis.AxisLocation axisLocation19 = categoryPlot4.getRangeAxisLocation();
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(axisLocation19);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureDomainAxes();
        java.awt.geom.GeneralPath generalPath11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        org.jfree.chart.RenderingSource renderingSource13 = null;
        categoryPlot4.select(generalPath11, rectangle2D12, renderingSource13);
        org.jfree.chart.plot.CategoryMarker categoryMarker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker15, layer16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setRangeCrosshairValue((double) (-1), true);
        org.jfree.chart.axis.AxisSpace axisSpace19 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace19, false);
        float float22 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.util.Layer layer24 = null;
        java.util.Collection collection25 = categoryPlot4.getRangeMarkers(0, layer24);
        org.jfree.chart.plot.CategoryMarker categoryMarker26 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 1.0f + "'", float22 == 1.0f);
        org.junit.Assert.assertNull(collection25);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.chart.renderer.category.CategoryItemRenderer[] categoryItemRendererArray9 = new org.jfree.chart.renderer.category.CategoryItemRenderer[] {};
        categoryPlot4.setRenderers(categoryItemRendererArray9);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setBackgroundImageAlpha((float) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The 'alpha' value must be in the range 0.0f to 1.0f.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(categoryItemRendererArray9);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        categoryPlot14.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        java.awt.Stroke stroke26 = categoryPlot14.getRangeMinorGridlineStroke();
        categoryPlot4.setDomainCrosshairStroke(stroke26);
        boolean boolean28 = categoryPlot4.canSelectByPoint();
        java.awt.Graphics2D graphics2D29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawOutline(graphics2D29, rectangle2D30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setRangeCrosshairValue((double) (-1), true);
        org.jfree.chart.axis.AxisSpace axisSpace19 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace19, false);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        java.awt.Paint paint27 = categoryPlot26.getRangeCrosshairPaint();
        boolean boolean28 = categoryPlot26.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset29 = null;
        categoryPlot26.setDataset(categoryDataset29);
        org.jfree.data.category.CategoryDataset categoryDataset32 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis33 = null;
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer35 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = new org.jfree.chart.plot.CategoryPlot(categoryDataset32, categoryAxis33, valueAxis34, categoryItemRenderer35);
        categoryPlot36.setRangeMinorGridlinesVisible(true);
        categoryPlot36.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D43 = null;
        org.jfree.chart.RenderingSource renderingSource44 = null;
        categoryPlot36.select((double) (-1L), (double) (short) -1, rectangle2D43, renderingSource44);
        org.jfree.data.category.CategoryDataset categoryDataset47 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis48 = null;
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer50 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot51 = new org.jfree.chart.plot.CategoryPlot(categoryDataset47, categoryAxis48, valueAxis49, categoryItemRenderer50);
        categoryPlot51.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation54 = categoryPlot51.getRangeAxisLocation();
        categoryPlot36.setRangeAxisLocation((int) (byte) 1, axisLocation54);
        categoryPlot26.setRangeAxisLocation((int) (short) 1, axisLocation54, false);
        int int58 = categoryPlot26.getDomainAxisCount();
        boolean boolean59 = categoryPlot26.isDomainPannable();
        org.jfree.chart.util.RectangleEdge rectangleEdge61 = categoryPlot26.getDomainAxisEdge((int) (byte) 100);
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot26);
        java.awt.Stroke stroke63 = categoryPlot4.getDomainGridlineStroke();
        org.jfree.chart.event.MarkerChangeEvent markerChangeEvent64 = null;
        categoryPlot4.markerChanged(markerChangeEvent64);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(axisLocation54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(rectangleEdge61);
        org.junit.Assert.assertNotNull(stroke63);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation8 = categoryPlot4.getOrientation();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis(0, valueAxis11, true);
        java.util.List list14 = categoryPlot4.getAnnotations();
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent15 = null;
        categoryPlot4.notifyListeners(plotChangeEvent15);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(plotOrientation8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNotNull(list14);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        java.awt.Stroke stroke10 = categoryPlot4.getRangeMinorGridlineStroke();
        boolean boolean11 = categoryPlot4.isDomainZoomable();
        org.jfree.chart.axis.AxisSpace axisSpace12 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace12, false);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        boolean boolean14 = categoryPlot4.isNotify();
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder15 = categoryPlot4.getDatasetRenderingOrder();
        org.jfree.chart.axis.AxisSpace axisSpace16 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace16);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(datasetRenderingOrder15);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        categoryPlot24.clearDomainAxes();
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot24.getShadowGenerator();
        double double30 = categoryPlot24.getRangeCrosshairValue();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) -1);
        categoryPlot4.setBackgroundImageAlpha((float) 1L);
        double double14 = categoryPlot4.getAnchorValue();
        java.awt.Stroke stroke15 = categoryPlot4.getRangeMinorGridlineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        categoryPlot20.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        org.jfree.chart.axis.CategoryAnchor categoryAnchor24 = categoryPlot20.getDomainGridlinePosition();
        categoryPlot4.setDomainGridlinePosition(categoryAnchor24);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(categoryAnchor24);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis((int) '4', valueAxis11);
        categoryPlot4.clearRangeAxes();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNull(comparable9);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        java.awt.Stroke stroke37 = categoryPlot4.getRangeZeroBaselineStroke();
        java.awt.Stroke stroke38 = categoryPlot4.getDomainCrosshairStroke();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier39 = categoryPlot4.getDrawingSupplier();
        org.jfree.chart.util.ShadowGenerator shadowGenerator40 = categoryPlot4.getShadowGenerator();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNotNull(drawingSupplier39);
        org.junit.Assert.assertNotNull(shadowGenerator40);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke13 = categoryPlot10.getRangeGridlineStroke();
        categoryPlot4.setRangeZeroBaselineStroke(stroke13);
        java.awt.Graphics2D graphics2D15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        categoryPlot4.drawBackgroundImage(graphics2D15, rectangle2D16);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent18 = null;
        categoryPlot4.notifyListeners(plotChangeEvent18);
        org.jfree.chart.plot.CategoryMarker categoryMarker21 = null;
        org.jfree.chart.util.Layer layer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(15, categoryMarker21, layer22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke13);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        categoryPlot4.mapDatasetToDomainAxis((int) (byte) 100, 100);
        org.jfree.chart.plot.Plot plot10 = categoryPlot4.getRootPlot();
        java.lang.String str11 = categoryPlot4.getNoDataMessage();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        java.awt.Paint paint17 = categoryPlot16.getRangeCrosshairPaint();
        categoryPlot16.setOutlineVisible(true);
        java.awt.Stroke stroke20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot16.setRangeCrosshairStroke(stroke20);
        categoryPlot16.setRangePannable(true);
        boolean boolean24 = categoryPlot16.canSelectByPoint();
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator32 = categoryPlot29.getShadowGenerator();
        boolean boolean33 = categoryPlot29.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation34 = categoryPlot29.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation35 = categoryPlot29.getDomainAxisLocation();
        org.jfree.data.category.CategoryDataset categoryDataset36 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis37 = null;
        org.jfree.chart.axis.ValueAxis valueAxis38 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer39 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot40 = new org.jfree.chart.plot.CategoryPlot(categoryDataset36, categoryAxis37, valueAxis38, categoryItemRenderer39);
        java.awt.Paint paint41 = categoryPlot40.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge42 = categoryPlot40.getRangeAxisEdge();
        java.awt.Paint paint43 = categoryPlot40.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation44 = categoryPlot40.getOrientation();
        org.jfree.chart.util.RectangleEdge rectangleEdge45 = org.jfree.chart.plot.Plot.resolveDomainAxisLocation(axisLocation35, plotOrientation44);
        categoryPlot16.setRangeAxisLocation(axisLocation35, false);
        categoryPlot4.setRangeAxisLocation(axisLocation35, true);
        categoryPlot4.clearSelection();
        boolean boolean51 = categoryPlot4.isDomainZoomable();
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertNotNull(plot10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(shadowGenerator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(axisLocation34);
        org.junit.Assert.assertNotNull(axisLocation35);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNotNull(rectangleEdge42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(plotOrientation44);
        org.junit.Assert.assertNotNull(rectangleEdge45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) ' ', false);
        org.jfree.chart.axis.AxisSpace axisSpace11 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace11, false);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        java.awt.Stroke stroke10 = categoryPlot4.getRangeMinorGridlineStroke();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        categoryPlot4.setRenderer(categoryItemRenderer11, true);
        org.jfree.chart.plot.CategoryMarker categoryMarker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(0, categoryMarker15, layer16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
        org.junit.Assert.assertNotNull(stroke10);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.panRangeAxes((double) 100L, plotRenderingInfo12, point2D13);
        org.jfree.chart.plot.Marker marker16 = null;
        org.jfree.chart.util.Layer layer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = categoryPlot4.removeRangeMarker((int) (byte) 1, marker16, layer17, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation10 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo13 = null;
        java.awt.geom.Point2D point2D14 = null;
        categoryPlot4.zoomDomainAxes((double) '#', (double) (-1L), plotRenderingInfo13, point2D14);
        java.lang.Comparable comparable16 = categoryPlot4.getDomainCrosshairRowKey();
        categoryPlot4.clearDomainMarkers();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertNotNull(axisLocation10);
        org.junit.Assert.assertNull(comparable16);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) ' ', false);
        java.awt.Stroke stroke11 = categoryPlot4.getRangeCrosshairStroke();
        categoryPlot4.setBackgroundImageAlignment((int) (byte) 0);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        java.awt.Paint paint19 = categoryPlot18.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge20 = categoryPlot18.getRangeAxisEdge();
        java.awt.Paint paint21 = categoryPlot18.getRangeCrosshairPaint();
        java.awt.Stroke stroke22 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        categoryPlot18.setRangeMinorGridlineStroke(stroke22);
        org.jfree.data.category.CategoryDataset categoryDataset24 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = null;
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer27 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = new org.jfree.chart.plot.CategoryPlot(categoryDataset24, categoryAxis25, valueAxis26, categoryItemRenderer27);
        categoryPlot28.setRangeMinorGridlinesVisible(true);
        categoryPlot28.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        int int33 = categoryPlot28.getDomainAxisCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge35 = categoryPlot28.getDomainAxisEdge((int) (byte) 10);
        org.jfree.data.category.CategoryDataset categoryDataset36 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis37 = null;
        org.jfree.chart.axis.ValueAxis valueAxis38 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer39 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot40 = new org.jfree.chart.plot.CategoryPlot(categoryDataset36, categoryAxis37, valueAxis38, categoryItemRenderer39);
        java.awt.Paint paint41 = categoryPlot40.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset42 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis43 = null;
        org.jfree.chart.axis.ValueAxis valueAxis44 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer45 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot46 = new org.jfree.chart.plot.CategoryPlot(categoryDataset42, categoryAxis43, valueAxis44, categoryItemRenderer45);
        categoryPlot46.setRangeMinorGridlinesVisible(true);
        categoryPlot46.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint51 = categoryPlot46.getRangeMinorGridlinePaint();
        categoryPlot40.setRangeMinorGridlinePaint(paint51);
        java.awt.Paint paint53 = categoryPlot40.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets54 = categoryPlot40.getInsets();
        java.lang.String str55 = categoryPlot40.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis56 = null;
        org.jfree.data.Range range57 = categoryPlot40.getDataRange(valueAxis56);
        org.jfree.data.category.CategoryDataset categoryDataset58 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis59 = null;
        org.jfree.chart.axis.ValueAxis valueAxis60 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer61 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot62 = new org.jfree.chart.plot.CategoryPlot(categoryDataset58, categoryAxis59, valueAxis60, categoryItemRenderer61);
        categoryPlot62.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator65 = categoryPlot62.getShadowGenerator();
        boolean boolean66 = categoryPlot62.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation67 = categoryPlot62.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation68 = categoryPlot62.getDomainAxisLocation();
        categoryPlot40.setRangeAxisLocation(axisLocation68, false);
        org.jfree.data.category.CategoryDataset categoryDataset71 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis72 = null;
        org.jfree.chart.axis.ValueAxis valueAxis73 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer74 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot75 = new org.jfree.chart.plot.CategoryPlot(categoryDataset71, categoryAxis72, valueAxis73, categoryItemRenderer74);
        java.awt.Paint paint76 = categoryPlot75.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge77 = categoryPlot75.getRangeAxisEdge();
        java.awt.Paint paint78 = categoryPlot75.getRangeCrosshairPaint();
        categoryPlot40.setRangeGridlinePaint(paint78);
        categoryPlot28.setRangeMinorGridlinePaint(paint78);
        categoryPlot18.setRangeGridlinePaint(paint78);
        categoryPlot4.setNoDataMessagePaint(paint78);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(rectangleEdge20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge35);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertNotNull(rectangleInsets54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Category Plot" + "'", str55, "Category Plot");
        org.junit.Assert.assertNull(range57);
        org.junit.Assert.assertNotNull(shadowGenerator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(axisLocation67);
        org.junit.Assert.assertNotNull(axisLocation68);
        org.junit.Assert.assertNotNull(paint76);
        org.junit.Assert.assertNotNull(rectangleEdge77);
        org.junit.Assert.assertNotNull(paint78);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        double double7 = categoryPlot4.getAnchorValue();
        org.jfree.chart.util.RectangleInsets rectangleInsets8 = categoryPlot4.getAxisOffset();
        org.jfree.chart.event.MarkerChangeEvent markerChangeEvent9 = null;
        categoryPlot4.markerChanged(markerChangeEvent9);
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = categoryPlot4.getRendererForDataset(categoryDataset11);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rectangleInsets8);
        org.junit.Assert.assertNull(categoryItemRenderer12);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        java.awt.Paint paint12 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = categoryPlot11.getRangeAxisEdge();
        java.awt.Paint paint14 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot11.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        java.awt.Paint paint21 = categoryPlot20.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke29 = categoryPlot26.getRangeGridlineStroke();
        categoryPlot20.setRangeZeroBaselineStroke(stroke29);
        categoryPlot11.setOutlineStroke(stroke29);
        categoryPlot4.setOutlineStroke(stroke29);
        java.awt.Stroke stroke33 = categoryPlot4.getOutlineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset34 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis35 = null;
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = new org.jfree.chart.plot.CategoryPlot(categoryDataset34, categoryAxis35, valueAxis36, categoryItemRenderer37);
        categoryPlot38.setRangeMinorGridlinesVisible(true);
        categoryPlot38.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot38.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis46 = null;
        categoryPlot38.setDomainAxis((int) '#', categoryAxis46);
        org.jfree.chart.axis.AxisSpace axisSpace48 = null;
        categoryPlot38.setFixedDomainAxisSpace(axisSpace48);
        org.jfree.chart.util.RectangleEdge rectangleEdge50 = categoryPlot38.getDomainAxisEdge();
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot38);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(plotOrientation15);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(rectangleEdge50);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.mapDatasetToRangeAxis((int) (short) 100, (int) 'a');
        categoryPlot4.setRangeCrosshairLockedOnData(false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        categoryPlot19.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation22 = categoryPlot19.getRangeAxisLocation();
        categoryPlot4.setRangeAxisLocation((int) (byte) 1, axisLocation22);
        boolean boolean24 = categoryPlot4.isSubplot();
        org.junit.Assert.assertNotNull(axisLocation22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.awt.Paint paint20 = categoryPlot4.getDomainCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset21 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer24 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = new org.jfree.chart.plot.CategoryPlot(categoryDataset21, categoryAxis22, valueAxis23, categoryItemRenderer24);
        java.awt.Paint paint26 = categoryPlot25.getRangeCrosshairPaint();
        categoryPlot25.setOutlineVisible(true);
        java.awt.Stroke stroke29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot25.setRangeCrosshairStroke(stroke29);
        categoryPlot25.setRangePannable(true);
        org.jfree.data.category.CategoryDataset categoryDataset34 = categoryPlot25.getDataset((int) 'a');
        org.jfree.chart.axis.CategoryAxis categoryAxis35 = null;
        java.util.List list36 = categoryPlot25.getCategoriesForAxis(categoryAxis35);
        categoryPlot25.clearRangeAxes();
        org.jfree.chart.LegendItemCollection legendItemCollection38 = categoryPlot25.getLegendItems();
        categoryPlot4.setFixedLegendItems(legendItemCollection38);
        org.jfree.chart.util.Layer layer40 = null;
        java.util.Collection collection41 = categoryPlot4.getDomainMarkers(layer40);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNull(categoryDataset34);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(legendItemCollection38);
        org.junit.Assert.assertNull(collection41);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation10 = categoryPlot4.getDomainAxisLocation();
        categoryPlot4.setDomainGridlinesVisible(false);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertNotNull(axisLocation10);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        categoryPlot4.drawBackgroundImage(graphics2D11, rectangle2D12);
        categoryPlot4.setWeight((int) '#');
        float float16 = categoryPlot4.getForegroundAlpha();
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = new org.jfree.chart.plot.CategoryPlot(categoryDataset17, categoryAxis18, valueAxis19, categoryItemRenderer20);
        java.awt.Paint paint22 = categoryPlot21.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge23 = categoryPlot21.getRangeAxisEdge();
        java.awt.Paint paint24 = categoryPlot21.getRangeCrosshairPaint();
        java.awt.Stroke stroke25 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        categoryPlot21.setRangeMinorGridlineStroke(stroke25);
        categoryPlot4.setDomainGridlineStroke(stroke25);
        org.jfree.chart.axis.CategoryAxis categoryAxis29 = categoryPlot4.getDomainAxisForDataset((int) (short) 1);
        org.jfree.data.category.CategoryDataset categoryDataset30 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = new org.jfree.chart.plot.CategoryPlot(categoryDataset30, categoryAxis31, valueAxis32, categoryItemRenderer33);
        java.awt.Paint paint35 = categoryPlot34.getRangeCrosshairPaint();
        boolean boolean36 = categoryPlot34.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset37 = null;
        categoryPlot34.setDataset(categoryDataset37);
        org.jfree.data.category.CategoryDataset categoryDataset39 = categoryPlot34.getDataset();
        org.jfree.chart.axis.AxisSpace axisSpace40 = categoryPlot34.getFixedRangeAxisSpace();
        org.jfree.data.category.CategoryDataset categoryDataset41 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis42 = null;
        org.jfree.chart.axis.ValueAxis valueAxis43 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer44 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot45 = new org.jfree.chart.plot.CategoryPlot(categoryDataset41, categoryAxis42, valueAxis43, categoryItemRenderer44);
        categoryPlot45.setRangeMinorGridlinesVisible(true);
        boolean boolean48 = categoryPlot45.isRangeZeroBaselineVisible();
        org.jfree.chart.util.Layer layer49 = null;
        java.util.Collection collection50 = categoryPlot45.getDomainMarkers(layer49);
        org.jfree.chart.axis.ValueAxis valueAxis51 = null;
        org.jfree.chart.axis.ValueAxis[] valueAxisArray52 = new org.jfree.chart.axis.ValueAxis[] { valueAxis51 };
        categoryPlot45.setRangeAxes(valueAxisArray52);
        categoryPlot34.setRangeAxes(valueAxisArray52);
        categoryPlot4.setRangeAxes(valueAxisArray52);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(rectangleEdge23);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(categoryAxis29);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(categoryDataset39);
        org.junit.Assert.assertNull(axisSpace40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(collection50);
        org.junit.Assert.assertNotNull(valueAxisArray52);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        org.jfree.chart.axis.AxisSpace axisSpace10 = categoryPlot4.getFixedRangeAxisSpace();
        java.util.List list11 = categoryPlot4.getAnnotations();
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNull(axisSpace10);
        org.junit.Assert.assertNotNull(list11);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        boolean boolean18 = categoryPlot4.isDomainPannable();
        org.jfree.chart.LegendItemCollection legendItemCollection19 = categoryPlot4.getLegendItems();
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder20 = categoryPlot4.getDatasetRenderingOrder();
        org.jfree.chart.event.AnnotationChangeEvent annotationChangeEvent21 = null;
        categoryPlot4.annotationChanged(annotationChangeEvent21);
        org.jfree.chart.plot.Marker marker23 = null;
        org.jfree.chart.util.Layer layer24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = categoryPlot4.removeRangeMarker(marker23, layer24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(legendItemCollection19);
        org.junit.Assert.assertNotNull(datasetRenderingOrder20);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.zoomRangeAxes(35.0d, (double) 100.0f, plotRenderingInfo10, point2D11);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo15 = null;
        java.awt.geom.Point2D point2D16 = null;
        categoryPlot4.zoomRangeAxes((double) 100.0f, (double) 10, plotRenderingInfo15, point2D16);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation10 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo13 = null;
        java.awt.geom.Point2D point2D14 = null;
        categoryPlot4.zoomDomainAxes((double) '#', (double) (-1L), plotRenderingInfo13, point2D14);
        java.lang.Comparable comparable16 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.util.Layer layer17 = null;
        java.util.Collection collection18 = categoryPlot4.getRangeMarkers(layer17);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertNotNull(axisLocation10);
        org.junit.Assert.assertNull(comparable16);
        org.junit.Assert.assertNull(collection18);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        java.awt.Paint paint14 = categoryPlot13.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge15 = categoryPlot13.getRangeAxisEdge();
        boolean boolean16 = categoryPlot13.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable17 = null;
        categoryPlot13.setDomainCrosshairColumnKey(comparable17);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder19 = categoryPlot13.getDatasetRenderingOrder();
        categoryPlot4.setDatasetRenderingOrder(datasetRenderingOrder19);
        java.awt.Stroke stroke21 = categoryPlot4.getDomainGridlineStroke();
        categoryPlot4.configureRangeAxes();
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(rectangleEdge15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(datasetRenderingOrder19);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        boolean boolean12 = categoryPlot4.canSelectByPoint();
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        categoryPlot17.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator20 = categoryPlot17.getShadowGenerator();
        boolean boolean21 = categoryPlot17.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation22 = categoryPlot17.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation23 = categoryPlot17.getDomainAxisLocation();
        org.jfree.data.category.CategoryDataset categoryDataset24 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = null;
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer27 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = new org.jfree.chart.plot.CategoryPlot(categoryDataset24, categoryAxis25, valueAxis26, categoryItemRenderer27);
        java.awt.Paint paint29 = categoryPlot28.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge30 = categoryPlot28.getRangeAxisEdge();
        java.awt.Paint paint31 = categoryPlot28.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation32 = categoryPlot28.getOrientation();
        org.jfree.chart.util.RectangleEdge rectangleEdge33 = org.jfree.chart.plot.Plot.resolveDomainAxisLocation(axisLocation23, plotOrientation32);
        categoryPlot4.setRangeAxisLocation(axisLocation23, false);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo37 = null;
        java.awt.geom.Point2D point2D38 = null;
        categoryPlot4.zoomRangeAxes((double) 100, plotRenderingInfo37, point2D38, false);
        float float41 = categoryPlot4.getBackgroundAlpha();
        org.jfree.chart.plot.Marker marker42 = null;
        org.jfree.chart.util.Layer layer43 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = categoryPlot4.removeRangeMarker(marker42, layer43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(shadowGenerator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(axisLocation22);
        org.junit.Assert.assertNotNull(axisLocation23);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(rectangleEdge30);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(plotOrientation32);
        org.junit.Assert.assertNotNull(rectangleEdge33);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 1.0f + "'", float41 == 1.0f);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        float float28 = categoryPlot24.getBackgroundImageAlpha();
        org.jfree.chart.util.RectangleInsets rectangleInsets29 = categoryPlot24.getAxisOffset();
        java.awt.Stroke stroke30 = categoryPlot24.getOutlineStroke();
        java.awt.Stroke stroke31 = categoryPlot24.getDomainGridlineStroke();
        org.jfree.chart.plot.Plot plot32 = categoryPlot24.getRootPlot();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.5f + "'", float28 == 0.5f);
        org.junit.Assert.assertNotNull(rectangleInsets29);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(plot32);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.AxisLocation axisLocation20 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation21 = categoryPlot4.getDomainAxisLocation();
        float float22 = categoryPlot4.getBackgroundAlpha();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation23 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNotNull(axisLocation20);
        org.junit.Assert.assertNotNull(axisLocation21);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 1.0f + "'", float22 == 1.0f);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.setOutlineVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        java.util.List list19 = categoryPlot16.getCategories();
        categoryPlot16.setRangeCrosshairValue((double) '#');
        categoryPlot16.configureDomainAxes();
        java.awt.Paint paint23 = categoryPlot16.getDomainCrosshairPaint();
        categoryPlot4.setRangeGridlinePaint(paint23);
        categoryPlot4.setBackgroundImageAlignment((-1));
        java.awt.Graphics2D graphics2D27 = null;
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo30 = null;
        org.jfree.chart.plot.CategoryCrosshairState categoryCrosshairState31 = null;
        boolean boolean32 = categoryPlot4.render(graphics2D27, rectangle2D28, 0, plotRenderingInfo30, categoryCrosshairState31);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer34 = null;
        categoryPlot4.setRenderer((int) 'a', categoryItemRenderer34);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.awt.Stroke stroke19 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot(categoryDataset20, categoryAxis21, valueAxis22, categoryItemRenderer23);
        java.awt.Paint paint25 = categoryPlot24.getRangeCrosshairPaint();
        boolean boolean26 = categoryPlot24.isSubplot();
        boolean boolean27 = categoryPlot4.equals((java.lang.Object) categoryPlot24);
        boolean boolean28 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets29 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setAxisOffset(rectangleInsets29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'offset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.AxisLocation axisLocation20 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation21 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo23 = null;
        java.awt.geom.Point2D point2D24 = null;
        categoryPlot4.zoomDomainAxes((double) (byte) -1, plotRenderingInfo23, point2D24);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNotNull(axisLocation20);
        org.junit.Assert.assertNotNull(axisLocation21);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRenderer();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = categoryPlot15.getRenderer(10);
        categoryPlot15.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = categoryPlot15.getDrawingSupplier();
        java.awt.Font font21 = categoryPlot15.getNoDataMessageFont();
        java.awt.Stroke stroke22 = categoryPlot15.getRangeCrosshairStroke();
        categoryPlot4.setDomainCrosshairStroke(stroke22);
        categoryPlot4.setBackgroundImageAlpha((float) (short) 1);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo27 = null;
        java.awt.geom.Point2D point2D28 = null;
        categoryPlot4.zoomRangeAxes((double) (byte) 100, plotRenderingInfo27, point2D28, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertNull(categoryItemRenderer17);
        org.junit.Assert.assertNotNull(drawingSupplier20);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNotNull(stroke22);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setRangeCrosshairValue((double) (-1), true);
        org.jfree.chart.axis.AxisSpace axisSpace19 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace19, false);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        java.awt.Paint paint27 = categoryPlot26.getRangeCrosshairPaint();
        boolean boolean28 = categoryPlot26.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset29 = null;
        categoryPlot26.setDataset(categoryDataset29);
        org.jfree.data.category.CategoryDataset categoryDataset32 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis33 = null;
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer35 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = new org.jfree.chart.plot.CategoryPlot(categoryDataset32, categoryAxis33, valueAxis34, categoryItemRenderer35);
        categoryPlot36.setRangeMinorGridlinesVisible(true);
        categoryPlot36.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D43 = null;
        org.jfree.chart.RenderingSource renderingSource44 = null;
        categoryPlot36.select((double) (-1L), (double) (short) -1, rectangle2D43, renderingSource44);
        org.jfree.data.category.CategoryDataset categoryDataset47 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis48 = null;
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer50 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot51 = new org.jfree.chart.plot.CategoryPlot(categoryDataset47, categoryAxis48, valueAxis49, categoryItemRenderer50);
        categoryPlot51.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation54 = categoryPlot51.getRangeAxisLocation();
        categoryPlot36.setRangeAxisLocation((int) (byte) 1, axisLocation54);
        categoryPlot26.setRangeAxisLocation((int) (short) 1, axisLocation54, false);
        int int58 = categoryPlot26.getDomainAxisCount();
        boolean boolean59 = categoryPlot26.isDomainPannable();
        org.jfree.chart.util.RectangleEdge rectangleEdge61 = categoryPlot26.getDomainAxisEdge((int) (byte) 100);
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot26);
        boolean boolean63 = categoryPlot4.isDomainCrosshairVisible();
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(axisLocation54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(rectangleEdge61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        boolean boolean9 = categoryPlot4.isRangeCrosshairVisible();
        org.jfree.chart.event.MarkerChangeEvent markerChangeEvent10 = null;
        categoryPlot4.markerChanged(markerChangeEvent10);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.panRangeAxes((double) 100L, plotRenderingInfo12, point2D13);
        boolean boolean15 = categoryPlot4.getDrawSharedDomainAxis();
        float float16 = categoryPlot4.getBackgroundImageAlpha();
        categoryPlot4.setDrawSharedDomainAxis(false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 0.5f + "'", float16 == 0.5f);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) -1);
        categoryPlot4.setBackgroundImageAlpha((float) 1L);
        double double14 = categoryPlot4.getAnchorValue();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        categoryPlot4.setRenderer((int) (byte) 100, categoryItemRenderer16);
        boolean boolean18 = categoryPlot4.isRangePannable();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot26.getShadowGenerator();
        boolean boolean30 = categoryPlot26.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation31 = categoryPlot26.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot26.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation32, false);
        org.jfree.chart.util.Layer layer35 = null;
        java.util.Collection collection36 = categoryPlot4.getRangeMarkers(layer35);
        org.jfree.data.category.CategoryDataset categoryDataset37 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis38 = null;
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer40 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot41 = new org.jfree.chart.plot.CategoryPlot(categoryDataset37, categoryAxis38, valueAxis39, categoryItemRenderer40);
        categoryPlot41.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        org.jfree.chart.axis.CategoryAnchor categoryAnchor45 = categoryPlot41.getDomainGridlinePosition();
        boolean boolean46 = categoryPlot4.equals((java.lang.Object) categoryAnchor45);
        categoryPlot4.clearRangeMarkers((int) (short) -1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(axisLocation31);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNull(collection36);
        org.junit.Assert.assertNotNull(categoryAnchor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.util.Layer layer9 = null;
        java.util.Collection collection10 = categoryPlot4.getRangeMarkers(layer9);
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis(valueAxis11);
        java.lang.Comparable comparable13 = null;
        categoryPlot4.setDomainCrosshairRowKey(comparable13, false);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNull(collection10);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation8 = categoryPlot4.getOrientation();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot14.setCrosshairDatasetIndex((-1));
        boolean boolean21 = categoryPlot14.getDrawSharedDomainAxis();
        org.jfree.chart.util.SortOrder sortOrder22 = categoryPlot14.getColumnRenderingOrder();
        categoryPlot4.setColumnRenderingOrder(sortOrder22);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(plotOrientation8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(sortOrder22);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        int int10 = categoryPlot4.getDatasetCount();
        categoryPlot4.clearRangeMarkers();
        java.awt.Stroke stroke12 = categoryPlot4.getRangeGridlineStroke();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(stroke12);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        org.jfree.chart.axis.AxisSpace axisSpace10 = categoryPlot4.getFixedDomainAxisSpace();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier11 = categoryPlot4.getDrawingSupplier();
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
        org.junit.Assert.assertNull(axisSpace10);
        org.junit.Assert.assertNotNull(drawingSupplier11);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        boolean boolean10 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot15.getRangeAxisEdge();
        double double18 = categoryPlot15.getAnchorValue();
        boolean boolean19 = categoryPlot15.isOutlineVisible();
        boolean boolean20 = categoryPlot4.equals((java.lang.Object) categoryPlot15);
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.data.Range range22 = categoryPlot15.getDataRange(valueAxis21);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo24 = null;
        java.awt.geom.Point2D point2D25 = null;
        categoryPlot15.panDomainAxes((double) (byte) 0, plotRenderingInfo24, point2D25);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = categoryPlot15.removeAnnotation(categoryAnnotation27, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(rectangleEdge17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(range22);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        boolean boolean11 = categoryPlot4.isRangeCrosshairLockedOnData();
        categoryPlot4.setWeight((int) (byte) 0);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        categoryPlot4.setDataset((int) (short) 100, categoryDataset15);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        org.jfree.chart.LegendItemCollection legendItemCollection9 = categoryPlot4.getFixedLegendItems();
        java.awt.Graphics2D graphics2D10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawOutline(graphics2D10, rectangle2D11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNull(legendItemCollection9);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo19 = null;
        java.awt.geom.Point2D point2D20 = null;
        categoryPlot4.zoomRangeAxes(100.0d, plotRenderingInfo19, point2D20, true);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        java.awt.Paint paint28 = categoryPlot27.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge29 = categoryPlot27.getRangeAxisEdge();
        categoryPlot27.mapDatasetToDomainAxis((int) '#', (int) '#');
        boolean boolean33 = categoryPlot4.equals((java.lang.Object) categoryPlot27);
        org.jfree.chart.axis.CategoryAxis categoryAxis34 = null;
        categoryPlot27.setDomainAxis(categoryAxis34);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(rectangleEdge29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.Range range21 = categoryPlot4.getDataRange(valueAxis20);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator29 = categoryPlot26.getShadowGenerator();
        boolean boolean30 = categoryPlot26.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation31 = categoryPlot26.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot26.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation32, false);
        org.jfree.chart.axis.CategoryAxis categoryAxis36 = categoryPlot4.getDomainAxis((int) 'a');
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(range21);
        org.junit.Assert.assertNotNull(shadowGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(axisLocation31);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNull(categoryAxis36);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        categoryPlot4.setWeight((int) (short) -1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo14 = null;
        org.jfree.chart.plot.CategoryCrosshairState categoryCrosshairState15 = null;
        boolean boolean16 = categoryPlot4.render(graphics2D11, rectangle2D12, (int) (byte) 1, plotRenderingInfo14, categoryCrosshairState15);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = categoryPlot4.removeAnnotation(categoryAnnotation17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.AxisLocation axisLocation20 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation21 = categoryPlot4.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation22 = categoryPlot4.getRangeAxisLocation();
        org.jfree.chart.plot.Marker marker24 = null;
        org.jfree.chart.util.Layer layer25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = categoryPlot4.removeRangeMarker((int) (byte) 100, marker24, layer25, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNotNull(axisLocation20);
        org.junit.Assert.assertNotNull(axisLocation21);
        org.junit.Assert.assertNotNull(axisLocation22);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.RenderingSource renderingSource12 = null;
        categoryPlot4.select((double) (-1L), (double) (short) -1, rectangle2D11, renderingSource12);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        categoryPlot4.setRangeCrosshairValue((double) (-1), true);
        org.jfree.chart.axis.AxisSpace axisSpace19 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace19, false);
        float float22 = categoryPlot4.getForegroundAlpha();
        boolean boolean23 = categoryPlot4.isDomainGridlinesVisible();
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 1.0f + "'", float22 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        categoryPlot12.setOutlineVisible(true);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot12.setRangeCrosshairStroke(stroke16);
        categoryPlot12.configureDomainAxes();
        categoryPlot12.setDomainCrosshairColumnKey((java.lang.Comparable) (byte) 100);
        java.awt.Stroke stroke21 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        categoryPlot12.setDomainCrosshairStroke(stroke21);
        double double23 = categoryPlot12.getAnchorValue();
        categoryPlot4.setParent((org.jfree.chart.plot.Plot) categoryPlot12);
        org.jfree.chart.axis.AxisSpace axisSpace25 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace25);
        org.jfree.chart.util.SortOrder sortOrder27 = categoryPlot4.getColumnRenderingOrder();
        java.lang.String str28 = categoryPlot4.getPlotType();
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(sortOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Category Plot" + "'", str28, "Category Plot");
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        float float11 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo13 = null;
        java.awt.geom.Point2D point2D14 = null;
        categoryPlot4.panDomainAxes((double) (byte) -1, plotRenderingInfo13, point2D14);
        java.awt.Stroke stroke16 = categoryPlot4.getOutlineStroke();
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertNotNull(stroke16);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = categoryPlot4.getLegendItems();
        java.awt.Stroke stroke9 = categoryPlot4.getRangeGridlineStroke();
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder10 = categoryPlot4.getDatasetRenderingOrder();
        org.jfree.chart.axis.AxisLocation axisLocation11 = categoryPlot4.getRangeAxisLocation();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        java.awt.Paint paint17 = categoryPlot16.getRangeCrosshairPaint();
        boolean boolean18 = categoryPlot16.isSubplot();
        categoryPlot16.setRangeCrosshairValue((double) 1, true);
        org.jfree.chart.plot.PlotOrientation plotOrientation22 = categoryPlot16.getOrientation();
        org.jfree.chart.util.RectangleEdge rectangleEdge23 = org.jfree.chart.plot.Plot.resolveDomainAxisLocation(axisLocation11, plotOrientation22);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertNotNull(legendItemCollection8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(datasetRenderingOrder10);
        org.junit.Assert.assertNotNull(axisLocation11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(plotOrientation22);
        org.junit.Assert.assertNotNull(rectangleEdge23);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        boolean boolean9 = categoryPlot4.canSelectByRegion();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        categoryPlot20.setRangeMinorGridlinesVisible(true);
        categoryPlot20.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint25 = categoryPlot20.getRangeMinorGridlinePaint();
        categoryPlot14.setRangeMinorGridlinePaint(paint25);
        java.awt.Paint paint27 = categoryPlot14.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets28 = categoryPlot14.getInsets();
        categoryPlot4.setAxisOffset(rectangleInsets28);
        org.jfree.data.category.CategoryDataset categoryDataset30 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = new org.jfree.chart.plot.CategoryPlot(categoryDataset30, categoryAxis31, valueAxis32, categoryItemRenderer33);
        java.awt.Paint paint35 = categoryPlot34.getRangeCrosshairPaint();
        categoryPlot34.setOutlineVisible(true);
        java.awt.Stroke stroke38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot34.setRangeCrosshairStroke(stroke38);
        categoryPlot34.setBackgroundImageAlignment((int) (byte) 0);
        java.util.List list42 = categoryPlot34.getAnnotations();
        org.jfree.chart.axis.ValueAxis valueAxis43 = categoryPlot34.getRangeAxis();
        org.jfree.chart.util.RectangleInsets rectangleInsets44 = categoryPlot34.getInsets();
        categoryPlot4.setAxisOffset(rectangleInsets44);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo47 = null;
        java.awt.geom.Point2D point2D48 = null;
        categoryPlot4.zoomDomainAxes(0.0d, plotRenderingInfo47, point2D48, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(rectangleInsets28);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNull(valueAxis43);
        org.junit.Assert.assertNotNull(rectangleInsets44);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        boolean boolean17 = categoryPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo20 = null;
        java.awt.geom.Point2D point2D21 = null;
        categoryPlot14.zoomRangeAxes(35.0d, (double) 100.0f, plotRenderingInfo20, point2D21);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent23 = null;
        categoryPlot14.notifyListeners(plotChangeEvent23);
        org.jfree.chart.axis.AxisSpace axisSpace25 = null;
        categoryPlot14.setFixedRangeAxisSpace(axisSpace25, true);
        org.jfree.data.category.CategoryDataset categoryDataset28 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis29 = null;
        org.jfree.chart.axis.ValueAxis valueAxis30 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer31 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = new org.jfree.chart.plot.CategoryPlot(categoryDataset28, categoryAxis29, valueAxis30, categoryItemRenderer31);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer34 = categoryPlot32.getRenderer(10);
        categoryPlot32.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier37 = categoryPlot32.getDrawingSupplier();
        java.awt.Font font38 = categoryPlot32.getNoDataMessageFont();
        java.awt.Stroke stroke39 = categoryPlot32.getRangeCrosshairStroke();
        org.jfree.chart.axis.CategoryAxis categoryAxis40 = categoryPlot32.getDomainAxis();
        org.jfree.chart.util.RectangleInsets rectangleInsets41 = categoryPlot32.getInsets();
        categoryPlot14.setInsets(rectangleInsets41, true);
        categoryPlot4.setInsets(rectangleInsets41, true);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(categoryItemRenderer34);
        org.junit.Assert.assertNotNull(drawingSupplier37);
        org.junit.Assert.assertNotNull(font38);
        org.junit.Assert.assertNotNull(stroke39);
        org.junit.Assert.assertNull(categoryAxis40);
        org.junit.Assert.assertNotNull(rectangleInsets41);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        boolean boolean7 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        categoryPlot12.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge16 = categoryPlot12.getDomainAxisEdge();
        org.jfree.chart.util.SortOrder sortOrder17 = categoryPlot12.getColumnRenderingOrder();
        categoryPlot4.setColumnRenderingOrder(sortOrder17);
        java.awt.Font font19 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.util.RectangleInsets rectangleInsets20 = org.jfree.chart.plot.Plot.DEFAULT_INSETS;
        categoryPlot4.setAxisOffset(rectangleInsets20);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(rectangleEdge16);
        org.junit.Assert.assertNotNull(sortOrder17);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNotNull(rectangleInsets20);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.util.SortOrder sortOrder9 = categoryPlot4.getColumnRenderingOrder();
        java.lang.String str10 = categoryPlot4.getNoDataMessage();
        boolean boolean11 = categoryPlot4.canSelectByRegion();
        boolean boolean12 = categoryPlot4.isDomainPannable();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(sortOrder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation8 = categoryPlot4.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        java.awt.Paint paint14 = categoryPlot13.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        categoryPlot19.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke22 = categoryPlot19.getRangeGridlineStroke();
        categoryPlot13.setRangeZeroBaselineStroke(stroke22);
        categoryPlot4.setOutlineStroke(stroke22);
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = null;
        categoryPlot4.setDomainAxis(categoryAxis25);
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        categoryPlot4.setRangeAxis((int) (short) 1, valueAxis28);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(plotOrientation8);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(stroke22);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        java.awt.Paint paint12 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = categoryPlot11.getRangeAxisEdge();
        java.awt.Paint paint14 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot11.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        java.awt.Paint paint21 = categoryPlot20.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke29 = categoryPlot26.getRangeGridlineStroke();
        categoryPlot20.setRangeZeroBaselineStroke(stroke29);
        categoryPlot11.setOutlineStroke(stroke29);
        categoryPlot4.setOutlineStroke(stroke29);
        org.jfree.data.category.CategoryDataset categoryDataset34 = null;
        categoryPlot4.setDataset(1, categoryDataset34);
        java.awt.Paint paint36 = categoryPlot4.getBackgroundPaint();
        org.jfree.chart.plot.Marker marker38 = null;
        org.jfree.chart.util.Layer layer39 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker((int) (short) 0, marker38, layer39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(plotOrientation15);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(paint36);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        categoryPlot4.setDomainAxis((int) '#', categoryAxis12);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = categoryPlot18.getRenderer(10);
        double double21 = categoryPlot18.getRangeCrosshairValue();
        java.awt.geom.Rectangle2D rectangle2D24 = null;
        org.jfree.chart.RenderingSource renderingSource25 = null;
        categoryPlot18.select((double) 0.0f, (double) ' ', rectangle2D24, renderingSource25);
        java.awt.Paint paint27 = categoryPlot18.getRangeZeroBaselinePaint();
        categoryPlot4.setRangeCrosshairPaint(paint27);
        java.awt.Paint paint29 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.clearAnnotations();
        org.junit.Assert.assertNull(categoryItemRenderer20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        categoryPlot4.mapDatasetToDomainAxis((int) (byte) 100, 100);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        boolean boolean16 = categoryPlot14.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        categoryPlot14.setDataset(categoryDataset17);
        org.jfree.data.category.CategoryDataset categoryDataset19 = categoryPlot14.getDataset();
        org.jfree.chart.axis.AxisSpace axisSpace20 = categoryPlot14.getFixedRangeAxisSpace();
        org.jfree.data.category.CategoryDataset categoryDataset21 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer24 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = new org.jfree.chart.plot.CategoryPlot(categoryDataset21, categoryAxis22, valueAxis23, categoryItemRenderer24);
        categoryPlot25.setRangeMinorGridlinesVisible(true);
        boolean boolean28 = categoryPlot25.isRangeZeroBaselineVisible();
        org.jfree.chart.util.Layer layer29 = null;
        java.util.Collection collection30 = categoryPlot25.getDomainMarkers(layer29);
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.axis.ValueAxis[] valueAxisArray32 = new org.jfree.chart.axis.ValueAxis[] { valueAxis31 };
        categoryPlot25.setRangeAxes(valueAxisArray32);
        categoryPlot14.setRangeAxes(valueAxisArray32);
        categoryPlot4.setRangeAxes(valueAxisArray32);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation36 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryDataset19);
        org.junit.Assert.assertNull(axisSpace20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(collection30);
        org.junit.Assert.assertNotNull(valueAxisArray32);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        java.awt.Paint paint12 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = categoryPlot11.getRangeAxisEdge();
        java.awt.Paint paint14 = categoryPlot11.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot11.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        java.awt.Paint paint21 = categoryPlot20.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        categoryPlot26.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke29 = categoryPlot26.getRangeGridlineStroke();
        categoryPlot20.setRangeZeroBaselineStroke(stroke29);
        categoryPlot11.setOutlineStroke(stroke29);
        categoryPlot4.setOutlineStroke(stroke29);
        java.awt.Stroke stroke33 = categoryPlot4.getOutlineStroke();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer35 = null;
        categoryPlot4.setRenderer((int) (byte) 0, categoryItemRenderer35);
        org.jfree.chart.axis.CategoryAxis categoryAxis38 = null;
        categoryPlot4.setDomainAxis((int) (byte) 0, categoryAxis38, true);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(plotOrientation15);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(stroke33);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        org.jfree.data.category.CategoryDataset categoryDataset13 = categoryPlot4.getDataset((int) 'a');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo15 = null;
        java.awt.geom.Point2D point2D16 = null;
        categoryPlot4.zoomRangeAxes((double) 10L, plotRenderingInfo15, point2D16, false);
        categoryPlot4.setCrosshairDatasetIndex((int) (byte) 10);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNull(categoryDataset13);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        org.jfree.chart.axis.AxisSpace axisSpace10 = categoryPlot4.getFixedRangeAxisSpace();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = categoryPlot4.removeAnnotation(categoryAnnotation11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNull(axisSpace10);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) 10.0f);
        org.jfree.chart.plot.Marker marker10 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        boolean boolean7 = categoryPlot4.isNotify();
        org.jfree.chart.plot.Plot plot8 = categoryPlot4.getRootPlot();
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        categoryPlot4.setDomainAxis(15, categoryAxis10, true);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(plot8);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        categoryPlot11.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation14 = categoryPlot11.getRangeAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation14, false);
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = new org.jfree.chart.plot.CategoryPlot(categoryDataset17, categoryAxis18, valueAxis19, categoryItemRenderer20);
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = categoryPlot21.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = categoryPlot21.getDomainAxis();
        org.jfree.chart.event.AnnotationChangeEvent annotationChangeEvent24 = null;
        categoryPlot21.annotationChanged(annotationChangeEvent24);
        org.jfree.chart.renderer.category.CategoryItemRenderer[] categoryItemRendererArray26 = new org.jfree.chart.renderer.category.CategoryItemRenderer[] {};
        categoryPlot21.setRenderers(categoryItemRendererArray26);
        categoryPlot4.setRenderers(categoryItemRendererArray26);
        categoryPlot4.clearSelection();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo31 = null;
        java.awt.geom.Point2D point2D32 = null;
        categoryPlot4.zoomRangeAxes((double) (short) 100, plotRenderingInfo31, point2D32);
        org.junit.Assert.assertNotNull(axisLocation14);
        org.junit.Assert.assertNull(categoryAxis22);
        org.junit.Assert.assertNull(categoryAxis23);
        org.junit.Assert.assertNotNull(categoryItemRendererArray26);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.setAnchorValue(1.0d, true);
        categoryPlot4.setForegroundAlpha((float) (short) 0);
        java.awt.Graphics2D graphics2D15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.drawBackground(graphics2D15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        categoryPlot4.setCrosshairDatasetIndex((int) 'a');
        org.jfree.chart.axis.AxisSpace axisSpace19 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace19, false);
        boolean boolean22 = categoryPlot4.isRangeZoomable();
        int int23 = categoryPlot4.getRangeAxisCount();
        org.jfree.chart.axis.AxisSpace axisSpace24 = categoryPlot4.getFixedDomainAxisSpace();
        java.awt.Stroke stroke25 = categoryPlot4.getRangeMinorGridlineStroke();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNull(axisSpace24);
        org.junit.Assert.assertNotNull(stroke25);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        java.awt.Stroke stroke37 = categoryPlot4.getRangeZeroBaselineStroke();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo39 = null;
        java.awt.geom.Point2D point2D40 = null;
        categoryPlot4.zoomDomainAxes((double) 10L, plotRenderingInfo39, point2D40, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(stroke37);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        boolean boolean37 = categoryPlot4.isDomainPannable();
        org.jfree.chart.util.RectangleEdge rectangleEdge39 = categoryPlot4.getDomainAxisEdge((int) (byte) 100);
        org.jfree.chart.util.RectangleInsets rectangleInsets40 = categoryPlot4.getAxisOffset();
        org.jfree.chart.event.AxisChangeEvent axisChangeEvent41 = null;
        categoryPlot4.axisChanged(axisChangeEvent41);
        org.jfree.data.category.CategoryDataset categoryDataset43 = null;
        categoryPlot4.setDataset(categoryDataset43);
        java.awt.Graphics2D graphics2D45 = null;
        java.awt.geom.Rectangle2D rectangle2D46 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo48 = null;
        org.jfree.chart.plot.CategoryCrosshairState categoryCrosshairState49 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = categoryPlot4.render(graphics2D45, rectangle2D46, (int) (short) -1, plotRenderingInfo48, categoryCrosshairState49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Negative 'index'.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangleEdge39);
        org.junit.Assert.assertNotNull(rectangleInsets40);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) 0);
        java.util.List list12 = categoryPlot4.getAnnotations();
        org.jfree.chart.axis.ValueAxis valueAxis13 = categoryPlot4.getRangeAxis();
        org.jfree.chart.plot.Marker marker14 = null;
        boolean boolean15 = categoryPlot4.removeDomainMarker(marker14);
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        categoryPlot4.setDomainAxis(categoryAxis16);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNull(valueAxis13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        categoryPlot13.setRangeMinorGridlinesVisible(true);
        boolean boolean16 = categoryPlot13.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo19 = null;
        java.awt.geom.Point2D point2D20 = null;
        categoryPlot13.zoomRangeAxes(35.0d, (double) 100.0f, plotRenderingInfo19, point2D20);
        boolean boolean22 = categoryPlot4.equals((java.lang.Object) 100.0f);
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        categoryPlot4.setRangeAxis(valueAxis23);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot(categoryDataset7, categoryAxis8, valueAxis9, categoryItemRenderer10);
        categoryPlot11.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator14 = categoryPlot11.getShadowGenerator();
        boolean boolean15 = categoryPlot11.isDomainZoomable();
        categoryPlot11.setForegroundAlpha(100.0f);
        org.jfree.chart.axis.CategoryAnchor categoryAnchor18 = categoryPlot11.getDomainGridlinePosition();
        categoryPlot4.setDomainGridlinePosition(categoryAnchor18);
        org.jfree.chart.util.RectangleEdge rectangleEdge20 = categoryPlot4.getDomainAxisEdge();
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertNotNull(shadowGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(categoryAnchor18);
        org.junit.Assert.assertNotNull(rectangleEdge20);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.zoomRangeAxes(35.0d, (double) 100.0f, plotRenderingInfo10, point2D11);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent13 = null;
        categoryPlot4.notifyListeners(plotChangeEvent13);
        org.jfree.chart.axis.AxisSpace axisSpace15 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace15, true);
        org.jfree.data.category.CategoryDataset categoryDataset18 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot(categoryDataset18, categoryAxis19, valueAxis20, categoryItemRenderer21);
        categoryPlot22.setRangeMinorGridlinesVisible(true);
        java.util.List list25 = categoryPlot22.getCategories();
        categoryPlot22.setRangeCrosshairValue((double) '#');
        categoryPlot22.configureRangeAxes();
        float float29 = categoryPlot22.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis31 = categoryPlot22.getDomainAxisForDataset(10);
        org.jfree.data.category.CategoryDataset categoryDataset32 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis33 = null;
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer35 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = new org.jfree.chart.plot.CategoryPlot(categoryDataset32, categoryAxis33, valueAxis34, categoryItemRenderer35);
        categoryPlot36.setRangeMinorGridlinesVisible(true);
        categoryPlot36.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot36.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis44 = null;
        categoryPlot36.setDomainAxis((int) '#', categoryAxis44);
        org.jfree.data.category.CategoryDataset categoryDataset46 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis47 = null;
        org.jfree.chart.axis.ValueAxis valueAxis48 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer49 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot50 = new org.jfree.chart.plot.CategoryPlot(categoryDataset46, categoryAxis47, valueAxis48, categoryItemRenderer49);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer52 = categoryPlot50.getRenderer(10);
        double double53 = categoryPlot50.getRangeCrosshairValue();
        java.awt.geom.Rectangle2D rectangle2D56 = null;
        org.jfree.chart.RenderingSource renderingSource57 = null;
        categoryPlot50.select((double) 0.0f, (double) ' ', rectangle2D56, renderingSource57);
        java.awt.Paint paint59 = categoryPlot50.getRangeZeroBaselinePaint();
        categoryPlot36.setRangeCrosshairPaint(paint59);
        categoryPlot22.setRangeCrosshairPaint(paint59);
        categoryPlot4.setDomainGridlinePaint(paint59);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(list25);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 1.0f + "'", float29 == 1.0f);
        org.junit.Assert.assertNull(categoryAxis31);
        org.junit.Assert.assertNull(categoryItemRenderer52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(paint59);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        org.jfree.chart.event.PlotChangeListener plotChangeListener10 = null;
        categoryPlot4.addChangeListener(plotChangeListener10);
        categoryPlot4.setDomainGridlinesVisible(true);
        org.jfree.data.general.DatasetGroup datasetGroup14 = categoryPlot4.getDatasetGroup();
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        categoryPlot4.setDomainAxis(categoryAxis15);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
        org.junit.Assert.assertNull(datasetGroup14);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        org.jfree.chart.event.PlotChangeListener plotChangeListener10 = null;
        categoryPlot4.addChangeListener(plotChangeListener10);
        categoryPlot4.setDomainGridlinesVisible(true);
        categoryPlot4.setBackgroundImageAlignment(100);
        org.jfree.chart.plot.CategoryMarker categoryMarker16 = null;
        org.jfree.chart.util.Layer layer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addDomainMarker(categoryMarker16, layer17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        categoryPlot4.setCrosshairDatasetIndex((-1));
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        categoryPlot4.setDomainAxis((int) '#', categoryAxis12);
        org.jfree.chart.axis.AxisSpace axisSpace14 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace14);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) 0L);
        java.awt.Graphics2D graphics2D18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo21 = null;
        org.jfree.chart.plot.CategoryCrosshairState categoryCrosshairState22 = null;
        boolean boolean23 = categoryPlot4.render(graphics2D18, rectangle2D19, (int) ' ', plotRenderingInfo21, categoryCrosshairState22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo19 = null;
        java.awt.geom.Point2D point2D20 = null;
        categoryPlot4.zoomRangeAxes(100.0d, plotRenderingInfo19, point2D20, true);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        java.awt.Paint paint28 = categoryPlot27.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge29 = categoryPlot27.getRangeAxisEdge();
        categoryPlot27.mapDatasetToDomainAxis((int) '#', (int) '#');
        boolean boolean33 = categoryPlot4.equals((java.lang.Object) categoryPlot27);
        org.jfree.data.category.CategoryDataset categoryDataset34 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis35 = null;
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = new org.jfree.chart.plot.CategoryPlot(categoryDataset34, categoryAxis35, valueAxis36, categoryItemRenderer37);
        categoryPlot38.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        categoryPlot38.setDomainCrosshairRowKey((java.lang.Comparable) 10.0f);
        java.awt.Paint paint44 = categoryPlot38.getBackgroundPaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint44);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(rectangleEdge29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(paint44);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.zoomRangeAxes(35.0d, (double) 100.0f, plotRenderingInfo10, point2D11);
        categoryPlot4.setRangeCrosshairVisible(false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation15 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation15, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        boolean boolean9 = categoryPlot4.canSelectByRegion();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        java.awt.Paint paint15 = categoryPlot14.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot(categoryDataset16, categoryAxis17, valueAxis18, categoryItemRenderer19);
        categoryPlot20.setRangeMinorGridlinesVisible(true);
        categoryPlot20.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint25 = categoryPlot20.getRangeMinorGridlinePaint();
        categoryPlot14.setRangeMinorGridlinePaint(paint25);
        java.awt.Paint paint27 = categoryPlot14.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets28 = categoryPlot14.getInsets();
        categoryPlot4.setAxisOffset(rectangleInsets28);
        categoryPlot4.clearRangeMarkers((int) (byte) 10);
        org.jfree.data.category.CategoryDataset categoryDataset33 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis34 = null;
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer36 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = new org.jfree.chart.plot.CategoryPlot(categoryDataset33, categoryAxis34, valueAxis35, categoryItemRenderer36);
        java.awt.Paint paint38 = categoryPlot37.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge39 = categoryPlot37.getRangeAxisEdge();
        java.awt.Paint paint40 = categoryPlot37.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation41 = categoryPlot37.getOrientation();
        java.lang.Comparable comparable42 = categoryPlot37.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis44 = null;
        categoryPlot37.setRangeAxis(0, valueAxis44, true);
        java.util.List list47 = categoryPlot37.getAnnotations();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToDomainAxes((int) '4', list47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(rectangleInsets28);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(rectangleEdge39);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNotNull(plotOrientation41);
        org.junit.Assert.assertNull(comparable42);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.plot.PlotOrientation plotOrientation20 = categoryPlot4.getOrientation();
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        categoryPlot4.setDomainAxis(1, categoryAxis22);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNotNull(plotOrientation20);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        categoryPlot4.clearRangeAxes();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        categoryPlot16.setDomainCrosshairRowKey((java.lang.Comparable) 10.0f);
        java.awt.Paint paint22 = categoryPlot16.getBackgroundPaint();
        categoryPlot4.setOutlinePaint(paint22);
        boolean boolean24 = categoryPlot4.isDomainCrosshairVisible();
        java.awt.Stroke stroke25 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeZeroBaselineStroke(stroke25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = new org.jfree.chart.plot.CategoryPlot(categoryDataset17, categoryAxis18, valueAxis19, categoryItemRenderer20);
        categoryPlot21.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke24 = categoryPlot21.getRangeGridlineStroke();
        categoryPlot15.setRangeZeroBaselineStroke(stroke24);
        categoryPlot4.setDomainCrosshairStroke(stroke24);
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeAxis((-1), valueAxis28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(stroke24);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = categoryPlot4.getLegendItems();
        java.awt.Paint paint9 = categoryPlot4.getRangeZeroBaselinePaint();
        java.awt.Paint paint10 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT;
        categoryPlot4.setRangeMinorGridlinePaint(paint10);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertNotNull(legendItemCollection8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        boolean boolean7 = categoryPlot4.isNotify();
        categoryPlot4.setWeight(0);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = categoryPlot14.getRenderer(10);
        categoryPlot14.setNotify(true);
        org.jfree.chart.plot.Marker marker20 = null;
        org.jfree.chart.util.Layer layer21 = null;
        boolean boolean22 = categoryPlot14.removeDomainMarker((int) (short) 10, marker20, layer21);
        java.awt.Stroke stroke23 = categoryPlot14.getRangeMinorGridlineStroke();
        categoryPlot4.setRangeGridlineStroke(stroke23);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(categoryItemRenderer16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(stroke23);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.plot.Marker marker21 = null;
        org.jfree.chart.util.Layer layer22 = null;
        boolean boolean24 = categoryPlot4.removeDomainMarker((int) (short) 10, marker21, layer22, true);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = categoryPlot4.getRenderer();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(categoryItemRenderer25);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        int int10 = categoryPlot4.getBackgroundImageAlignment();
        java.awt.Paint paint11 = categoryPlot4.getNoDataMessagePaint();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        java.awt.Paint paint17 = categoryPlot16.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset18 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot(categoryDataset18, categoryAxis19, valueAxis20, categoryItemRenderer21);
        categoryPlot22.setRangeMinorGridlinesVisible(true);
        categoryPlot22.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint27 = categoryPlot22.getRangeMinorGridlinePaint();
        categoryPlot16.setRangeMinorGridlinePaint(paint27);
        java.awt.Paint paint29 = categoryPlot16.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets30 = categoryPlot16.getInsets();
        java.lang.String str31 = categoryPlot16.getPlotType();
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot16.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation33 = categoryPlot16.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation34 = categoryPlot16.getRangeAxisLocation();
        categoryPlot4.setDomainAxisLocation(axisLocation34, true);
        org.jfree.chart.LegendItemCollection legendItemCollection37 = null;
        categoryPlot4.setFixedLegendItems(legendItemCollection37);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation39 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 15 + "'", int10 == 15);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(rectangleInsets30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Category Plot" + "'", str31, "Category Plot");
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertNotNull(axisLocation33);
        org.junit.Assert.assertNotNull(axisLocation34);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.zoomRangeAxes((double) (short) -1, plotRenderingInfo10, point2D11, false);
        java.awt.Font font14 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.util.RectangleInsets rectangleInsets15 = categoryPlot4.getAxisOffset();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(font14);
        org.junit.Assert.assertNotNull(rectangleInsets15);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo19 = null;
        java.awt.geom.Point2D point2D20 = null;
        categoryPlot4.zoomRangeAxes(100.0d, plotRenderingInfo19, point2D20, true);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        java.awt.Paint paint28 = categoryPlot27.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge29 = categoryPlot27.getRangeAxisEdge();
        categoryPlot27.mapDatasetToDomainAxis((int) '#', (int) '#');
        boolean boolean33 = categoryPlot4.equals((java.lang.Object) categoryPlot27);
        categoryPlot27.setRangeZeroBaselineVisible(false);
        org.jfree.chart.axis.AxisSpace axisSpace36 = categoryPlot27.getFixedRangeAxisSpace();
        org.jfree.chart.axis.CategoryAnchor categoryAnchor37 = categoryPlot27.getDomainGridlinePosition();
        categoryPlot27.setRangeMinorGridlinesVisible(false);
        java.awt.geom.GeneralPath generalPath40 = null;
        java.awt.geom.Rectangle2D rectangle2D41 = null;
        org.jfree.chart.RenderingSource renderingSource42 = null;
        categoryPlot27.select(generalPath40, rectangle2D41, renderingSource42);
        org.jfree.chart.plot.Marker marker44 = null;
        org.jfree.chart.util.Layer layer45 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = categoryPlot27.removeRangeMarker(marker44, layer45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(rectangleEdge29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(axisSpace36);
        org.junit.Assert.assertNotNull(categoryAnchor37);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) 1, true);
        int int8 = categoryPlot4.getRendererCount();
        java.awt.Stroke stroke9 = categoryPlot4.getRangeGridlineStroke();
        categoryPlot4.setDomainGridlinesVisible(true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = categoryPlot4.getDrawingSupplier();
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        categoryPlot14.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        java.awt.Stroke stroke26 = categoryPlot14.getRangeMinorGridlineStroke();
        categoryPlot4.setDomainCrosshairStroke(stroke26);
        org.jfree.chart.axis.CategoryAxis categoryAxis29 = categoryPlot4.getDomainAxisForDataset(0);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(drawingSupplier9);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNull(categoryAxis29);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        boolean boolean7 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot(categoryDataset8, categoryAxis9, valueAxis10, categoryItemRenderer11);
        java.awt.Paint paint13 = categoryPlot12.getRangeCrosshairPaint();
        categoryPlot12.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge16 = categoryPlot12.getDomainAxisEdge();
        org.jfree.chart.util.SortOrder sortOrder17 = categoryPlot12.getColumnRenderingOrder();
        categoryPlot4.setColumnRenderingOrder(sortOrder17);
        categoryPlot4.setForegroundAlpha((float) (byte) 100);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(rectangleEdge16);
        org.junit.Assert.assertNotNull(sortOrder17);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.zoomDomainAxes(0.0d, plotRenderingInfo11, point2D12, true);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        java.awt.Paint paint20 = categoryPlot19.getRangeCrosshairPaint();
        categoryPlot19.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge23 = categoryPlot19.getDomainAxisEdge();
        org.jfree.chart.util.SortOrder sortOrder24 = categoryPlot19.getColumnRenderingOrder();
        categoryPlot4.setRowRenderingOrder(sortOrder24);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (short) 100);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(rectangleEdge23);
        org.junit.Assert.assertNotNull(sortOrder24);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis((int) (byte) 1, valueAxis11, false);
        org.jfree.chart.axis.ValueAxis valueAxis14 = categoryPlot4.getRangeAxis();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNull(valueAxis14);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder10 = categoryPlot4.getDatasetRenderingOrder();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        categoryPlot4.setDataset(0, categoryDataset12);
        java.awt.Font font14 = categoryPlot4.getNoDataMessageFont();
        categoryPlot4.setRangeCrosshairVisible(true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(datasetRenderingOrder10);
        org.junit.Assert.assertNotNull(font14);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        float float11 = categoryPlot4.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = categoryPlot4.getDomainAxisForDataset(10);
        org.jfree.chart.plot.Marker marker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker((int) 'a', marker15, layer16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertNull(categoryAxis13);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        java.awt.Stroke stroke8 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeMinorGridlineStroke(stroke8);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        int int19 = categoryPlot14.getDomainAxisCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge21 = categoryPlot14.getDomainAxisEdge((int) (byte) 10);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot(categoryDataset22, categoryAxis23, valueAxis24, categoryItemRenderer25);
        java.awt.Paint paint27 = categoryPlot26.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset28 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis29 = null;
        org.jfree.chart.axis.ValueAxis valueAxis30 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer31 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = new org.jfree.chart.plot.CategoryPlot(categoryDataset28, categoryAxis29, valueAxis30, categoryItemRenderer31);
        categoryPlot32.setRangeMinorGridlinesVisible(true);
        categoryPlot32.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint37 = categoryPlot32.getRangeMinorGridlinePaint();
        categoryPlot26.setRangeMinorGridlinePaint(paint37);
        java.awt.Paint paint39 = categoryPlot26.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets40 = categoryPlot26.getInsets();
        java.lang.String str41 = categoryPlot26.getPlotType();
        org.jfree.chart.axis.ValueAxis valueAxis42 = null;
        org.jfree.data.Range range43 = categoryPlot26.getDataRange(valueAxis42);
        org.jfree.data.category.CategoryDataset categoryDataset44 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = null;
        org.jfree.chart.axis.ValueAxis valueAxis46 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer47 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = new org.jfree.chart.plot.CategoryPlot(categoryDataset44, categoryAxis45, valueAxis46, categoryItemRenderer47);
        categoryPlot48.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator51 = categoryPlot48.getShadowGenerator();
        boolean boolean52 = categoryPlot48.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation53 = categoryPlot48.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation54 = categoryPlot48.getDomainAxisLocation();
        categoryPlot26.setRangeAxisLocation(axisLocation54, false);
        org.jfree.data.category.CategoryDataset categoryDataset57 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis58 = null;
        org.jfree.chart.axis.ValueAxis valueAxis59 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer60 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot61 = new org.jfree.chart.plot.CategoryPlot(categoryDataset57, categoryAxis58, valueAxis59, categoryItemRenderer60);
        java.awt.Paint paint62 = categoryPlot61.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge63 = categoryPlot61.getRangeAxisEdge();
        java.awt.Paint paint64 = categoryPlot61.getRangeCrosshairPaint();
        categoryPlot26.setRangeGridlinePaint(paint64);
        categoryPlot14.setRangeMinorGridlinePaint(paint64);
        categoryPlot4.setRangeGridlinePaint(paint64);
        java.awt.Paint paint68 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset69 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis70 = null;
        org.jfree.chart.axis.ValueAxis valueAxis71 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer72 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot73 = new org.jfree.chart.plot.CategoryPlot(categoryDataset69, categoryAxis70, valueAxis71, categoryItemRenderer72);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer75 = categoryPlot73.getRenderer(10);
        categoryPlot73.setNotify(true);
        java.awt.Paint paint78 = categoryPlot73.getRangeMinorGridlinePaint();
        categoryPlot73.setOutlineVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset81 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis82 = null;
        org.jfree.chart.axis.ValueAxis valueAxis83 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer84 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot85 = new org.jfree.chart.plot.CategoryPlot(categoryDataset81, categoryAxis82, valueAxis83, categoryItemRenderer84);
        categoryPlot85.setRangeMinorGridlinesVisible(true);
        java.util.List list88 = categoryPlot85.getCategories();
        categoryPlot85.setRangeCrosshairValue((double) '#');
        categoryPlot85.configureDomainAxes();
        java.awt.Paint paint92 = categoryPlot85.getDomainCrosshairPaint();
        categoryPlot73.setRangeGridlinePaint(paint92);
        categoryPlot73.setBackgroundImageAlignment((-1));
        java.awt.Stroke stroke96 = categoryPlot73.getRangeGridlineStroke();
        categoryPlot4.setDomainCrosshairStroke(stroke96);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge21);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(rectangleInsets40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Category Plot" + "'", str41, "Category Plot");
        org.junit.Assert.assertNull(range43);
        org.junit.Assert.assertNotNull(shadowGenerator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(axisLocation53);
        org.junit.Assert.assertNotNull(axisLocation54);
        org.junit.Assert.assertNotNull(paint62);
        org.junit.Assert.assertNotNull(rectangleEdge63);
        org.junit.Assert.assertNotNull(paint64);
        org.junit.Assert.assertNotNull(paint68);
        org.junit.Assert.assertNull(categoryItemRenderer75);
        org.junit.Assert.assertNotNull(paint78);
        org.junit.Assert.assertNull(list88);
        org.junit.Assert.assertNotNull(paint92);
        org.junit.Assert.assertNotNull(stroke96);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        org.jfree.chart.axis.AxisLocation axisLocation13 = categoryPlot4.getRangeAxisLocation((int) (byte) -1);
        org.jfree.chart.plot.Marker marker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        boolean boolean17 = categoryPlot4.removeDomainMarker((int) '#', marker15, layer16);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(axisLocation13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        categoryPlot4.setForegroundAlpha((float) 0L);
        boolean boolean9 = categoryPlot4.getDrawSharedDomainAxis();
        categoryPlot4.mapDatasetToRangeAxis(0, 0);
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        categoryPlot4.setRangeAxis(valueAxis13);
        org.jfree.chart.plot.Marker marker15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker(marker15, layer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis((int) '4', valueAxis11);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        java.awt.Paint paint19 = categoryPlot18.getRangeCrosshairPaint();
        categoryPlot18.setOutlineVisible(true);
        java.awt.Image image22 = categoryPlot18.getBackgroundImage();
        java.lang.Comparable comparable23 = categoryPlot18.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        categoryPlot18.setRangeAxis((int) '4', valueAxis25);
        org.jfree.data.category.CategoryDataset categoryDataset27 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis28 = null;
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = new org.jfree.chart.plot.CategoryPlot(categoryDataset27, categoryAxis28, valueAxis29, categoryItemRenderer30);
        java.awt.Paint paint32 = categoryPlot31.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge33 = categoryPlot31.getRangeAxisEdge();
        boolean boolean34 = categoryPlot31.isRangeMinorGridlinesVisible();
        java.lang.Comparable comparable35 = null;
        categoryPlot31.setDomainCrosshairColumnKey(comparable35);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder37 = categoryPlot31.getDatasetRenderingOrder();
        categoryPlot18.setDatasetRenderingOrder(datasetRenderingOrder37);
        org.jfree.chart.axis.CategoryAxis categoryAxis39 = null;
        java.util.List list40 = categoryPlot18.getCategoriesForAxis(categoryAxis39);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.mapDatasetToDomainAxes(100, list40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(image22);
        org.junit.Assert.assertNull(comparable23);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(rectangleEdge33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(datasetRenderingOrder37);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = categoryPlot4.getRendererForDataset(categoryDataset9);
        boolean boolean11 = categoryPlot4.isRangeCrosshairLockedOnData();
        categoryPlot4.setWeight((int) (byte) 0);
        categoryPlot4.clearDomainMarkers();
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer21 = categoryPlot19.getRenderer(10);
        categoryPlot19.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier24 = categoryPlot19.getDrawingSupplier();
        java.awt.Font font25 = categoryPlot19.getNoDataMessageFont();
        java.awt.Stroke stroke26 = categoryPlot19.getRangeCrosshairStroke();
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = categoryPlot19.getDomainAxis();
        org.jfree.chart.util.RectangleInsets rectangleInsets28 = categoryPlot19.getInsets();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        categoryPlot19.setOutlinePaint(paint29);
        categoryPlot4.setNoDataMessagePaint(paint29);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemRenderer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(categoryItemRenderer21);
        org.junit.Assert.assertNotNull(drawingSupplier24);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNull(categoryAxis27);
        org.junit.Assert.assertNotNull(rectangleInsets28);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.plot.Marker marker10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        boolean boolean12 = categoryPlot4.removeDomainMarker((int) (short) 10, marker10, layer11);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        categoryPlot18.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator21 = categoryPlot18.getShadowGenerator();
        boolean boolean22 = categoryPlot18.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation23 = categoryPlot18.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation24 = categoryPlot18.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation((int) (short) 0, axisLocation24, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation27 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addAnnotation(categoryAnnotation27, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shadowGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(axisLocation23);
        org.junit.Assert.assertNotNull(axisLocation24);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        categoryPlot4.setDomainAxis(categoryAxis20);
        java.lang.String str22 = categoryPlot4.getNoDataMessage();
        int int23 = categoryPlot4.getBackgroundImageAlignment();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 15 + "'", int23 == 15);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.setOutlineVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        java.util.List list19 = categoryPlot16.getCategories();
        categoryPlot16.setRangeCrosshairValue((double) '#');
        categoryPlot16.configureDomainAxes();
        java.awt.Paint paint23 = categoryPlot16.getDomainCrosshairPaint();
        categoryPlot4.setRangeGridlinePaint(paint23);
        categoryPlot4.setBackgroundImageAlignment((-1));
        java.awt.Graphics2D graphics2D27 = null;
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo30 = null;
        org.jfree.chart.plot.CategoryCrosshairState categoryCrosshairState31 = null;
        boolean boolean32 = categoryPlot4.render(graphics2D27, rectangle2D28, 0, plotRenderingInfo30, categoryCrosshairState31);
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.data.Range range34 = categoryPlot4.getDataRange(valueAxis33);
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(range34);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        categoryPlot4.setOutlineVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        java.util.List list19 = categoryPlot16.getCategories();
        categoryPlot16.setRangeCrosshairValue((double) '#');
        categoryPlot16.configureDomainAxes();
        java.awt.Paint paint23 = categoryPlot16.getDomainCrosshairPaint();
        categoryPlot4.setRangeGridlinePaint(paint23);
        categoryPlot4.setBackgroundImageAlignment((-1));
        java.awt.Graphics2D graphics2D27 = null;
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo30 = null;
        org.jfree.chart.plot.CategoryCrosshairState categoryCrosshairState31 = null;
        boolean boolean32 = categoryPlot4.render(graphics2D27, rectangle2D28, 0, plotRenderingInfo30, categoryCrosshairState31);
        org.jfree.chart.util.RectangleEdge rectangleEdge34 = categoryPlot4.getDomainAxisEdge((int) ' ');
        org.jfree.chart.axis.AxisSpace axisSpace35 = categoryPlot4.getFixedDomainAxisSpace();
        org.junit.Assert.assertNull(categoryItemRenderer6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(list19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(rectangleEdge34);
        org.junit.Assert.assertNull(axisSpace35);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        boolean boolean9 = categoryPlot4.canSelectByRegion();
        org.jfree.chart.axis.AxisSpace axisSpace10 = categoryPlot4.getFixedDomainAxisSpace();
        org.jfree.data.general.DatasetGroup datasetGroup11 = categoryPlot4.getDatasetGroup();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(axisSpace10);
        org.junit.Assert.assertNull(datasetGroup11);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = categoryPlot4.getLegendItems();
        java.awt.Stroke stroke9 = categoryPlot4.getRangeGridlineStroke();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer10 = null;
        int int11 = categoryPlot4.getIndexOf(categoryItemRenderer10);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (short) 0, false);
        double double15 = categoryPlot4.getRangeCrosshairValue();
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertNotNull(legendItemCollection8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        java.awt.Stroke stroke37 = categoryPlot4.getRangeZeroBaselineStroke();
        java.awt.Stroke stroke38 = categoryPlot4.getDomainCrosshairStroke();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier39 = categoryPlot4.getDrawingSupplier();
        categoryPlot4.configureDomainAxes();
        int int41 = categoryPlot4.getWeight();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNotNull(drawingSupplier39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.panRangeAxes(100.0d, plotRenderingInfo11, point2D12);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        categoryPlot18.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        categoryPlot18.setRangeGridlineStroke(stroke21);
        categoryPlot4.setRangeGridlineStroke(stroke21);
        int int24 = categoryPlot4.getDomainAxisCount();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        categoryPlot4.setForegroundAlpha(100.0f);
        org.jfree.chart.util.RectangleEdge rectangleEdge12 = categoryPlot4.getRangeAxisEdge((int) '#');
        boolean boolean13 = categoryPlot4.canSelectByRegion();
        categoryPlot4.setNoDataMessage("hi!");
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rectangleEdge12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        categoryPlot4.setRangeCrosshairValue((double) 1, true);
        boolean boolean10 = categoryPlot4.isRangeCrosshairVisible();
        org.jfree.chart.axis.AxisSpace axisSpace11 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace11);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent13 = null;
        categoryPlot4.rendererChanged(rendererChangeEvent13);
        java.awt.Paint paint15 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.setRangeMinorGridlinePaint(paint15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.zoomRangeAxes(35.0d, (double) 100.0f, plotRenderingInfo10, point2D11);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        categoryPlot18.setRangeMinorGridlinesVisible(true);
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        categoryPlot18.setRangeGridlineStroke(stroke21);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        categoryPlot27.setRangeMinorGridlinesVisible(true);
        java.util.List list30 = categoryPlot27.getCategories();
        categoryPlot27.setRangeCrosshairValue((double) '#');
        categoryPlot27.configureRangeAxes();
        float float34 = categoryPlot27.getForegroundAlpha();
        org.jfree.chart.axis.CategoryAxis categoryAxis36 = categoryPlot27.getDomainAxisForDataset(10);
        boolean boolean37 = categoryPlot18.equals((java.lang.Object) categoryAxis36);
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis39 = null;
        org.jfree.chart.axis.ValueAxis valueAxis40 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer41 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot42 = new org.jfree.chart.plot.CategoryPlot(categoryDataset38, categoryAxis39, valueAxis40, categoryItemRenderer41);
        categoryPlot42.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator45 = categoryPlot42.getShadowGenerator();
        boolean boolean46 = categoryPlot42.isDomainZoomable();
        categoryPlot42.mapDatasetToDomainAxis((int) (short) 0, (int) (short) 1);
        org.jfree.chart.axis.AxisLocation axisLocation50 = categoryPlot42.getDomainAxisLocation();
        categoryPlot18.setDomainAxisLocation(axisLocation50, true);
        categoryPlot4.setDomainAxisLocation(100, axisLocation50, true);
        java.awt.Stroke stroke55 = categoryPlot4.getRangeGridlineStroke();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNull(list30);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 1.0f + "'", float34 == 1.0f);
        org.junit.Assert.assertNull(categoryAxis36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shadowGenerator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(axisLocation50);
        org.junit.Assert.assertNotNull(stroke55);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        boolean boolean11 = categoryPlot4.isRangeGridlinesVisible();
        categoryPlot4.clearRangeMarkers();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        boolean boolean11 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        categoryPlot4.setRenderer((int) (byte) 10, categoryItemRenderer13, true);
        java.awt.Font font16 = categoryPlot4.getNoDataMessageFont();
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = new org.jfree.chart.plot.CategoryPlot(categoryDataset17, categoryAxis18, valueAxis19, categoryItemRenderer20);
        categoryPlot21.setRangeMinorGridlinesVisible(true);
        categoryPlot21.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        org.jfree.chart.RenderingSource renderingSource29 = null;
        categoryPlot21.select((double) (-1L), (double) (short) -1, rectangle2D28, renderingSource29);
        categoryPlot21.setDomainCrosshairRowKey((java.lang.Comparable) (byte) 10);
        java.awt.Stroke stroke33 = categoryPlot21.getRangeMinorGridlineStroke();
        categoryPlot4.setRangeCrosshairStroke(stroke33);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(stroke33);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        categoryPlot4.clearRangeAxes();
        boolean boolean12 = categoryPlot4.isRangePannable();
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        org.jfree.chart.plot.Marker marker12 = null;
        org.jfree.chart.util.Layer layer13 = null;
        boolean boolean15 = categoryPlot4.removeDomainMarker((int) (byte) 0, marker12, layer13, false);
        categoryPlot4.setDomainGridlinesVisible(false);
        categoryPlot4.clearDomainMarkers();
        org.jfree.chart.plot.Marker marker19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = categoryPlot4.removeRangeMarker(marker19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        boolean boolean7 = categoryPlot4.isRangeZeroBaselineVisible();
        categoryPlot4.setRangeCrosshairVisible(true);
        categoryPlot4.configureRangeAxes();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = new org.jfree.chart.plot.CategoryPlot(categoryDataset10, categoryAxis11, valueAxis12, categoryItemRenderer13);
        categoryPlot14.setRangeMinorGridlinesVisible(true);
        categoryPlot14.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.RenderingSource renderingSource22 = null;
        categoryPlot14.select((double) (-1L), (double) (short) -1, rectangle2D21, renderingSource22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot(categoryDataset25, categoryAxis26, valueAxis27, categoryItemRenderer28);
        categoryPlot29.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.axis.AxisLocation axisLocation32 = categoryPlot29.getRangeAxisLocation();
        categoryPlot14.setRangeAxisLocation((int) (byte) 1, axisLocation32);
        categoryPlot4.setRangeAxisLocation((int) (short) 1, axisLocation32, false);
        int int36 = categoryPlot4.getDomainAxisCount();
        boolean boolean37 = categoryPlot4.isDomainPannable();
        org.jfree.chart.util.RectangleEdge rectangleEdge39 = categoryPlot4.getDomainAxisEdge((int) (byte) 100);
        org.jfree.chart.util.RectangleInsets rectangleInsets40 = categoryPlot4.getAxisOffset();
        org.jfree.chart.event.AxisChangeEvent axisChangeEvent41 = null;
        categoryPlot4.axisChanged(axisChangeEvent41);
        org.jfree.data.category.CategoryDataset categoryDataset43 = null;
        categoryPlot4.setDataset(categoryDataset43);
        org.jfree.chart.plot.Marker marker45 = null;
        boolean boolean46 = categoryPlot4.removeDomainMarker(marker45);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(axisLocation32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangleEdge39);
        org.junit.Assert.assertNotNull(rectangleInsets40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        double double7 = categoryPlot4.getAnchorValue();
        org.jfree.chart.util.Layer layer9 = null;
        java.util.Collection collection10 = categoryPlot4.getRangeMarkers((int) (byte) 0, layer9);
        org.jfree.data.event.DatasetChangeEvent datasetChangeEvent11 = null;
        categoryPlot4.datasetChanged(datasetChangeEvent11);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(collection10);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.lang.Comparable comparable9 = categoryPlot4.getDomainCrosshairRowKey();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        categoryPlot4.setRangeAxis((int) (byte) 1, valueAxis11, false);
        java.awt.Stroke stroke14 = categoryPlot4.getRangeMinorGridlineStroke();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNull(comparable9);
        org.junit.Assert.assertNotNull(stroke14);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        boolean boolean9 = categoryPlot4.isRangeCrosshairVisible();
        org.jfree.chart.util.ShadowGenerator shadowGenerator10 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.plot.PlotOrientation plotOrientation11 = categoryPlot4.getOrientation();
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        java.awt.Paint paint17 = categoryPlot16.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset18 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot(categoryDataset18, categoryAxis19, valueAxis20, categoryItemRenderer21);
        categoryPlot22.setRangeMinorGridlinesVisible(true);
        categoryPlot22.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint27 = categoryPlot22.getRangeMinorGridlinePaint();
        categoryPlot16.setRangeMinorGridlinePaint(paint27);
        boolean boolean29 = categoryPlot16.isRangeZeroBaselineVisible();
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        java.awt.Paint paint32 = categoryPlot16.getDomainCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset33 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis34 = null;
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer36 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = new org.jfree.chart.plot.CategoryPlot(categoryDataset33, categoryAxis34, valueAxis35, categoryItemRenderer36);
        java.awt.Paint paint38 = categoryPlot37.getRangeCrosshairPaint();
        categoryPlot37.setOutlineVisible(true);
        java.awt.Stroke stroke41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot37.setRangeCrosshairStroke(stroke41);
        categoryPlot37.setRangePannable(true);
        org.jfree.data.category.CategoryDataset categoryDataset46 = categoryPlot37.getDataset((int) 'a');
        org.jfree.chart.axis.CategoryAxis categoryAxis47 = null;
        java.util.List list48 = categoryPlot37.getCategoriesForAxis(categoryAxis47);
        categoryPlot37.clearRangeAxes();
        org.jfree.chart.LegendItemCollection legendItemCollection50 = categoryPlot37.getLegendItems();
        categoryPlot16.setFixedLegendItems(legendItemCollection50);
        categoryPlot4.setFixedLegendItems(legendItemCollection50);
        categoryPlot4.setBackgroundImageAlpha(0.0f);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shadowGenerator10);
        org.junit.Assert.assertNotNull(plotOrientation11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(stroke41);
        org.junit.Assert.assertNull(categoryDataset46);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(legendItemCollection50);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.panRangeAxes((double) 100L, plotRenderingInfo12, point2D13);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        java.awt.Paint paint20 = categoryPlot19.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset21 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer24 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = new org.jfree.chart.plot.CategoryPlot(categoryDataset21, categoryAxis22, valueAxis23, categoryItemRenderer24);
        categoryPlot25.setRangeMinorGridlinesVisible(true);
        categoryPlot25.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint30 = categoryPlot25.getRangeMinorGridlinePaint();
        categoryPlot19.setRangeMinorGridlinePaint(paint30);
        java.awt.Paint paint32 = categoryPlot19.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets33 = categoryPlot19.getInsets();
        java.lang.String str34 = categoryPlot19.getPlotType();
        org.jfree.chart.axis.AxisLocation axisLocation35 = categoryPlot19.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation36 = categoryPlot19.getDomainAxisLocation();
        categoryPlot4.setDomainAxisLocation(axisLocation36);
        org.jfree.chart.util.RectangleEdge rectangleEdge39 = categoryPlot4.getRangeAxisEdge((int) (byte) 1);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) 10);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(rectangleInsets33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Category Plot" + "'", str34, "Category Plot");
        org.junit.Assert.assertNotNull(axisLocation35);
        org.junit.Assert.assertNotNull(axisLocation36);
        org.junit.Assert.assertNotNull(rectangleEdge39);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) -1);
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot(categoryDataset13, categoryAxis14, valueAxis15, categoryItemRenderer16);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer19 = categoryPlot17.getRenderer(10);
        categoryPlot17.setNotify(true);
        org.jfree.chart.plot.Marker marker23 = null;
        org.jfree.chart.util.Layer layer24 = null;
        boolean boolean25 = categoryPlot17.removeDomainMarker((int) (short) 10, marker23, layer24);
        org.jfree.data.category.CategoryDataset categoryDataset27 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis28 = null;
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = new org.jfree.chart.plot.CategoryPlot(categoryDataset27, categoryAxis28, valueAxis29, categoryItemRenderer30);
        categoryPlot31.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator34 = categoryPlot31.getShadowGenerator();
        boolean boolean35 = categoryPlot31.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation36 = categoryPlot31.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation37 = categoryPlot31.getDomainAxisLocation();
        categoryPlot17.setRangeAxisLocation((int) (short) 0, axisLocation37, true);
        categoryPlot4.setRangeAxisLocation(0, axisLocation37);
        categoryPlot4.clearSelection();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNull(categoryItemRenderer19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shadowGenerator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(axisLocation36);
        org.junit.Assert.assertNotNull(axisLocation37);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        org.jfree.data.category.CategoryDataset categoryDataset13 = categoryPlot4.getDataset((int) 'a');
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot(categoryDataset14, categoryAxis15, valueAxis16, categoryItemRenderer17);
        categoryPlot18.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator21 = categoryPlot18.getShadowGenerator();
        boolean boolean22 = categoryPlot18.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation23 = categoryPlot18.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation24 = categoryPlot18.getDomainAxisLocation();
        categoryPlot4.setRangeAxisLocation(axisLocation24, true);
        org.jfree.data.category.CategoryDataset categoryDataset27 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis28 = null;
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = new org.jfree.chart.plot.CategoryPlot(categoryDataset27, categoryAxis28, valueAxis29, categoryItemRenderer30);
        java.awt.Paint paint32 = categoryPlot31.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge33 = categoryPlot31.getRangeAxisEdge();
        java.awt.Paint paint34 = categoryPlot31.getRangeCrosshairPaint();
        categoryPlot4.setRangeCrosshairPaint(paint34);
        int int36 = categoryPlot4.getDomainAxisCount();
        double double37 = categoryPlot4.getAnchorValue();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNull(categoryDataset13);
        org.junit.Assert.assertNotNull(shadowGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(axisLocation23);
        org.junit.Assert.assertNotNull(axisLocation24);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(rectangleEdge33);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = categoryPlot4.getDomainAxis();
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = categoryPlot4.getDomainAxis();
        boolean boolean7 = categoryPlot4.isNotify();
        categoryPlot4.setWeight(0);
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        categoryPlot4.setDomainAxis(0, categoryAxis11, false);
        org.junit.Assert.assertNull(categoryAxis5);
        org.junit.Assert.assertNull(categoryAxis6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = categoryPlot4.getInsets();
        java.lang.String str19 = categoryPlot4.getPlotType();
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        categoryPlot4.setDomainAxis(categoryAxis20);
        java.lang.String str22 = categoryPlot4.getNoDataMessage();
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        java.awt.Paint paint28 = categoryPlot27.getRangeCrosshairPaint();
        boolean boolean29 = categoryPlot27.isSubplot();
        categoryPlot27.setRangeCrosshairValue((double) 1, true);
        org.jfree.chart.plot.PlotOrientation plotOrientation33 = categoryPlot27.getOrientation();
        categoryPlot4.setOrientation(plotOrientation33);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Category Plot" + "'", str19, "Category Plot");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(plotOrientation33);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean8 = categoryPlot4.isOutlineVisible();
        boolean boolean9 = categoryPlot4.isRangeCrosshairVisible();
        org.jfree.chart.util.ShadowGenerator shadowGenerator10 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.plot.PlotOrientation plotOrientation11 = categoryPlot4.getOrientation();
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int13 = categoryPlot4.getRangeAxisIndex(valueAxis12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'axis' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shadowGenerator10);
        org.junit.Assert.assertNotNull(plotOrientation11);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        categoryPlot4.setRangeCrosshairVisible(true);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot(categoryDataset12, categoryAxis13, valueAxis14, categoryItemRenderer15);
        categoryPlot16.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator19 = categoryPlot16.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection20 = categoryPlot16.getLegendItems();
        java.awt.Paint paint21 = categoryPlot16.getRangeZeroBaselinePaint();
        boolean boolean22 = categoryPlot4.equals((java.lang.Object) categoryPlot16);
        java.awt.Font font23 = categoryPlot16.getNoDataMessageFont();
        java.awt.geom.Rectangle2D rectangle2D26 = null;
        org.jfree.chart.RenderingSource renderingSource27 = null;
        categoryPlot16.select(0.0d, (double) 1L, rectangle2D26, renderingSource27);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo30 = null;
        java.awt.geom.Point2D point2D31 = null;
        categoryPlot16.panDomainAxes((double) 0.0f, plotRenderingInfo30, point2D31);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(shadowGenerator19);
        org.junit.Assert.assertNotNull(legendItemCollection20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(font23);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        boolean boolean6 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot4.setDataset(categoryDataset7);
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot(categoryDataset9, categoryAxis10, valueAxis11, categoryItemRenderer12);
        java.awt.Paint paint14 = categoryPlot13.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge15 = categoryPlot13.getRangeAxisEdge();
        java.awt.Paint paint16 = categoryPlot13.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        java.util.List list18 = categoryPlot13.getCategoriesForAxis(categoryAxis17);
        categoryPlot13.setBackgroundImageAlignment((int) (byte) -1);
        categoryPlot13.setBackgroundImageAlpha((float) 1L);
        double double23 = categoryPlot13.getAnchorValue();
        java.awt.Stroke stroke24 = categoryPlot13.getRangeMinorGridlineStroke();
        categoryPlot4.setRangeGridlineStroke(stroke24);
        boolean boolean26 = categoryPlot4.isRangeGridlinesVisible();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(rectangleEdge15);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        java.util.List list7 = categoryPlot4.getCategories();
        categoryPlot4.setRangeCrosshairValue((double) '#');
        categoryPlot4.configureRangeAxes();
        categoryPlot4.clearRangeAxes();
        org.jfree.chart.plot.Marker marker12 = null;
        boolean boolean13 = categoryPlot4.removeDomainMarker(marker12);
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        categoryPlot4.setRangeAxis(10, valueAxis15, true);
        org.jfree.chart.axis.AxisSpace axisSpace18 = null;
        categoryPlot4.setFixedRangeAxisSpace(axisSpace18);
        org.junit.Assert.assertNull(list7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        categoryPlot4.setBackgroundImageAlignment((int) (byte) -1);
        categoryPlot4.setBackgroundImageAlpha((float) 1L);
        double double14 = categoryPlot4.getAnchorValue();
        boolean boolean15 = categoryPlot4.isSubplot();
        categoryPlot4.setAnchorValue((double) (byte) 10);
        java.lang.Object obj18 = categoryPlot4.clone();
        int int19 = categoryPlot4.getDomainAxisCount();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Image image8 = categoryPlot4.getBackgroundImage();
        java.awt.Paint paint9 = categoryPlot4.getRangeMinorGridlinePaint();
        boolean boolean10 = categoryPlot4.isRangeMinorGridlinesVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo13 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.handleClick((int) (short) 10, (int) (byte) 10, plotRenderingInfo13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        boolean boolean17 = categoryPlot4.isRangeZeroBaselineVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo19 = null;
        java.awt.geom.Point2D point2D20 = null;
        categoryPlot4.zoomRangeAxes(100.0d, plotRenderingInfo19, point2D20, true);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        java.awt.Paint paint28 = categoryPlot27.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge29 = categoryPlot27.getRangeAxisEdge();
        categoryPlot27.mapDatasetToDomainAxis((int) '#', (int) '#');
        boolean boolean33 = categoryPlot4.equals((java.lang.Object) categoryPlot27);
        categoryPlot27.setRangeZeroBaselineVisible(false);
        org.jfree.chart.axis.AxisSpace axisSpace36 = categoryPlot27.getFixedRangeAxisSpace();
        org.jfree.chart.axis.CategoryAnchor categoryAnchor37 = categoryPlot27.getDomainGridlinePosition();
        org.jfree.chart.axis.CategoryAxis categoryAxis39 = categoryPlot27.getDomainAxisForDataset((int) (short) 0);
        categoryPlot27.setRangePannable(false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(rectangleEdge29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(axisSpace36);
        org.junit.Assert.assertNotNull(categoryAnchor37);
        org.junit.Assert.assertNull(categoryAxis39);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        java.awt.Font font10 = categoryPlot4.getNoDataMessageFont();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        java.awt.geom.Point2D point2D13 = null;
        categoryPlot4.panRangeAxes((double) 100L, plotRenderingInfo12, point2D13);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        java.awt.Paint paint20 = categoryPlot19.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset21 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer24 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = new org.jfree.chart.plot.CategoryPlot(categoryDataset21, categoryAxis22, valueAxis23, categoryItemRenderer24);
        categoryPlot25.setRangeMinorGridlinesVisible(true);
        categoryPlot25.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint30 = categoryPlot25.getRangeMinorGridlinePaint();
        categoryPlot19.setRangeMinorGridlinePaint(paint30);
        java.awt.Paint paint32 = categoryPlot19.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets33 = categoryPlot19.getInsets();
        java.lang.String str34 = categoryPlot19.getPlotType();
        org.jfree.chart.axis.AxisLocation axisLocation35 = categoryPlot19.getDomainAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation36 = categoryPlot19.getDomainAxisLocation();
        categoryPlot4.setDomainAxisLocation(axisLocation36);
        org.jfree.chart.util.RectangleEdge rectangleEdge39 = categoryPlot4.getDomainAxisEdge(15);
        org.jfree.chart.LegendItemCollection legendItemCollection40 = categoryPlot4.getFixedLegendItems();
        java.lang.Object obj41 = categoryPlot4.clone();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(rectangleInsets33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Category Plot" + "'", str34, "Category Plot");
        org.junit.Assert.assertNotNull(axisLocation35);
        org.junit.Assert.assertNotNull(axisLocation36);
        org.junit.Assert.assertNotNull(rectangleEdge39);
        org.junit.Assert.assertNull(legendItemCollection40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        categoryPlot4.setForegroundAlpha(100.0f);
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        categoryPlot4.setRangeAxis((int) (byte) 100, valueAxis12, true);
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot4.setRangeCrosshairStroke(stroke8);
        categoryPlot4.setRangePannable(true);
        org.jfree.chart.axis.AxisLocation axisLocation13 = categoryPlot4.getRangeAxisLocation((int) (byte) -1);
        java.awt.Stroke stroke14 = categoryPlot4.getDomainGridlineStroke();
        org.jfree.chart.util.Layer layer16 = null;
        java.util.Collection collection17 = categoryPlot4.getRangeMarkers((int) (short) 1, layer16);
        org.jfree.data.category.CategoryDataset categoryDataset18 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot(categoryDataset18, categoryAxis19, valueAxis20, categoryItemRenderer21);
        java.awt.Paint paint23 = categoryPlot22.getRangeCrosshairPaint();
        categoryPlot22.setOutlineVisible(true);
        java.awt.Stroke stroke26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot22.setRangeCrosshairStroke(stroke26);
        categoryPlot4.setRangeCrosshairStroke(stroke26);
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) (short) 0);
        org.jfree.data.category.CategoryDataset categoryDataset31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot(categoryDataset31, categoryAxis32, valueAxis33, categoryItemRenderer34);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer37 = categoryPlot35.getRenderer(10);
        categoryPlot35.setNotify(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier40 = categoryPlot35.getDrawingSupplier();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo42 = null;
        java.awt.geom.Point2D point2D43 = null;
        categoryPlot35.panDomainAxes((double) (short) 0, plotRenderingInfo42, point2D43);
        int int45 = categoryPlot35.getCrosshairDatasetIndex();
        categoryPlot35.setDomainCrosshairColumnKey((java.lang.Comparable) 'a');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo49 = null;
        java.awt.geom.Point2D point2D50 = null;
        categoryPlot35.zoomRangeAxes((double) (byte) 0, plotRenderingInfo49, point2D50);
        org.jfree.data.category.CategoryDataset categoryDataset53 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis54 = null;
        org.jfree.chart.axis.ValueAxis valueAxis55 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer56 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot57 = new org.jfree.chart.plot.CategoryPlot(categoryDataset53, categoryAxis54, valueAxis55, categoryItemRenderer56);
        java.awt.Paint paint58 = categoryPlot57.getRangeCrosshairPaint();
        categoryPlot57.setOutlineVisible(true);
        java.awt.Stroke stroke61 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        categoryPlot57.setRangeCrosshairStroke(stroke61);
        categoryPlot57.setRangePannable(true);
        boolean boolean65 = categoryPlot57.canSelectByPoint();
        org.jfree.data.category.CategoryDataset categoryDataset66 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis67 = null;
        org.jfree.chart.axis.ValueAxis valueAxis68 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer69 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot70 = new org.jfree.chart.plot.CategoryPlot(categoryDataset66, categoryAxis67, valueAxis68, categoryItemRenderer69);
        categoryPlot70.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator73 = categoryPlot70.getShadowGenerator();
        boolean boolean74 = categoryPlot70.isDomainZoomable();
        org.jfree.chart.axis.AxisLocation axisLocation75 = categoryPlot70.getRangeAxisLocation();
        org.jfree.chart.axis.AxisLocation axisLocation76 = categoryPlot70.getDomainAxisLocation();
        org.jfree.data.category.CategoryDataset categoryDataset77 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis78 = null;
        org.jfree.chart.axis.ValueAxis valueAxis79 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer80 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot81 = new org.jfree.chart.plot.CategoryPlot(categoryDataset77, categoryAxis78, valueAxis79, categoryItemRenderer80);
        java.awt.Paint paint82 = categoryPlot81.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge83 = categoryPlot81.getRangeAxisEdge();
        java.awt.Paint paint84 = categoryPlot81.getRangeCrosshairPaint();
        org.jfree.chart.plot.PlotOrientation plotOrientation85 = categoryPlot81.getOrientation();
        org.jfree.chart.util.RectangleEdge rectangleEdge86 = org.jfree.chart.plot.Plot.resolveDomainAxisLocation(axisLocation76, plotOrientation85);
        categoryPlot57.setRangeAxisLocation(axisLocation76, false);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo90 = null;
        java.awt.geom.Point2D point2D91 = null;
        categoryPlot57.zoomRangeAxes((double) 100, plotRenderingInfo90, point2D91, false);
        org.jfree.chart.axis.AxisLocation axisLocation95 = categoryPlot57.getDomainAxisLocation((int) ' ');
        categoryPlot35.setRangeAxisLocation(1, axisLocation95);
        categoryPlot4.setRangeAxisLocation(axisLocation95);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(axisLocation13);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNull(collection17);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNull(categoryItemRenderer37);
        org.junit.Assert.assertNotNull(drawingSupplier40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertNotNull(stroke61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(shadowGenerator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(axisLocation75);
        org.junit.Assert.assertNotNull(axisLocation76);
        org.junit.Assert.assertNotNull(paint82);
        org.junit.Assert.assertNotNull(rectangleEdge83);
        org.junit.Assert.assertNotNull(paint84);
        org.junit.Assert.assertNotNull(plotOrientation85);
        org.junit.Assert.assertNotNull(rectangleEdge86);
        org.junit.Assert.assertNotNull(axisLocation95);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = categoryPlot4.getLegendItems();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        java.awt.geom.Point2D point2D11 = null;
        categoryPlot4.panRangeAxes((double) (short) 0, plotRenderingInfo10, point2D11);
        org.jfree.chart.plot.Marker marker13 = null;
        org.jfree.chart.util.Layer layer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = categoryPlot4.removeRangeMarker(marker13, layer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertNotNull(legendItemCollection8);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        java.util.List list9 = categoryPlot4.getCategoriesForAxis(categoryAxis8);
        org.jfree.chart.plot.Marker marker11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot4.addRangeMarker((int) (short) 0, marker11, layer12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(list9);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.data.Range range9 = categoryPlot4.getDataRange(valueAxis8);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent10 = null;
        categoryPlot4.rendererChanged(rendererChangeEvent10);
        boolean boolean12 = categoryPlot4.isRangeGridlinesVisible();
        org.jfree.chart.plot.Marker marker13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = categoryPlot4.removeRangeMarker(marker13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(range9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.lang.Object obj7 = categoryPlot4.clone();
        int int8 = categoryPlot4.getDomainAxisCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge10 = categoryPlot4.getRangeAxisEdge(1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge10);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer6 = categoryPlot4.getRenderer(10);
        categoryPlot4.setNotify(true);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        categoryPlot4.setRenderer(categoryItemRenderer9);
        categoryPlot4.setRangeCrosshairValue((double) '4', false);
        org.jfree.chart.axis.AxisSpace axisSpace14 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace14);
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer16 = null;
        categoryPlot4.setRenderer(categoryItemRenderer16, false);
        org.junit.Assert.assertNull(categoryItemRenderer6);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot(categoryDataset6, categoryAxis7, valueAxis8, categoryItemRenderer9);
        categoryPlot10.setRangeMinorGridlinesVisible(true);
        categoryPlot10.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint15 = categoryPlot10.getRangeMinorGridlinePaint();
        categoryPlot4.setRangeMinorGridlinePaint(paint15);
        java.awt.Paint paint17 = categoryPlot4.getRangeZeroBaselinePaint();
        boolean boolean18 = categoryPlot4.isDomainPannable();
        categoryPlot4.setAnchorValue(10.0d, true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        categoryPlot4.setRangeMinorGridlinesVisible(true);
        org.jfree.chart.util.ShadowGenerator shadowGenerator7 = categoryPlot4.getShadowGenerator();
        boolean boolean8 = categoryPlot4.isDomainZoomable();
        categoryPlot4.setForegroundAlpha(100.0f);
        org.jfree.chart.util.RectangleEdge rectangleEdge12 = categoryPlot4.getRangeAxisEdge((int) '#');
        boolean boolean13 = categoryPlot4.canSelectByRegion();
        org.jfree.chart.util.RectangleInsets rectangleInsets14 = categoryPlot4.getInsets();
        org.junit.Assert.assertNotNull(shadowGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rectangleEdge12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(rectangleInsets14);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.lang.Object obj7 = categoryPlot4.clone();
        java.awt.Graphics2D graphics2D8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        categoryPlot4.drawBackgroundImage(graphics2D8, rectangle2D9);
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = categoryPlot4.getDomainAxisEdge();
        java.awt.Image image12 = null;
        categoryPlot4.setBackgroundImage(image12);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(rectangleEdge11);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setOutlineVisible(true);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = categoryPlot4.getDomainAxisEdge();
        org.jfree.chart.axis.AxisLocation axisLocation9 = categoryPlot4.getDomainAxisLocation();
        boolean boolean10 = categoryPlot4.isSubplot();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot(categoryDataset11, categoryAxis12, valueAxis13, categoryItemRenderer14);
        java.awt.Paint paint16 = categoryPlot15.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot15.getRangeAxisEdge();
        double double18 = categoryPlot15.getAnchorValue();
        boolean boolean19 = categoryPlot15.isOutlineVisible();
        boolean boolean20 = categoryPlot4.equals((java.lang.Object) categoryPlot15);
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        categoryPlot4.setRangeAxis((int) '#', valueAxis22, true);
        org.jfree.chart.util.SortOrder sortOrder25 = categoryPlot4.getColumnRenderingOrder();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge8);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(rectangleEdge17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(sortOrder25);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.jfree.data.category.CategoryDataset categoryDataset0 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis1 = null;
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot(categoryDataset0, categoryAxis1, valueAxis2, categoryItemRenderer3);
        java.awt.Paint paint5 = categoryPlot4.getRangeCrosshairPaint();
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = categoryPlot4.getRangeAxisEdge();
        java.awt.Paint paint7 = categoryPlot4.getRangeCrosshairPaint();
        categoryPlot4.setDomainCrosshairRowKey((java.lang.Comparable) '4');
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot4.panRangeAxes((double) 1L, plotRenderingInfo11, point2D12);
        categoryPlot4.clearSelection();
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot(categoryDataset15, categoryAxis16, valueAxis17, categoryItemRenderer18);
        categoryPlot19.setRangeCrosshairValue((double) (byte) 1, true);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot(categoryDataset23, categoryAxis24, valueAxis25, categoryItemRenderer26);
        java.awt.Paint paint28 = categoryPlot27.getRangeCrosshairPaint();
        org.jfree.data.category.CategoryDataset categoryDataset29 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis30 = null;
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.renderer.category.CategoryItemRenderer categoryItemRenderer32 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot(categoryDataset29, categoryAxis30, valueAxis31, categoryItemRenderer32);
        categoryPlot33.setRangeMinorGridlinesVisible(true);
        categoryPlot33.setDomainCrosshairColumnKey((java.lang.Comparable) 100.0f);
        java.awt.Paint paint38 = categoryPlot33.getRangeMinorGridlinePaint();
        categoryPlot27.setRangeMinorGridlinePaint(paint38);
        java.awt.Paint paint40 = categoryPlot27.getRangeZeroBaselinePaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets41 = categoryPlot27.getInsets();
        categoryPlot19.setInsets(rectangleInsets41);
        categoryPlot4.setInsets(rectangleInsets41, true);
        boolean boolean45 = categoryPlot4.isDomainGridlinesVisible();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNotNull(rectangleInsets41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }
}

